
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.11.0.396.4

// ldbanno -n Verilog -o digital_clock_impl1_vo.vo -w -neg -gui digital_clock_impl1.ncd 
// Netlist created on Tue Nov 17 21:15:37 2020
// Netlist written on Tue Nov 17 21:15:53 2020
// Design is for device LCMXO2-4000HC
// Design is for package CSBGA132
// Design is for performance grade 4

`timescale 1 ns / 1 ps

module electricalClock ( clk, rst_key, mode_key, up_key, down_key, modedisplay, 
                         secDisp, PortA, PortB, din, sck, rck );
  input  clk, rst_key, mode_key, up_key, down_key, PortA, PortB;
  output [3:0] modedisplay;
  output secDisp, din, sck, rck;
  wire   \dt/shift_clock_cnt_8 , \dt/shift_clock_cnt_7 , \dt/n157 , \dt/n158 , 
         \dt/n3123 , clk_c, \dt/n5970 , \dt/n5971 , \dt/shift_clock_cnt_6 , 
         \dt/shift_clock_cnt_5 , \dt/n159 , \dt/n160 , \dt/n5969 , 
         \dt/shift_clock_cnt_4 , \dt/shift_clock_cnt_3 , \dt/n161 , \dt/n162 , 
         \dt/n5968 , \dt/shift_clock_cnt_2 , \dt/shift_clock_cnt_1 , \dt/n163 , 
         \dt/n164 , \dt/n5967 , \dt/shift_clock_cnt_0 , \dt/n165 , 
         \dt/shift_clock_cnt_31 , \dt/n134 , \dt/n5982 , 
         \dt/shift_clock_cnt_30 , \dt/shift_clock_cnt_29 , \dt/n135 , 
         \dt/n136 , \dt/n5981 , \dt/shift_clock_cnt_28 , 
         \dt/shift_clock_cnt_27 , \dt/n137 , \dt/n138 , \dt/n5980 , 
         \dt/shift_clock_cnt_26 , \dt/shift_clock_cnt_25 , \dt/n139 , 
         \dt/n140 , \dt/n5979 , \dt/shift_clock_cnt_24 , 
         \dt/shift_clock_cnt_23 , \dt/n141 , \dt/n142 , \dt/n5978 , 
         \dt/shift_clock_cnt_22 , \dt/shift_clock_cnt_21 , \dt/n143 , 
         \dt/n144 , \dt/n5977 , \dt/shift_clock_cnt_20 , 
         \dt/shift_clock_cnt_19 , \dt/n145 , \dt/n146 , \dt/n5976 , 
         \dt/shift_clock_cnt_18 , \dt/shift_clock_cnt_17 , \dt/n147 , 
         \dt/n148 , \dt/n5975 , \dt/shift_clock_cnt_16 , 
         \dt/shift_clock_cnt_15 , \dt/n149 , \dt/n150 , \dt/n5974 , 
         \dt/shift_clock_cnt_14 , \dt/shift_clock_cnt_13 , \dt/n151 , 
         \dt/n152 , \dt/n5973 , \dt/shift_clock_cnt_12 , 
         \dt/shift_clock_cnt_11 , \dt/n153 , \dt/n154 , \dt/n5972 , 
         \dt/shift_clock_cnt_10 , \dt/shift_clock_cnt_9 , \dt/n155 , \dt/n156 , 
         \rstkey/keysamplerpulsecnt_0 , \rstkey/n165 , \rstkey/n3118 , 
         \rstkey/n5903 , \rstkey/keysamplerpulsecnt_31 , \rstkey/n134 , 
         \rstkey/n5918 , \rstkey/keysamplerpulsecnt_30 , 
         \rstkey/keysamplerpulsecnt_29 , \rstkey/n135 , \rstkey/n136 , 
         \rstkey/n5917 , \rstkey/keysamplerpulsecnt_28 , 
         \rstkey/keysamplerpulsecnt_27 , \rstkey/n137 , \rstkey/n138 , 
         \rstkey/n5916 , \rstkey/keysamplerpulsecnt_26 , 
         \rstkey/keysamplerpulsecnt_25 , \rstkey/n139 , \rstkey/n140 , 
         \rstkey/n5915 , \rstkey/keysamplerpulsecnt_24 , 
         \rstkey/keysamplerpulsecnt_23 , \rstkey/n141 , \rstkey/n142 , 
         \rstkey/n5914 , \rstkey/keysamplerpulsecnt_22 , 
         \rstkey/keysamplerpulsecnt_21 , \rstkey/n143 , \rstkey/n144 , 
         \rstkey/n5913 , \rstkey/keysamplerpulsecnt_20 , 
         \rstkey/keysamplerpulsecnt_19 , \rstkey/n145 , \rstkey/n146 , 
         \rstkey/n5912 , \rstkey/keysamplerpulsecnt_18 , 
         \rstkey/keysamplerpulsecnt_17 , \rstkey/n147 , \rstkey/n148 , 
         \rstkey/n5911 , \rstkey/keysamplerpulsecnt_16 , 
         \rstkey/keysamplerpulsecnt_15 , \rstkey/n149 , \rstkey/n150 , 
         \rstkey/n5910 , \rstkey/keysamplerpulsecnt_14 , 
         \rstkey/keysamplerpulsecnt_13 , \rstkey/n151 , \rstkey/n152 , 
         \rstkey/n5909 , \rstkey/keysamplerpulsecnt_12 , 
         \rstkey/keysamplerpulsecnt_11 , \rstkey/n153 , \rstkey/n154 , 
         \rstkey/n5908 , \rstkey/keysamplerpulsecnt_10 , 
         \rstkey/keysamplerpulsecnt_9 , \rstkey/n155 , \rstkey/n156 , 
         \rstkey/n5907 , \rstkey/keysamplerpulsecnt_8 , 
         \rstkey/keysamplerpulsecnt_7 , \rstkey/n157 , \rstkey/n158 , 
         \rstkey/n5906 , \rstkey/keysamplerpulsecnt_6 , 
         \rstkey/keysamplerpulsecnt_5 , \rstkey/n159 , \rstkey/n160 , 
         \rstkey/n5905 , \rstkey/keysamplerpulsecnt_4 , 
         \rstkey/keysamplerpulsecnt_3 , \rstkey/n161 , \rstkey/n162 , 
         \rstkey/n5904 , \rstkey/keysamplerpulsecnt_2 , 
         \rstkey/keysamplerpulsecnt_1 , \rstkey/n163 , \rstkey/n164 , 
         \secondGen/seccnt_10 , \secondGen/seccnt_9 , \secondGen/n155 , 
         \secondGen/n156 , \secondGen/n3117 , \secondGen/n5891 , 
         \secondGen/n5892 , \secondGen/seccnt_31 , \secondGen/n134 , 
         \secondGen/n5902 , \secondGen/seccnt_8 , \secondGen/seccnt_7 , 
         \secondGen/n157 , \secondGen/n158 , \secondGen/n5890 , 
         \secondGen/seccnt_30 , \secondGen/seccnt_29 , \secondGen/n135 , 
         \secondGen/n136 , \secondGen/n5901 , \secondGen/seccnt_28 , 
         \secondGen/seccnt_27 , \secondGen/n137 , \secondGen/n138 , 
         \secondGen/n5900 , \secondGen/seccnt_26 , \secondGen/seccnt_25 , 
         \secondGen/n139 , \secondGen/n140 , \secondGen/n5899 , 
         \secondGen/seccnt_6 , \secondGen/seccnt_5 , \secondGen/n159 , 
         \secondGen/n160 , \secondGen/n5889 , \secondGen/seccnt_24 , 
         \secondGen/seccnt_23 , \secondGen/n141 , \secondGen/n142 , 
         \secondGen/n5898 , \secondGen/seccnt_4 , \secondGen/seccnt_3 , 
         \secondGen/n161 , \secondGen/n162 , \secondGen/n5888 , 
         \secondGen/seccnt_22 , \secondGen/seccnt_21 , \secondGen/n143 , 
         \secondGen/n144 , \secondGen/n5897 , \secondGen/seccnt_20 , 
         \secondGen/seccnt_19 , \secondGen/n145 , \secondGen/n146 , 
         \secondGen/n5896 , \secondGen/seccnt_2 , \secondGen/seccnt_1 , 
         \secondGen/n163 , \secondGen/n164 , \secondGen/n5887 , 
         \secondGen/seccnt_18 , \secondGen/seccnt_17 , \secondGen/n147 , 
         \secondGen/n148 , \secondGen/n5895 , \secondGen/seccnt_16 , 
         \secondGen/seccnt_15 , \secondGen/n149 , \secondGen/n150 , 
         \secondGen/n5894 , \secondGen/seccnt_0 , \secondGen/n165 , 
         \secondGen/seccnt_14 , \secondGen/seccnt_13 , \secondGen/n151 , 
         \secondGen/n152 , \secondGen/n5893 , \secondGen/seccnt_12 , 
         \secondGen/seccnt_11 , \secondGen/n153 , \secondGen/n154 , 
         \modekey/keysamplerpulsecnt_31 , \modekey/n134 , \modekey/n3119 , 
         \modekey/n5934 , \modekey/keysamplerpulsecnt_30 , 
         \modekey/keysamplerpulsecnt_29 , \modekey/n135 , \modekey/n136 , 
         \modekey/n5933 , \modekey/keysamplerpulsecnt_28 , 
         \modekey/keysamplerpulsecnt_27 , \modekey/n137 , \modekey/n138 , 
         \modekey/n5932 , \modekey/keysamplerpulsecnt_26 , 
         \modekey/keysamplerpulsecnt_25 , \modekey/n139 , \modekey/n140 , 
         \modekey/n5931 , \modekey/keysamplerpulsecnt_24 , 
         \modekey/keysamplerpulsecnt_23 , \modekey/n141 , \modekey/n142 , 
         \modekey/n5930 , \modekey/keysamplerpulsecnt_22 , 
         \modekey/keysamplerpulsecnt_21 , \modekey/n143 , \modekey/n144 , 
         \modekey/n5929 , \modekey/keysamplerpulsecnt_20 , 
         \modekey/keysamplerpulsecnt_19 , \modekey/n145 , \modekey/n146 , 
         \modekey/n5928 , \modekey/keysamplerpulsecnt_18 , 
         \modekey/keysamplerpulsecnt_17 , \modekey/n147 , \modekey/n148 , 
         \modekey/n5927 , \modekey/keysamplerpulsecnt_16 , 
         \modekey/keysamplerpulsecnt_15 , \modekey/n149 , \modekey/n150 , 
         \modekey/n5926 , \modekey/keysamplerpulsecnt_14 , 
         \modekey/keysamplerpulsecnt_13 , \modekey/n151 , \modekey/n152 , 
         \modekey/n5925 , \modekey/keysamplerpulsecnt_12 , 
         \modekey/keysamplerpulsecnt_11 , \modekey/n153 , \modekey/n154 , 
         \modekey/n5924 , \modekey/keysamplerpulsecnt_10 , 
         \modekey/keysamplerpulsecnt_9 , \modekey/n155 , \modekey/n156 , 
         \modekey/n5923 , \modekey/keysamplerpulsecnt_8 , 
         \modekey/keysamplerpulsecnt_7 , \modekey/n157 , \modekey/n158 , 
         \modekey/n5922 , \modekey/keysamplerpulsecnt_6 , 
         \modekey/keysamplerpulsecnt_5 , \modekey/n159 , \modekey/n160 , 
         \modekey/n5921 , \modekey/keysamplerpulsecnt_4 , 
         \modekey/keysamplerpulsecnt_3 , \modekey/n161 , \modekey/n162 , 
         \modekey/n5920 , \modekey/keysamplerpulsecnt_2 , 
         \modekey/keysamplerpulsecnt_1 , \modekey/n163 , \modekey/n164 , 
         \modekey/n5919 , \modekey/keysamplerpulsecnt_0 , \modekey/n165 , 
         \downkey/keysamplerpulsecnt_4 , \downkey/keysamplerpulsecnt_3 , 
         \downkey/n161 , \downkey/n162 , \downkey/n3122 , \downkey/n5952 , 
         \downkey/n5953 , \downkey/keysamplerpulsecnt_2 , 
         \downkey/keysamplerpulsecnt_1 , \downkey/n163 , \downkey/n164 , 
         \downkey/n5951 , \downkey/keysamplerpulsecnt_0 , \downkey/n165 , 
         \downkey/keysamplerpulsecnt_31 , \downkey/n134 , \downkey/n5966 , 
         \downkey/keysamplerpulsecnt_30 , \downkey/keysamplerpulsecnt_29 , 
         \downkey/n135 , \downkey/n136 , \downkey/n5965 , 
         \downkey/keysamplerpulsecnt_28 , \downkey/keysamplerpulsecnt_27 , 
         \downkey/n137 , \downkey/n138 , \downkey/n5964 , 
         \downkey/keysamplerpulsecnt_26 , \downkey/keysamplerpulsecnt_25 , 
         \downkey/n139 , \downkey/n140 , \downkey/n5963 , 
         \downkey/keysamplerpulsecnt_24 , \downkey/keysamplerpulsecnt_23 , 
         \downkey/n141 , \downkey/n142 , \downkey/n5962 , 
         \downkey/keysamplerpulsecnt_22 , \downkey/keysamplerpulsecnt_21 , 
         \downkey/n143 , \downkey/n144 , \downkey/n5961 , 
         \downkey/keysamplerpulsecnt_20 , \downkey/keysamplerpulsecnt_19 , 
         \downkey/n145 , \downkey/n146 , \downkey/n5960 , 
         \downkey/keysamplerpulsecnt_18 , \downkey/keysamplerpulsecnt_17 , 
         \downkey/n147 , \downkey/n148 , \downkey/n5959 , 
         \downkey/keysamplerpulsecnt_16 , \downkey/keysamplerpulsecnt_15 , 
         \downkey/n149 , \downkey/n150 , \downkey/n5958 , 
         \downkey/keysamplerpulsecnt_14 , \downkey/keysamplerpulsecnt_13 , 
         \downkey/n151 , \downkey/n152 , \downkey/n5957 , 
         \downkey/keysamplerpulsecnt_12 , \downkey/keysamplerpulsecnt_11 , 
         \downkey/n153 , \downkey/n154 , \downkey/n5956 , 
         \downkey/keysamplerpulsecnt_10 , \downkey/keysamplerpulsecnt_9 , 
         \downkey/n155 , \downkey/n156 , \downkey/n5955 , 
         \downkey/keysamplerpulsecnt_8 , \downkey/keysamplerpulsecnt_7 , 
         \downkey/n157 , \downkey/n158 , \downkey/n5954 , 
         \downkey/keysamplerpulsecnt_6 , \downkey/keysamplerpulsecnt_5 , 
         \downkey/n159 , \downkey/n160 , \upkey/keysamplerpulsecnt_31 , 
         \upkey/n134 , \upkey/n3121 , \upkey/n5950 , 
         \upkey/keysamplerpulsecnt_30 , \upkey/keysamplerpulsecnt_29 , 
         \upkey/n135 , \upkey/n136 , \upkey/n5949 , 
         \upkey/keysamplerpulsecnt_28 , \upkey/keysamplerpulsecnt_27 , 
         \upkey/n137 , \upkey/n138 , \upkey/n5948 , 
         \upkey/keysamplerpulsecnt_26 , \upkey/keysamplerpulsecnt_25 , 
         \upkey/n139 , \upkey/n140 , \upkey/n5947 , 
         \upkey/keysamplerpulsecnt_24 , \upkey/keysamplerpulsecnt_23 , 
         \upkey/n141 , \upkey/n142 , \upkey/n5946 , 
         \upkey/keysamplerpulsecnt_22 , \upkey/keysamplerpulsecnt_21 , 
         \upkey/n143 , \upkey/n144 , \upkey/n5945 , 
         \upkey/keysamplerpulsecnt_20 , \upkey/keysamplerpulsecnt_19 , 
         \upkey/n145 , \upkey/n146 , \upkey/n5944 , 
         \upkey/keysamplerpulsecnt_18 , \upkey/keysamplerpulsecnt_17 , 
         \upkey/n147 , \upkey/n148 , \upkey/n5943 , 
         \upkey/keysamplerpulsecnt_16 , \upkey/keysamplerpulsecnt_15 , 
         \upkey/n149 , \upkey/n150 , \upkey/n5942 , 
         \upkey/keysamplerpulsecnt_14 , \upkey/keysamplerpulsecnt_13 , 
         \upkey/n151 , \upkey/n152 , \upkey/n5941 , 
         \upkey/keysamplerpulsecnt_12 , \upkey/keysamplerpulsecnt_11 , 
         \upkey/n153 , \upkey/n154 , \upkey/n5940 , 
         \upkey/keysamplerpulsecnt_10 , \upkey/keysamplerpulsecnt_9 , 
         \upkey/n155 , \upkey/n156 , \upkey/n5939 , 
         \upkey/keysamplerpulsecnt_8 , \upkey/keysamplerpulsecnt_7 , 
         \upkey/n157 , \upkey/n158 , \upkey/n5938 , 
         \upkey/keysamplerpulsecnt_6 , \upkey/keysamplerpulsecnt_5 , 
         \upkey/n159 , \upkey/n160 , \upkey/n5937 , 
         \upkey/keysamplerpulsecnt_4 , \upkey/keysamplerpulsecnt_3 , 
         \upkey/n161 , \upkey/n162 , \upkey/n5936 , 
         \upkey/keysamplerpulsecnt_2 , \upkey/keysamplerpulsecnt_1 , 
         \upkey/n163 , \upkey/n164 , \upkey/n5935 , 
         \upkey/keysamplerpulsecnt_0 , \upkey/n165 , \re/act_cache_tmp , 
         PortB_c, \re/n17 , \re/n6772 , \re/clk_c_enable_14 , \re/n4541 , 
         act_of_re_0, act_of_re_31, \controller/moderec_0 , 
         \controller/moderec_1 , \controller/n14 , \controller/n7638 , 
         \controller/moderec_1__N_149 , \tm/n7650 , \tm/n7606 , \tm/n7646 , 
         \tm/n6950 , \tm/n7602 , ctrlcode595_17, \tm/n4_adj_385 , \tm/n2592 , 
         \tm/n2752 , \tm/clk_c_enable_38 , \dt/n7621 , \dt/rck_N_376 , 
         \dt/n6256 , \dt/n372 , \dt/codeP_2 , \dt/n4 , \dt/codeP_1 , 
         \dt/n7078 , \dt/din_N_365 , \dt/din_N_372 , din_c, 
         \downkey/keystore_1 , \downkey/keystore_0 , \downkey/keystore_2 , 
         \downkey/keystate_N_142 , \downkey/keysamplerpulse , down_key_state, 
         \downkey/keysamplerpulse_ls , \downkey/n7025 , \downkey/n9 , 
         \downkey/keysamplerpulse_N_144 , down_key_c, \downkey/btnstate_N_138 , 
         \downkey/keystore_2__N_139 , \dt/n370 , \dt/shift_clock_ls , sck_c, 
         \dt/clk_c_enable_57 , \dt/codeP_0 , \dt/n8 , \dt/n2337 , \dt/n3124 , 
         \dt/n6782 , \dt/n3 , hLRec0_3, mode_0, \tm/hHRec0_0 , hH_0, 
         \tm/n6029 , \tm/n3120 , \tm/n1590 , \tm/n22 , n547, \tm/n7620 , hL_2, 
         \tm/n23_adj_390 , hL_1, \tm/n1325 , \tm/n1326 , \tm/clk_c_enable_48 , 
         hLRec0_1, hLRec0_2, \tm/hLRec0_0 , hL_3, n13, n8077, clk_c_enable_53, 
         n6518, hL_0, \tm/n5660 , \tm/n977 , \tm/n1606 , \tm/n6117 , 
         \tm/n6031 , \tm/clk_c_enable_40 , \tm/n6_adj_380 , \tm/n5656 , 
         \tm/n5658 , \tm/n6935 , \tm/n6952 , \tm/n6129 , \tm/n6130 , mode_1, 
         mHRec0_0, mH_0, n1840, \tm/clk_c_enable_55 , \tm/n1101 , \tm/n5676 , 
         \tm/n1006 , mH_1, \tm/n6897 , \tm/n6127 , \tm/n20_adj_388 , 
         \tm/clk_c_enable_42 , \tm/n1099 , \tm/n580 , \tm/n6939 , \tm/n5674 , 
         mH_2, \tm/n6125 , \tm/mLRec0_1 , mLRec0_0, mL_0, n1208, 
         clk_c_enable_60, \tm/n62 , \tm/n4_adj_394 , mL_2, \tm/n5667 , 
         \tm/n1022 , \tm/n10 , \tm/n6120 , \tm/n8 , \tm/clk_c_enable_41 , 
         \tm/n7636 , \tm/n7635 , mL_1, \tm/n7561 , \tm/n1905 , \tm/n7607 , 
         \tm/n7623 , \tm/n5665 , \tm/n6_adj_379 , mL_3, \tm/n6119 , 
         \modekey/keystore_1 , \modekey/keystore_2 , \modekey/keystore_0 , 
         \modekey/keystate_N_142 , \modekey/keysamplerpulse , mode_key_state, 
         \modekey/keysamplerpulse_ls , \modekey/n7029 , \modekey/n9 , 
         \modekey/keysamplerpulse_N_144 , mode_key_c, \modekey/btnstate_N_138 , 
         \modekey/keystore_2__N_139 , PortA_c, \upkey/n40 , \re/PA_ls , n7628, 
         \re/clk_c_enable_10 , \upkey/n7027 , \upkey/n43 , \re/int_times , 
         \re/n3115 , \upkey/keysamplerpulse_ls , \upkey/keysamplerpulse , 
         \rstkey/keystore_0 , \rstkey/keystore_1 , \rstkey/keystore_2 , 
         \rstkey/keystate_N_142 , rst_key_state, \upkey/keystore_2__N_139 , 
         \rstkey/n49 , \rstkey/n50 , \rstkey/keysamplerpulse , 
         \rstkey/keysamplerpulse_N_144 , \downkey/n40 , 
         \rstkey/keysamplerpulse_ls , rst_key_c, \rstkey/btnstate_N_138 , 
         \rstkey/keystore_2__N_139 , \downkey/n43 , \modekey/n40 , sH_2, n4434, 
         sH_0, sHRec0_0, n1453, n1455, clk_c_enable_50, sHRec0_2, \tm/n992 , 
         \tm/n5651 , sH_1, \tm/n6074 , n1262, \tm/n6126 , \tm/n20_adj_387 , 
         \tm/clk_c_enable_39 , n1260, \tm/n7605 , \tm/n5649 , \tm/n6945 , 
         \tm/n6121 , sLRec0_0, sL_0, n1773, \tm/n1039 , \tm/n5637 , 
         \tm/n4_adj_384 , sL_2, \tm/n2956 , \tm/n1852 , \tm/n6122 , \tm/n6028 , 
         \tm/clk_c_enable_45 , \tm/sLRec0_1 , sL_1, \tm/n7498 , \tm/n1849 , 
         \tm/n5635 , \tm/n6_adj_386 , sL_3, \tm/n6118 , \dt/n7159 , \dt/n50 , 
         \dt/n49 , \dt/n58 , \dt/sck_N_375 , \secondGen/n43 , \secondGen/n44 , 
         sec, \secondGen/clk_out_N_68 , sec_N_2, secDisp_c, \modekey/n43 , 
         sec_ls, \secondGen/n32 , \tm/downkey_ls , \secondGen/n38 , n6832, 
         \tm/n17 , \tm/n1393 , \tm/n1394 , \tm/clk_c_enable_61 , \tm/hHRec0_1 , 
         n6889, n1336, \tm/n1327 , \tm/mHRec0_2 , \tm/n7666 , \tm/mHRec0_1 , 
         n9_adj_398, n6684, \tm/n7661 , \tm/n9 , \tm/n7663 , \tm/n1207 , 
         \tm/mLRec0_3 , \tm/mLRec0_2 , \tm/n7660 , \tm/sHRec0_1 , n4439, n1454, 
         \tm/n7673 , \tm/n111 , n7, \tm/n7675 , \tm/n1772 , \tm/sLRec0_3 , 
         \tm/sLRec0_2 , \tm/n7669 , up_key_state, \rstkey/n44 , \tm/upkey_ls , 
         \rstkey/n7003 , \upkey/keystore_2 , \upkey/keystore_0 , 
         \upkey/keystore_1 , \upkey/keystate_N_142 , \upkey/n9 , 
         \upkey/keysamplerpulse_N_144 , \dt/n56 , \dt/n51 , 
         \controller/modekey_ls , up_key_c, \upkey/btnstate_N_138 , \tm/n7627 , 
         \tm/n23 , \tm/n7614 , \tm/n7613 , \tm/n16 , \tm/n3008 , \tm/n7610 , 
         \tm/n7624 , \tm/n6_adj_378 , \tm/n257 , \tm/n7465 , \dt/n2673 , 
         \dt/n7631 , \dt/n375 , \dt/n6_adj_377 , \dt/n6940 , \dt/n7609 , 
         \dt/n7077 , \dt/n7076 , \dt/n2688 , \dt/n7653 , \dt/n374 , \dt/n373 , 
         \dt/n3090 , \dt/n3083 , \dt/n6 , \dt/n371 , \dt/n7619 , \dt/n3088 , 
         \dt/n379 , \dt/n7477 , \dt/n378 , \dt/n2576 , ctrlcode595_68, 
         ctrlcode595_69, \dt/n380 , \dt/n7052 , \dt/n7672 , \dt/n2680 , 
         ctrlcode595_37, ctrlcode595_36, \dt/n3086 , \dt/n7684 , \dt/n7449 , 
         ctrlcode595_4, ctrlcode595_5, \dt/n7472 , \dt/n7493 , \dt/n2687 , 
         \dt/n383 , \dt/n7071 , \dt/n2672 , \dt/n7475 , \dt/n7494 , \dt/n7447 , 
         \dt/n7080 , \dt/n382 , \dt/n7681 , \dt/n7678 , n381, n2658, n3082, 
         \tm/n6 , n4642, \tm/n6937 , \tm/n14 , \tm/n2989 , \tm/n7648 , 
         \tm/n2339 , \tm/n13 , \tm/n5644 , \tm/n6870 , \tm/n7645 , \tm/n6226 , 
         \tm/n1753 , \tm/n20 , \tm/n6969 , \tm/n7651 , \tm/n22_adj_381 , 
         \tm/n6_adj_383 , n4547, \tm/n12 , \tm/n6943 , \tm/n16_adj_382 , 
         \tm/n7634 , n7626, \tm/n2341 , n7616, \tm/n6927 , \tm/n6963 , 
         \tm/n7649 , \tm/n7629 , \tm/n7647 , \tm/n7608 , \tm/n7617 , 
         ctrlcode595_35, \tm/n7604 , \tm/n7644 , \tm/n4 , \tm/n7618 , 
         \tm/n7630 , \tm/n7622 , \tm/n1605 , \tm/n6837 , \tm/n7615 , 
         \tm/n7637 , \tm/n7612 , \tm/n10_adj_389 , n6828, n9, \tm/n7603 , 
         \tm/n4_adj_396 , \tm/n7642 , \controller/n7 , \dt/n377 , \dt/n7632 , 
         \dt/n7328 , \dt/n7329 , \dt/n384 , \dt/n7652 , \dt/n6102 , \dt/n376 , 
         ctrlcode595_67, \dt/n41 , \dt/n54 , \dt/n60 , \dt/n42 , \dt/n39 , 
         \dt/n46 , \rstkey/n45 , \rstkey/n7031 , \rstkey/n40 , 
         \dt/clk_c_enable_28 , \rstkey/n48 , \rstkey/n29 , \rstkey/n42 , 
         \rstkey/n30 , \rstkey/n34 , \secondGen/n40 , \secondGen/n36 , 
         \secondGen/n42 , \secondGen/n24 , \secondGen/n7033 , 
         \secondGen/n6961 , \secondGen/n7019 , \secondGen/n28 , \modekey/n42 , 
         \modekey/n32 , \modekey/n45 , \modekey/n46 , \modekey/n47 , 
         \modekey/n38 , \modekey/n28 , \downkey/n32 , \downkey/n42 , 
         \downkey/n46 , \downkey/n47 , \downkey/n45 , \downkey/n38 , 
         \downkey/n28 , \upkey/n42 , \upkey/n32 , \upkey/n45 , \upkey/n47 , 
         \upkey/n46 , \upkey/n38 , \upkey/n28 , modedisplay_c_0, 
         modedisplay_c_1, modedisplay_c_2, modedisplay_c_3, rck_c, VCCI;

  dt_SLICE_0 \dt/SLICE_0 ( .A1(\dt/shift_clock_cnt_8 ), 
    .A0(\dt/shift_clock_cnt_7 ), .DI1(\dt/n157 ), .DI0(\dt/n158 ), 
    .LSR(\dt/n3123 ), .CLK(clk_c), .FCI(\dt/n5970 ), .F0(\dt/n158 ), 
    .Q0(\dt/shift_clock_cnt_7 ), .F1(\dt/n157 ), .Q1(\dt/shift_clock_cnt_8 ), 
    .FCO(\dt/n5971 ));
  dt_SLICE_1 \dt/SLICE_1 ( .A1(\dt/shift_clock_cnt_6 ), 
    .A0(\dt/shift_clock_cnt_5 ), .DI1(\dt/n159 ), .DI0(\dt/n160 ), 
    .LSR(\dt/n3123 ), .CLK(clk_c), .FCI(\dt/n5969 ), .F0(\dt/n160 ), 
    .Q0(\dt/shift_clock_cnt_5 ), .F1(\dt/n159 ), .Q1(\dt/shift_clock_cnt_6 ), 
    .FCO(\dt/n5970 ));
  dt_SLICE_2 \dt/SLICE_2 ( .A1(\dt/shift_clock_cnt_4 ), 
    .A0(\dt/shift_clock_cnt_3 ), .DI1(\dt/n161 ), .DI0(\dt/n162 ), 
    .LSR(\dt/n3123 ), .CLK(clk_c), .FCI(\dt/n5968 ), .F0(\dt/n162 ), 
    .Q0(\dt/shift_clock_cnt_3 ), .F1(\dt/n161 ), .Q1(\dt/shift_clock_cnt_4 ), 
    .FCO(\dt/n5969 ));
  dt_SLICE_3 \dt/SLICE_3 ( .A1(\dt/shift_clock_cnt_2 ), 
    .A0(\dt/shift_clock_cnt_1 ), .DI1(\dt/n163 ), .DI0(\dt/n164 ), 
    .LSR(\dt/n3123 ), .CLK(clk_c), .FCI(\dt/n5967 ), .F0(\dt/n164 ), 
    .Q0(\dt/shift_clock_cnt_1 ), .F1(\dt/n163 ), .Q1(\dt/shift_clock_cnt_2 ), 
    .FCO(\dt/n5968 ));
  dt_SLICE_4 \dt/SLICE_4 ( .A1(\dt/shift_clock_cnt_0 ), .DI1(\dt/n165 ), 
    .LSR(\dt/n3123 ), .CLK(clk_c), .F1(\dt/n165 ), .Q1(\dt/shift_clock_cnt_0 ), 
    .FCO(\dt/n5967 ));
  dt_SLICE_5 \dt/SLICE_5 ( .A0(\dt/shift_clock_cnt_31 ), .DI0(\dt/n134 ), 
    .LSR(\dt/n3123 ), .CLK(clk_c), .FCI(\dt/n5982 ), .F0(\dt/n134 ), 
    .Q0(\dt/shift_clock_cnt_31 ));
  dt_SLICE_6 \dt/SLICE_6 ( .A1(\dt/shift_clock_cnt_30 ), 
    .A0(\dt/shift_clock_cnt_29 ), .DI1(\dt/n135 ), .DI0(\dt/n136 ), 
    .LSR(\dt/n3123 ), .CLK(clk_c), .FCI(\dt/n5981 ), .F0(\dt/n136 ), 
    .Q0(\dt/shift_clock_cnt_29 ), .F1(\dt/n135 ), .Q1(\dt/shift_clock_cnt_30 ), 
    .FCO(\dt/n5982 ));
  dt_SLICE_7 \dt/SLICE_7 ( .A1(\dt/shift_clock_cnt_28 ), 
    .A0(\dt/shift_clock_cnt_27 ), .DI1(\dt/n137 ), .DI0(\dt/n138 ), 
    .LSR(\dt/n3123 ), .CLK(clk_c), .FCI(\dt/n5980 ), .F0(\dt/n138 ), 
    .Q0(\dt/shift_clock_cnt_27 ), .F1(\dt/n137 ), .Q1(\dt/shift_clock_cnt_28 ), 
    .FCO(\dt/n5981 ));
  dt_SLICE_8 \dt/SLICE_8 ( .A1(\dt/shift_clock_cnt_26 ), 
    .A0(\dt/shift_clock_cnt_25 ), .DI1(\dt/n139 ), .DI0(\dt/n140 ), 
    .LSR(\dt/n3123 ), .CLK(clk_c), .FCI(\dt/n5979 ), .F0(\dt/n140 ), 
    .Q0(\dt/shift_clock_cnt_25 ), .F1(\dt/n139 ), .Q1(\dt/shift_clock_cnt_26 ), 
    .FCO(\dt/n5980 ));
  dt_SLICE_9 \dt/SLICE_9 ( .A1(\dt/shift_clock_cnt_24 ), 
    .A0(\dt/shift_clock_cnt_23 ), .DI1(\dt/n141 ), .DI0(\dt/n142 ), 
    .LSR(\dt/n3123 ), .CLK(clk_c), .FCI(\dt/n5978 ), .F0(\dt/n142 ), 
    .Q0(\dt/shift_clock_cnt_23 ), .F1(\dt/n141 ), .Q1(\dt/shift_clock_cnt_24 ), 
    .FCO(\dt/n5979 ));
  dt_SLICE_10 \dt/SLICE_10 ( .A1(\dt/shift_clock_cnt_22 ), 
    .A0(\dt/shift_clock_cnt_21 ), .DI1(\dt/n143 ), .DI0(\dt/n144 ), 
    .LSR(\dt/n3123 ), .CLK(clk_c), .FCI(\dt/n5977 ), .F0(\dt/n144 ), 
    .Q0(\dt/shift_clock_cnt_21 ), .F1(\dt/n143 ), .Q1(\dt/shift_clock_cnt_22 ), 
    .FCO(\dt/n5978 ));
  dt_SLICE_11 \dt/SLICE_11 ( .A1(\dt/shift_clock_cnt_20 ), 
    .A0(\dt/shift_clock_cnt_19 ), .DI1(\dt/n145 ), .DI0(\dt/n146 ), 
    .LSR(\dt/n3123 ), .CLK(clk_c), .FCI(\dt/n5976 ), .F0(\dt/n146 ), 
    .Q0(\dt/shift_clock_cnt_19 ), .F1(\dt/n145 ), .Q1(\dt/shift_clock_cnt_20 ), 
    .FCO(\dt/n5977 ));
  dt_SLICE_12 \dt/SLICE_12 ( .A1(\dt/shift_clock_cnt_18 ), 
    .A0(\dt/shift_clock_cnt_17 ), .DI1(\dt/n147 ), .DI0(\dt/n148 ), 
    .LSR(\dt/n3123 ), .CLK(clk_c), .FCI(\dt/n5975 ), .F0(\dt/n148 ), 
    .Q0(\dt/shift_clock_cnt_17 ), .F1(\dt/n147 ), .Q1(\dt/shift_clock_cnt_18 ), 
    .FCO(\dt/n5976 ));
  dt_SLICE_13 \dt/SLICE_13 ( .A1(\dt/shift_clock_cnt_16 ), 
    .A0(\dt/shift_clock_cnt_15 ), .DI1(\dt/n149 ), .DI0(\dt/n150 ), 
    .LSR(\dt/n3123 ), .CLK(clk_c), .FCI(\dt/n5974 ), .F0(\dt/n150 ), 
    .Q0(\dt/shift_clock_cnt_15 ), .F1(\dt/n149 ), .Q1(\dt/shift_clock_cnt_16 ), 
    .FCO(\dt/n5975 ));
  dt_SLICE_14 \dt/SLICE_14 ( .A1(\dt/shift_clock_cnt_14 ), 
    .A0(\dt/shift_clock_cnt_13 ), .DI1(\dt/n151 ), .DI0(\dt/n152 ), 
    .LSR(\dt/n3123 ), .CLK(clk_c), .FCI(\dt/n5973 ), .F0(\dt/n152 ), 
    .Q0(\dt/shift_clock_cnt_13 ), .F1(\dt/n151 ), .Q1(\dt/shift_clock_cnt_14 ), 
    .FCO(\dt/n5974 ));
  dt_SLICE_15 \dt/SLICE_15 ( .A1(\dt/shift_clock_cnt_12 ), 
    .A0(\dt/shift_clock_cnt_11 ), .DI1(\dt/n153 ), .DI0(\dt/n154 ), 
    .LSR(\dt/n3123 ), .CLK(clk_c), .FCI(\dt/n5972 ), .F0(\dt/n154 ), 
    .Q0(\dt/shift_clock_cnt_11 ), .F1(\dt/n153 ), .Q1(\dt/shift_clock_cnt_12 ), 
    .FCO(\dt/n5973 ));
  dt_SLICE_16 \dt/SLICE_16 ( .A1(\dt/shift_clock_cnt_10 ), 
    .A0(\dt/shift_clock_cnt_9 ), .DI1(\dt/n155 ), .DI0(\dt/n156 ), 
    .LSR(\dt/n3123 ), .CLK(clk_c), .FCI(\dt/n5971 ), .F0(\dt/n156 ), 
    .Q0(\dt/shift_clock_cnt_9 ), .F1(\dt/n155 ), .Q1(\dt/shift_clock_cnt_10 ), 
    .FCO(\dt/n5972 ));
  rstkey_SLICE_17 \rstkey/SLICE_17 ( .A1(\rstkey/keysamplerpulsecnt_0 ), 
    .DI1(\rstkey/n165 ), .LSR(\rstkey/n3118 ), .CLK(clk_c), .F1(\rstkey/n165 ), 
    .Q1(\rstkey/keysamplerpulsecnt_0 ), .FCO(\rstkey/n5903 ));
  rstkey_SLICE_18 \rstkey/SLICE_18 ( .A0(\rstkey/keysamplerpulsecnt_31 ), 
    .DI0(\rstkey/n134 ), .LSR(\rstkey/n3118 ), .CLK(clk_c), 
    .FCI(\rstkey/n5918 ), .F0(\rstkey/n134 ), 
    .Q0(\rstkey/keysamplerpulsecnt_31 ));
  rstkey_SLICE_19 \rstkey/SLICE_19 ( .A1(\rstkey/keysamplerpulsecnt_30 ), 
    .A0(\rstkey/keysamplerpulsecnt_29 ), .DI1(\rstkey/n135 ), 
    .DI0(\rstkey/n136 ), .LSR(\rstkey/n3118 ), .CLK(clk_c), 
    .FCI(\rstkey/n5917 ), .F0(\rstkey/n136 ), 
    .Q0(\rstkey/keysamplerpulsecnt_29 ), .F1(\rstkey/n135 ), 
    .Q1(\rstkey/keysamplerpulsecnt_30 ), .FCO(\rstkey/n5918 ));
  rstkey_SLICE_20 \rstkey/SLICE_20 ( .A1(\rstkey/keysamplerpulsecnt_28 ), 
    .A0(\rstkey/keysamplerpulsecnt_27 ), .DI1(\rstkey/n137 ), 
    .DI0(\rstkey/n138 ), .LSR(\rstkey/n3118 ), .CLK(clk_c), 
    .FCI(\rstkey/n5916 ), .F0(\rstkey/n138 ), 
    .Q0(\rstkey/keysamplerpulsecnt_27 ), .F1(\rstkey/n137 ), 
    .Q1(\rstkey/keysamplerpulsecnt_28 ), .FCO(\rstkey/n5917 ));
  rstkey_SLICE_21 \rstkey/SLICE_21 ( .A1(\rstkey/keysamplerpulsecnt_26 ), 
    .A0(\rstkey/keysamplerpulsecnt_25 ), .DI1(\rstkey/n139 ), 
    .DI0(\rstkey/n140 ), .LSR(\rstkey/n3118 ), .CLK(clk_c), 
    .FCI(\rstkey/n5915 ), .F0(\rstkey/n140 ), 
    .Q0(\rstkey/keysamplerpulsecnt_25 ), .F1(\rstkey/n139 ), 
    .Q1(\rstkey/keysamplerpulsecnt_26 ), .FCO(\rstkey/n5916 ));
  rstkey_SLICE_22 \rstkey/SLICE_22 ( .A1(\rstkey/keysamplerpulsecnt_24 ), 
    .A0(\rstkey/keysamplerpulsecnt_23 ), .DI1(\rstkey/n141 ), 
    .DI0(\rstkey/n142 ), .LSR(\rstkey/n3118 ), .CLK(clk_c), 
    .FCI(\rstkey/n5914 ), .F0(\rstkey/n142 ), 
    .Q0(\rstkey/keysamplerpulsecnt_23 ), .F1(\rstkey/n141 ), 
    .Q1(\rstkey/keysamplerpulsecnt_24 ), .FCO(\rstkey/n5915 ));
  rstkey_SLICE_23 \rstkey/SLICE_23 ( .A1(\rstkey/keysamplerpulsecnt_22 ), 
    .A0(\rstkey/keysamplerpulsecnt_21 ), .DI1(\rstkey/n143 ), 
    .DI0(\rstkey/n144 ), .LSR(\rstkey/n3118 ), .CLK(clk_c), 
    .FCI(\rstkey/n5913 ), .F0(\rstkey/n144 ), 
    .Q0(\rstkey/keysamplerpulsecnt_21 ), .F1(\rstkey/n143 ), 
    .Q1(\rstkey/keysamplerpulsecnt_22 ), .FCO(\rstkey/n5914 ));
  rstkey_SLICE_24 \rstkey/SLICE_24 ( .A1(\rstkey/keysamplerpulsecnt_20 ), 
    .A0(\rstkey/keysamplerpulsecnt_19 ), .DI1(\rstkey/n145 ), 
    .DI0(\rstkey/n146 ), .LSR(\rstkey/n3118 ), .CLK(clk_c), 
    .FCI(\rstkey/n5912 ), .F0(\rstkey/n146 ), 
    .Q0(\rstkey/keysamplerpulsecnt_19 ), .F1(\rstkey/n145 ), 
    .Q1(\rstkey/keysamplerpulsecnt_20 ), .FCO(\rstkey/n5913 ));
  rstkey_SLICE_25 \rstkey/SLICE_25 ( .A1(\rstkey/keysamplerpulsecnt_18 ), 
    .A0(\rstkey/keysamplerpulsecnt_17 ), .DI1(\rstkey/n147 ), 
    .DI0(\rstkey/n148 ), .LSR(\rstkey/n3118 ), .CLK(clk_c), 
    .FCI(\rstkey/n5911 ), .F0(\rstkey/n148 ), 
    .Q0(\rstkey/keysamplerpulsecnt_17 ), .F1(\rstkey/n147 ), 
    .Q1(\rstkey/keysamplerpulsecnt_18 ), .FCO(\rstkey/n5912 ));
  rstkey_SLICE_26 \rstkey/SLICE_26 ( .A1(\rstkey/keysamplerpulsecnt_16 ), 
    .A0(\rstkey/keysamplerpulsecnt_15 ), .DI1(\rstkey/n149 ), 
    .DI0(\rstkey/n150 ), .LSR(\rstkey/n3118 ), .CLK(clk_c), 
    .FCI(\rstkey/n5910 ), .F0(\rstkey/n150 ), 
    .Q0(\rstkey/keysamplerpulsecnt_15 ), .F1(\rstkey/n149 ), 
    .Q1(\rstkey/keysamplerpulsecnt_16 ), .FCO(\rstkey/n5911 ));
  rstkey_SLICE_27 \rstkey/SLICE_27 ( .A1(\rstkey/keysamplerpulsecnt_14 ), 
    .A0(\rstkey/keysamplerpulsecnt_13 ), .DI1(\rstkey/n151 ), 
    .DI0(\rstkey/n152 ), .LSR(\rstkey/n3118 ), .CLK(clk_c), 
    .FCI(\rstkey/n5909 ), .F0(\rstkey/n152 ), 
    .Q0(\rstkey/keysamplerpulsecnt_13 ), .F1(\rstkey/n151 ), 
    .Q1(\rstkey/keysamplerpulsecnt_14 ), .FCO(\rstkey/n5910 ));
  rstkey_SLICE_28 \rstkey/SLICE_28 ( .A1(\rstkey/keysamplerpulsecnt_12 ), 
    .A0(\rstkey/keysamplerpulsecnt_11 ), .DI1(\rstkey/n153 ), 
    .DI0(\rstkey/n154 ), .LSR(\rstkey/n3118 ), .CLK(clk_c), 
    .FCI(\rstkey/n5908 ), .F0(\rstkey/n154 ), 
    .Q0(\rstkey/keysamplerpulsecnt_11 ), .F1(\rstkey/n153 ), 
    .Q1(\rstkey/keysamplerpulsecnt_12 ), .FCO(\rstkey/n5909 ));
  rstkey_SLICE_29 \rstkey/SLICE_29 ( .A1(\rstkey/keysamplerpulsecnt_10 ), 
    .A0(\rstkey/keysamplerpulsecnt_9 ), .DI1(\rstkey/n155 ), 
    .DI0(\rstkey/n156 ), .LSR(\rstkey/n3118 ), .CLK(clk_c), 
    .FCI(\rstkey/n5907 ), .F0(\rstkey/n156 ), 
    .Q0(\rstkey/keysamplerpulsecnt_9 ), .F1(\rstkey/n155 ), 
    .Q1(\rstkey/keysamplerpulsecnt_10 ), .FCO(\rstkey/n5908 ));
  rstkey_SLICE_30 \rstkey/SLICE_30 ( .A1(\rstkey/keysamplerpulsecnt_8 ), 
    .A0(\rstkey/keysamplerpulsecnt_7 ), .DI1(\rstkey/n157 ), 
    .DI0(\rstkey/n158 ), .LSR(\rstkey/n3118 ), .CLK(clk_c), 
    .FCI(\rstkey/n5906 ), .F0(\rstkey/n158 ), 
    .Q0(\rstkey/keysamplerpulsecnt_7 ), .F1(\rstkey/n157 ), 
    .Q1(\rstkey/keysamplerpulsecnt_8 ), .FCO(\rstkey/n5907 ));
  rstkey_SLICE_31 \rstkey/SLICE_31 ( .A1(\rstkey/keysamplerpulsecnt_6 ), 
    .A0(\rstkey/keysamplerpulsecnt_5 ), .DI1(\rstkey/n159 ), 
    .DI0(\rstkey/n160 ), .LSR(\rstkey/n3118 ), .CLK(clk_c), 
    .FCI(\rstkey/n5905 ), .F0(\rstkey/n160 ), 
    .Q0(\rstkey/keysamplerpulsecnt_5 ), .F1(\rstkey/n159 ), 
    .Q1(\rstkey/keysamplerpulsecnt_6 ), .FCO(\rstkey/n5906 ));
  rstkey_SLICE_32 \rstkey/SLICE_32 ( .A1(\rstkey/keysamplerpulsecnt_4 ), 
    .A0(\rstkey/keysamplerpulsecnt_3 ), .DI1(\rstkey/n161 ), 
    .DI0(\rstkey/n162 ), .LSR(\rstkey/n3118 ), .CLK(clk_c), 
    .FCI(\rstkey/n5904 ), .F0(\rstkey/n162 ), 
    .Q0(\rstkey/keysamplerpulsecnt_3 ), .F1(\rstkey/n161 ), 
    .Q1(\rstkey/keysamplerpulsecnt_4 ), .FCO(\rstkey/n5905 ));
  rstkey_SLICE_33 \rstkey/SLICE_33 ( .A1(\rstkey/keysamplerpulsecnt_2 ), 
    .A0(\rstkey/keysamplerpulsecnt_1 ), .DI1(\rstkey/n163 ), 
    .DI0(\rstkey/n164 ), .LSR(\rstkey/n3118 ), .CLK(clk_c), 
    .FCI(\rstkey/n5903 ), .F0(\rstkey/n164 ), 
    .Q0(\rstkey/keysamplerpulsecnt_1 ), .F1(\rstkey/n163 ), 
    .Q1(\rstkey/keysamplerpulsecnt_2 ), .FCO(\rstkey/n5904 ));
  secondGen_SLICE_34 \secondGen/SLICE_34 ( .A1(\secondGen/seccnt_10 ), 
    .A0(\secondGen/seccnt_9 ), .DI1(\secondGen/n155 ), .DI0(\secondGen/n156 ), 
    .LSR(\secondGen/n3117 ), .CLK(clk_c), .FCI(\secondGen/n5891 ), 
    .F0(\secondGen/n156 ), .Q0(\secondGen/seccnt_9 ), .F1(\secondGen/n155 ), 
    .Q1(\secondGen/seccnt_10 ), .FCO(\secondGen/n5892 ));
  secondGen_SLICE_35 \secondGen/SLICE_35 ( .A0(\secondGen/seccnt_31 ), 
    .DI0(\secondGen/n134 ), .LSR(\secondGen/n3117 ), .CLK(clk_c), 
    .FCI(\secondGen/n5902 ), .F0(\secondGen/n134 ), .Q0(\secondGen/seccnt_31 ));
  secondGen_SLICE_36 \secondGen/SLICE_36 ( .A1(\secondGen/seccnt_8 ), 
    .A0(\secondGen/seccnt_7 ), .DI1(\secondGen/n157 ), .DI0(\secondGen/n158 ), 
    .LSR(\secondGen/n3117 ), .CLK(clk_c), .FCI(\secondGen/n5890 ), 
    .F0(\secondGen/n158 ), .Q0(\secondGen/seccnt_7 ), .F1(\secondGen/n157 ), 
    .Q1(\secondGen/seccnt_8 ), .FCO(\secondGen/n5891 ));
  secondGen_SLICE_37 \secondGen/SLICE_37 ( .A1(\secondGen/seccnt_30 ), 
    .A0(\secondGen/seccnt_29 ), .DI1(\secondGen/n135 ), .DI0(\secondGen/n136 ), 
    .LSR(\secondGen/n3117 ), .CLK(clk_c), .FCI(\secondGen/n5901 ), 
    .F0(\secondGen/n136 ), .Q0(\secondGen/seccnt_29 ), .F1(\secondGen/n135 ), 
    .Q1(\secondGen/seccnt_30 ), .FCO(\secondGen/n5902 ));
  secondGen_SLICE_38 \secondGen/SLICE_38 ( .A1(\secondGen/seccnt_28 ), 
    .A0(\secondGen/seccnt_27 ), .DI1(\secondGen/n137 ), .DI0(\secondGen/n138 ), 
    .LSR(\secondGen/n3117 ), .CLK(clk_c), .FCI(\secondGen/n5900 ), 
    .F0(\secondGen/n138 ), .Q0(\secondGen/seccnt_27 ), .F1(\secondGen/n137 ), 
    .Q1(\secondGen/seccnt_28 ), .FCO(\secondGen/n5901 ));
  secondGen_SLICE_39 \secondGen/SLICE_39 ( .A1(\secondGen/seccnt_26 ), 
    .A0(\secondGen/seccnt_25 ), .DI1(\secondGen/n139 ), .DI0(\secondGen/n140 ), 
    .LSR(\secondGen/n3117 ), .CLK(clk_c), .FCI(\secondGen/n5899 ), 
    .F0(\secondGen/n140 ), .Q0(\secondGen/seccnt_25 ), .F1(\secondGen/n139 ), 
    .Q1(\secondGen/seccnt_26 ), .FCO(\secondGen/n5900 ));
  secondGen_SLICE_40 \secondGen/SLICE_40 ( .A1(\secondGen/seccnt_6 ), 
    .A0(\secondGen/seccnt_5 ), .DI1(\secondGen/n159 ), .DI0(\secondGen/n160 ), 
    .LSR(\secondGen/n3117 ), .CLK(clk_c), .FCI(\secondGen/n5889 ), 
    .F0(\secondGen/n160 ), .Q0(\secondGen/seccnt_5 ), .F1(\secondGen/n159 ), 
    .Q1(\secondGen/seccnt_6 ), .FCO(\secondGen/n5890 ));
  secondGen_SLICE_41 \secondGen/SLICE_41 ( .A1(\secondGen/seccnt_24 ), 
    .A0(\secondGen/seccnt_23 ), .DI1(\secondGen/n141 ), .DI0(\secondGen/n142 ), 
    .LSR(\secondGen/n3117 ), .CLK(clk_c), .FCI(\secondGen/n5898 ), 
    .F0(\secondGen/n142 ), .Q0(\secondGen/seccnt_23 ), .F1(\secondGen/n141 ), 
    .Q1(\secondGen/seccnt_24 ), .FCO(\secondGen/n5899 ));
  secondGen_SLICE_42 \secondGen/SLICE_42 ( .A1(\secondGen/seccnt_4 ), 
    .A0(\secondGen/seccnt_3 ), .DI1(\secondGen/n161 ), .DI0(\secondGen/n162 ), 
    .LSR(\secondGen/n3117 ), .CLK(clk_c), .FCI(\secondGen/n5888 ), 
    .F0(\secondGen/n162 ), .Q0(\secondGen/seccnt_3 ), .F1(\secondGen/n161 ), 
    .Q1(\secondGen/seccnt_4 ), .FCO(\secondGen/n5889 ));
  secondGen_SLICE_43 \secondGen/SLICE_43 ( .A1(\secondGen/seccnt_22 ), 
    .A0(\secondGen/seccnt_21 ), .DI1(\secondGen/n143 ), .DI0(\secondGen/n144 ), 
    .LSR(\secondGen/n3117 ), .CLK(clk_c), .FCI(\secondGen/n5897 ), 
    .F0(\secondGen/n144 ), .Q0(\secondGen/seccnt_21 ), .F1(\secondGen/n143 ), 
    .Q1(\secondGen/seccnt_22 ), .FCO(\secondGen/n5898 ));
  secondGen_SLICE_44 \secondGen/SLICE_44 ( .A1(\secondGen/seccnt_20 ), 
    .A0(\secondGen/seccnt_19 ), .DI1(\secondGen/n145 ), .DI0(\secondGen/n146 ), 
    .LSR(\secondGen/n3117 ), .CLK(clk_c), .FCI(\secondGen/n5896 ), 
    .F0(\secondGen/n146 ), .Q0(\secondGen/seccnt_19 ), .F1(\secondGen/n145 ), 
    .Q1(\secondGen/seccnt_20 ), .FCO(\secondGen/n5897 ));
  secondGen_SLICE_45 \secondGen/SLICE_45 ( .A1(\secondGen/seccnt_2 ), 
    .A0(\secondGen/seccnt_1 ), .DI1(\secondGen/n163 ), .DI0(\secondGen/n164 ), 
    .LSR(\secondGen/n3117 ), .CLK(clk_c), .FCI(\secondGen/n5887 ), 
    .F0(\secondGen/n164 ), .Q0(\secondGen/seccnt_1 ), .F1(\secondGen/n163 ), 
    .Q1(\secondGen/seccnt_2 ), .FCO(\secondGen/n5888 ));
  secondGen_SLICE_46 \secondGen/SLICE_46 ( .A1(\secondGen/seccnt_18 ), 
    .A0(\secondGen/seccnt_17 ), .DI1(\secondGen/n147 ), .DI0(\secondGen/n148 ), 
    .LSR(\secondGen/n3117 ), .CLK(clk_c), .FCI(\secondGen/n5895 ), 
    .F0(\secondGen/n148 ), .Q0(\secondGen/seccnt_17 ), .F1(\secondGen/n147 ), 
    .Q1(\secondGen/seccnt_18 ), .FCO(\secondGen/n5896 ));
  secondGen_SLICE_47 \secondGen/SLICE_47 ( .A1(\secondGen/seccnt_16 ), 
    .A0(\secondGen/seccnt_15 ), .DI1(\secondGen/n149 ), .DI0(\secondGen/n150 ), 
    .LSR(\secondGen/n3117 ), .CLK(clk_c), .FCI(\secondGen/n5894 ), 
    .F0(\secondGen/n150 ), .Q0(\secondGen/seccnt_15 ), .F1(\secondGen/n149 ), 
    .Q1(\secondGen/seccnt_16 ), .FCO(\secondGen/n5895 ));
  secondGen_SLICE_48 \secondGen/SLICE_48 ( .A1(\secondGen/seccnt_0 ), 
    .DI1(\secondGen/n165 ), .LSR(\secondGen/n3117 ), .CLK(clk_c), 
    .F1(\secondGen/n165 ), .Q1(\secondGen/seccnt_0 ), .FCO(\secondGen/n5887 ));
  secondGen_SLICE_49 \secondGen/SLICE_49 ( .A1(\secondGen/seccnt_14 ), 
    .A0(\secondGen/seccnt_13 ), .DI1(\secondGen/n151 ), .DI0(\secondGen/n152 ), 
    .LSR(\secondGen/n3117 ), .CLK(clk_c), .FCI(\secondGen/n5893 ), 
    .F0(\secondGen/n152 ), .Q0(\secondGen/seccnt_13 ), .F1(\secondGen/n151 ), 
    .Q1(\secondGen/seccnt_14 ), .FCO(\secondGen/n5894 ));
  secondGen_SLICE_50 \secondGen/SLICE_50 ( .A1(\secondGen/seccnt_12 ), 
    .A0(\secondGen/seccnt_11 ), .DI1(\secondGen/n153 ), .DI0(\secondGen/n154 ), 
    .LSR(\secondGen/n3117 ), .CLK(clk_c), .FCI(\secondGen/n5892 ), 
    .F0(\secondGen/n154 ), .Q0(\secondGen/seccnt_11 ), .F1(\secondGen/n153 ), 
    .Q1(\secondGen/seccnt_12 ), .FCO(\secondGen/n5893 ));
  modekey_SLICE_51 \modekey/SLICE_51 ( .A0(\modekey/keysamplerpulsecnt_31 ), 
    .DI0(\modekey/n134 ), .LSR(\modekey/n3119 ), .CLK(clk_c), 
    .FCI(\modekey/n5934 ), .F0(\modekey/n134 ), 
    .Q0(\modekey/keysamplerpulsecnt_31 ));
  modekey_SLICE_52 \modekey/SLICE_52 ( .A1(\modekey/keysamplerpulsecnt_30 ), 
    .A0(\modekey/keysamplerpulsecnt_29 ), .DI1(\modekey/n135 ), 
    .DI0(\modekey/n136 ), .LSR(\modekey/n3119 ), .CLK(clk_c), 
    .FCI(\modekey/n5933 ), .F0(\modekey/n136 ), 
    .Q0(\modekey/keysamplerpulsecnt_29 ), .F1(\modekey/n135 ), 
    .Q1(\modekey/keysamplerpulsecnt_30 ), .FCO(\modekey/n5934 ));
  modekey_SLICE_53 \modekey/SLICE_53 ( .A1(\modekey/keysamplerpulsecnt_28 ), 
    .A0(\modekey/keysamplerpulsecnt_27 ), .DI1(\modekey/n137 ), 
    .DI0(\modekey/n138 ), .LSR(\modekey/n3119 ), .CLK(clk_c), 
    .FCI(\modekey/n5932 ), .F0(\modekey/n138 ), 
    .Q0(\modekey/keysamplerpulsecnt_27 ), .F1(\modekey/n137 ), 
    .Q1(\modekey/keysamplerpulsecnt_28 ), .FCO(\modekey/n5933 ));
  modekey_SLICE_54 \modekey/SLICE_54 ( .A1(\modekey/keysamplerpulsecnt_26 ), 
    .A0(\modekey/keysamplerpulsecnt_25 ), .DI1(\modekey/n139 ), 
    .DI0(\modekey/n140 ), .LSR(\modekey/n3119 ), .CLK(clk_c), 
    .FCI(\modekey/n5931 ), .F0(\modekey/n140 ), 
    .Q0(\modekey/keysamplerpulsecnt_25 ), .F1(\modekey/n139 ), 
    .Q1(\modekey/keysamplerpulsecnt_26 ), .FCO(\modekey/n5932 ));
  modekey_SLICE_55 \modekey/SLICE_55 ( .A1(\modekey/keysamplerpulsecnt_24 ), 
    .A0(\modekey/keysamplerpulsecnt_23 ), .DI1(\modekey/n141 ), 
    .DI0(\modekey/n142 ), .LSR(\modekey/n3119 ), .CLK(clk_c), 
    .FCI(\modekey/n5930 ), .F0(\modekey/n142 ), 
    .Q0(\modekey/keysamplerpulsecnt_23 ), .F1(\modekey/n141 ), 
    .Q1(\modekey/keysamplerpulsecnt_24 ), .FCO(\modekey/n5931 ));
  modekey_SLICE_56 \modekey/SLICE_56 ( .A1(\modekey/keysamplerpulsecnt_22 ), 
    .A0(\modekey/keysamplerpulsecnt_21 ), .DI1(\modekey/n143 ), 
    .DI0(\modekey/n144 ), .LSR(\modekey/n3119 ), .CLK(clk_c), 
    .FCI(\modekey/n5929 ), .F0(\modekey/n144 ), 
    .Q0(\modekey/keysamplerpulsecnt_21 ), .F1(\modekey/n143 ), 
    .Q1(\modekey/keysamplerpulsecnt_22 ), .FCO(\modekey/n5930 ));
  modekey_SLICE_57 \modekey/SLICE_57 ( .A1(\modekey/keysamplerpulsecnt_20 ), 
    .A0(\modekey/keysamplerpulsecnt_19 ), .DI1(\modekey/n145 ), 
    .DI0(\modekey/n146 ), .LSR(\modekey/n3119 ), .CLK(clk_c), 
    .FCI(\modekey/n5928 ), .F0(\modekey/n146 ), 
    .Q0(\modekey/keysamplerpulsecnt_19 ), .F1(\modekey/n145 ), 
    .Q1(\modekey/keysamplerpulsecnt_20 ), .FCO(\modekey/n5929 ));
  modekey_SLICE_58 \modekey/SLICE_58 ( .A1(\modekey/keysamplerpulsecnt_18 ), 
    .A0(\modekey/keysamplerpulsecnt_17 ), .DI1(\modekey/n147 ), 
    .DI0(\modekey/n148 ), .LSR(\modekey/n3119 ), .CLK(clk_c), 
    .FCI(\modekey/n5927 ), .F0(\modekey/n148 ), 
    .Q0(\modekey/keysamplerpulsecnt_17 ), .F1(\modekey/n147 ), 
    .Q1(\modekey/keysamplerpulsecnt_18 ), .FCO(\modekey/n5928 ));
  modekey_SLICE_59 \modekey/SLICE_59 ( .A1(\modekey/keysamplerpulsecnt_16 ), 
    .A0(\modekey/keysamplerpulsecnt_15 ), .DI1(\modekey/n149 ), 
    .DI0(\modekey/n150 ), .LSR(\modekey/n3119 ), .CLK(clk_c), 
    .FCI(\modekey/n5926 ), .F0(\modekey/n150 ), 
    .Q0(\modekey/keysamplerpulsecnt_15 ), .F1(\modekey/n149 ), 
    .Q1(\modekey/keysamplerpulsecnt_16 ), .FCO(\modekey/n5927 ));
  modekey_SLICE_60 \modekey/SLICE_60 ( .A1(\modekey/keysamplerpulsecnt_14 ), 
    .A0(\modekey/keysamplerpulsecnt_13 ), .DI1(\modekey/n151 ), 
    .DI0(\modekey/n152 ), .LSR(\modekey/n3119 ), .CLK(clk_c), 
    .FCI(\modekey/n5925 ), .F0(\modekey/n152 ), 
    .Q0(\modekey/keysamplerpulsecnt_13 ), .F1(\modekey/n151 ), 
    .Q1(\modekey/keysamplerpulsecnt_14 ), .FCO(\modekey/n5926 ));
  modekey_SLICE_61 \modekey/SLICE_61 ( .A1(\modekey/keysamplerpulsecnt_12 ), 
    .A0(\modekey/keysamplerpulsecnt_11 ), .DI1(\modekey/n153 ), 
    .DI0(\modekey/n154 ), .LSR(\modekey/n3119 ), .CLK(clk_c), 
    .FCI(\modekey/n5924 ), .F0(\modekey/n154 ), 
    .Q0(\modekey/keysamplerpulsecnt_11 ), .F1(\modekey/n153 ), 
    .Q1(\modekey/keysamplerpulsecnt_12 ), .FCO(\modekey/n5925 ));
  modekey_SLICE_62 \modekey/SLICE_62 ( .A1(\modekey/keysamplerpulsecnt_10 ), 
    .A0(\modekey/keysamplerpulsecnt_9 ), .DI1(\modekey/n155 ), 
    .DI0(\modekey/n156 ), .LSR(\modekey/n3119 ), .CLK(clk_c), 
    .FCI(\modekey/n5923 ), .F0(\modekey/n156 ), 
    .Q0(\modekey/keysamplerpulsecnt_9 ), .F1(\modekey/n155 ), 
    .Q1(\modekey/keysamplerpulsecnt_10 ), .FCO(\modekey/n5924 ));
  modekey_SLICE_63 \modekey/SLICE_63 ( .A1(\modekey/keysamplerpulsecnt_8 ), 
    .A0(\modekey/keysamplerpulsecnt_7 ), .DI1(\modekey/n157 ), 
    .DI0(\modekey/n158 ), .LSR(\modekey/n3119 ), .CLK(clk_c), 
    .FCI(\modekey/n5922 ), .F0(\modekey/n158 ), 
    .Q0(\modekey/keysamplerpulsecnt_7 ), .F1(\modekey/n157 ), 
    .Q1(\modekey/keysamplerpulsecnt_8 ), .FCO(\modekey/n5923 ));
  modekey_SLICE_64 \modekey/SLICE_64 ( .A1(\modekey/keysamplerpulsecnt_6 ), 
    .A0(\modekey/keysamplerpulsecnt_5 ), .DI1(\modekey/n159 ), 
    .DI0(\modekey/n160 ), .LSR(\modekey/n3119 ), .CLK(clk_c), 
    .FCI(\modekey/n5921 ), .F0(\modekey/n160 ), 
    .Q0(\modekey/keysamplerpulsecnt_5 ), .F1(\modekey/n159 ), 
    .Q1(\modekey/keysamplerpulsecnt_6 ), .FCO(\modekey/n5922 ));
  modekey_SLICE_65 \modekey/SLICE_65 ( .A1(\modekey/keysamplerpulsecnt_4 ), 
    .A0(\modekey/keysamplerpulsecnt_3 ), .DI1(\modekey/n161 ), 
    .DI0(\modekey/n162 ), .LSR(\modekey/n3119 ), .CLK(clk_c), 
    .FCI(\modekey/n5920 ), .F0(\modekey/n162 ), 
    .Q0(\modekey/keysamplerpulsecnt_3 ), .F1(\modekey/n161 ), 
    .Q1(\modekey/keysamplerpulsecnt_4 ), .FCO(\modekey/n5921 ));
  modekey_SLICE_66 \modekey/SLICE_66 ( .A1(\modekey/keysamplerpulsecnt_2 ), 
    .A0(\modekey/keysamplerpulsecnt_1 ), .DI1(\modekey/n163 ), 
    .DI0(\modekey/n164 ), .LSR(\modekey/n3119 ), .CLK(clk_c), 
    .FCI(\modekey/n5919 ), .F0(\modekey/n164 ), 
    .Q0(\modekey/keysamplerpulsecnt_1 ), .F1(\modekey/n163 ), 
    .Q1(\modekey/keysamplerpulsecnt_2 ), .FCO(\modekey/n5920 ));
  modekey_SLICE_67 \modekey/SLICE_67 ( .A1(\modekey/keysamplerpulsecnt_0 ), 
    .DI1(\modekey/n165 ), .LSR(\modekey/n3119 ), .CLK(clk_c), 
    .F1(\modekey/n165 ), .Q1(\modekey/keysamplerpulsecnt_0 ), 
    .FCO(\modekey/n5919 ));
  downkey_SLICE_68 \downkey/SLICE_68 ( .A1(\downkey/keysamplerpulsecnt_4 ), 
    .A0(\downkey/keysamplerpulsecnt_3 ), .DI1(\downkey/n161 ), 
    .DI0(\downkey/n162 ), .LSR(\downkey/n3122 ), .CLK(clk_c), 
    .FCI(\downkey/n5952 ), .F0(\downkey/n162 ), 
    .Q0(\downkey/keysamplerpulsecnt_3 ), .F1(\downkey/n161 ), 
    .Q1(\downkey/keysamplerpulsecnt_4 ), .FCO(\downkey/n5953 ));
  downkey_SLICE_69 \downkey/SLICE_69 ( .A1(\downkey/keysamplerpulsecnt_2 ), 
    .A0(\downkey/keysamplerpulsecnt_1 ), .DI1(\downkey/n163 ), 
    .DI0(\downkey/n164 ), .LSR(\downkey/n3122 ), .CLK(clk_c), 
    .FCI(\downkey/n5951 ), .F0(\downkey/n164 ), 
    .Q0(\downkey/keysamplerpulsecnt_1 ), .F1(\downkey/n163 ), 
    .Q1(\downkey/keysamplerpulsecnt_2 ), .FCO(\downkey/n5952 ));
  downkey_SLICE_70 \downkey/SLICE_70 ( .A1(\downkey/keysamplerpulsecnt_0 ), 
    .DI1(\downkey/n165 ), .LSR(\downkey/n3122 ), .CLK(clk_c), 
    .F1(\downkey/n165 ), .Q1(\downkey/keysamplerpulsecnt_0 ), 
    .FCO(\downkey/n5951 ));
  downkey_SLICE_71 \downkey/SLICE_71 ( .A0(\downkey/keysamplerpulsecnt_31 ), 
    .DI0(\downkey/n134 ), .LSR(\downkey/n3122 ), .CLK(clk_c), 
    .FCI(\downkey/n5966 ), .F0(\downkey/n134 ), 
    .Q0(\downkey/keysamplerpulsecnt_31 ));
  downkey_SLICE_72 \downkey/SLICE_72 ( .A1(\downkey/keysamplerpulsecnt_30 ), 
    .A0(\downkey/keysamplerpulsecnt_29 ), .DI1(\downkey/n135 ), 
    .DI0(\downkey/n136 ), .LSR(\downkey/n3122 ), .CLK(clk_c), 
    .FCI(\downkey/n5965 ), .F0(\downkey/n136 ), 
    .Q0(\downkey/keysamplerpulsecnt_29 ), .F1(\downkey/n135 ), 
    .Q1(\downkey/keysamplerpulsecnt_30 ), .FCO(\downkey/n5966 ));
  downkey_SLICE_73 \downkey/SLICE_73 ( .A1(\downkey/keysamplerpulsecnt_28 ), 
    .A0(\downkey/keysamplerpulsecnt_27 ), .DI1(\downkey/n137 ), 
    .DI0(\downkey/n138 ), .LSR(\downkey/n3122 ), .CLK(clk_c), 
    .FCI(\downkey/n5964 ), .F0(\downkey/n138 ), 
    .Q0(\downkey/keysamplerpulsecnt_27 ), .F1(\downkey/n137 ), 
    .Q1(\downkey/keysamplerpulsecnt_28 ), .FCO(\downkey/n5965 ));
  downkey_SLICE_74 \downkey/SLICE_74 ( .A1(\downkey/keysamplerpulsecnt_26 ), 
    .A0(\downkey/keysamplerpulsecnt_25 ), .DI1(\downkey/n139 ), 
    .DI0(\downkey/n140 ), .LSR(\downkey/n3122 ), .CLK(clk_c), 
    .FCI(\downkey/n5963 ), .F0(\downkey/n140 ), 
    .Q0(\downkey/keysamplerpulsecnt_25 ), .F1(\downkey/n139 ), 
    .Q1(\downkey/keysamplerpulsecnt_26 ), .FCO(\downkey/n5964 ));
  downkey_SLICE_75 \downkey/SLICE_75 ( .A1(\downkey/keysamplerpulsecnt_24 ), 
    .A0(\downkey/keysamplerpulsecnt_23 ), .DI1(\downkey/n141 ), 
    .DI0(\downkey/n142 ), .LSR(\downkey/n3122 ), .CLK(clk_c), 
    .FCI(\downkey/n5962 ), .F0(\downkey/n142 ), 
    .Q0(\downkey/keysamplerpulsecnt_23 ), .F1(\downkey/n141 ), 
    .Q1(\downkey/keysamplerpulsecnt_24 ), .FCO(\downkey/n5963 ));
  downkey_SLICE_76 \downkey/SLICE_76 ( .A1(\downkey/keysamplerpulsecnt_22 ), 
    .A0(\downkey/keysamplerpulsecnt_21 ), .DI1(\downkey/n143 ), 
    .DI0(\downkey/n144 ), .LSR(\downkey/n3122 ), .CLK(clk_c), 
    .FCI(\downkey/n5961 ), .F0(\downkey/n144 ), 
    .Q0(\downkey/keysamplerpulsecnt_21 ), .F1(\downkey/n143 ), 
    .Q1(\downkey/keysamplerpulsecnt_22 ), .FCO(\downkey/n5962 ));
  downkey_SLICE_77 \downkey/SLICE_77 ( .A1(\downkey/keysamplerpulsecnt_20 ), 
    .A0(\downkey/keysamplerpulsecnt_19 ), .DI1(\downkey/n145 ), 
    .DI0(\downkey/n146 ), .LSR(\downkey/n3122 ), .CLK(clk_c), 
    .FCI(\downkey/n5960 ), .F0(\downkey/n146 ), 
    .Q0(\downkey/keysamplerpulsecnt_19 ), .F1(\downkey/n145 ), 
    .Q1(\downkey/keysamplerpulsecnt_20 ), .FCO(\downkey/n5961 ));
  downkey_SLICE_78 \downkey/SLICE_78 ( .A1(\downkey/keysamplerpulsecnt_18 ), 
    .A0(\downkey/keysamplerpulsecnt_17 ), .DI1(\downkey/n147 ), 
    .DI0(\downkey/n148 ), .LSR(\downkey/n3122 ), .CLK(clk_c), 
    .FCI(\downkey/n5959 ), .F0(\downkey/n148 ), 
    .Q0(\downkey/keysamplerpulsecnt_17 ), .F1(\downkey/n147 ), 
    .Q1(\downkey/keysamplerpulsecnt_18 ), .FCO(\downkey/n5960 ));
  downkey_SLICE_79 \downkey/SLICE_79 ( .A1(\downkey/keysamplerpulsecnt_16 ), 
    .A0(\downkey/keysamplerpulsecnt_15 ), .DI1(\downkey/n149 ), 
    .DI0(\downkey/n150 ), .LSR(\downkey/n3122 ), .CLK(clk_c), 
    .FCI(\downkey/n5958 ), .F0(\downkey/n150 ), 
    .Q0(\downkey/keysamplerpulsecnt_15 ), .F1(\downkey/n149 ), 
    .Q1(\downkey/keysamplerpulsecnt_16 ), .FCO(\downkey/n5959 ));
  downkey_SLICE_80 \downkey/SLICE_80 ( .A1(\downkey/keysamplerpulsecnt_14 ), 
    .A0(\downkey/keysamplerpulsecnt_13 ), .DI1(\downkey/n151 ), 
    .DI0(\downkey/n152 ), .LSR(\downkey/n3122 ), .CLK(clk_c), 
    .FCI(\downkey/n5957 ), .F0(\downkey/n152 ), 
    .Q0(\downkey/keysamplerpulsecnt_13 ), .F1(\downkey/n151 ), 
    .Q1(\downkey/keysamplerpulsecnt_14 ), .FCO(\downkey/n5958 ));
  downkey_SLICE_81 \downkey/SLICE_81 ( .A1(\downkey/keysamplerpulsecnt_12 ), 
    .A0(\downkey/keysamplerpulsecnt_11 ), .DI1(\downkey/n153 ), 
    .DI0(\downkey/n154 ), .LSR(\downkey/n3122 ), .CLK(clk_c), 
    .FCI(\downkey/n5956 ), .F0(\downkey/n154 ), 
    .Q0(\downkey/keysamplerpulsecnt_11 ), .F1(\downkey/n153 ), 
    .Q1(\downkey/keysamplerpulsecnt_12 ), .FCO(\downkey/n5957 ));
  downkey_SLICE_82 \downkey/SLICE_82 ( .A1(\downkey/keysamplerpulsecnt_10 ), 
    .A0(\downkey/keysamplerpulsecnt_9 ), .DI1(\downkey/n155 ), 
    .DI0(\downkey/n156 ), .LSR(\downkey/n3122 ), .CLK(clk_c), 
    .FCI(\downkey/n5955 ), .F0(\downkey/n156 ), 
    .Q0(\downkey/keysamplerpulsecnt_9 ), .F1(\downkey/n155 ), 
    .Q1(\downkey/keysamplerpulsecnt_10 ), .FCO(\downkey/n5956 ));
  downkey_SLICE_83 \downkey/SLICE_83 ( .A1(\downkey/keysamplerpulsecnt_8 ), 
    .A0(\downkey/keysamplerpulsecnt_7 ), .DI1(\downkey/n157 ), 
    .DI0(\downkey/n158 ), .LSR(\downkey/n3122 ), .CLK(clk_c), 
    .FCI(\downkey/n5954 ), .F0(\downkey/n158 ), 
    .Q0(\downkey/keysamplerpulsecnt_7 ), .F1(\downkey/n157 ), 
    .Q1(\downkey/keysamplerpulsecnt_8 ), .FCO(\downkey/n5955 ));
  downkey_SLICE_84 \downkey/SLICE_84 ( .A1(\downkey/keysamplerpulsecnt_6 ), 
    .A0(\downkey/keysamplerpulsecnt_5 ), .DI1(\downkey/n159 ), 
    .DI0(\downkey/n160 ), .LSR(\downkey/n3122 ), .CLK(clk_c), 
    .FCI(\downkey/n5953 ), .F0(\downkey/n160 ), 
    .Q0(\downkey/keysamplerpulsecnt_5 ), .F1(\downkey/n159 ), 
    .Q1(\downkey/keysamplerpulsecnt_6 ), .FCO(\downkey/n5954 ));
  upkey_SLICE_85 \upkey/SLICE_85 ( .A0(\upkey/keysamplerpulsecnt_31 ), 
    .DI0(\upkey/n134 ), .LSR(\upkey/n3121 ), .CLK(clk_c), .FCI(\upkey/n5950 ), 
    .F0(\upkey/n134 ), .Q0(\upkey/keysamplerpulsecnt_31 ));
  upkey_SLICE_86 \upkey/SLICE_86 ( .A1(\upkey/keysamplerpulsecnt_30 ), 
    .A0(\upkey/keysamplerpulsecnt_29 ), .DI1(\upkey/n135 ), .DI0(\upkey/n136 ), 
    .LSR(\upkey/n3121 ), .CLK(clk_c), .FCI(\upkey/n5949 ), .F0(\upkey/n136 ), 
    .Q0(\upkey/keysamplerpulsecnt_29 ), .F1(\upkey/n135 ), 
    .Q1(\upkey/keysamplerpulsecnt_30 ), .FCO(\upkey/n5950 ));
  upkey_SLICE_87 \upkey/SLICE_87 ( .A1(\upkey/keysamplerpulsecnt_28 ), 
    .A0(\upkey/keysamplerpulsecnt_27 ), .DI1(\upkey/n137 ), .DI0(\upkey/n138 ), 
    .LSR(\upkey/n3121 ), .CLK(clk_c), .FCI(\upkey/n5948 ), .F0(\upkey/n138 ), 
    .Q0(\upkey/keysamplerpulsecnt_27 ), .F1(\upkey/n137 ), 
    .Q1(\upkey/keysamplerpulsecnt_28 ), .FCO(\upkey/n5949 ));
  upkey_SLICE_88 \upkey/SLICE_88 ( .A1(\upkey/keysamplerpulsecnt_26 ), 
    .A0(\upkey/keysamplerpulsecnt_25 ), .DI1(\upkey/n139 ), .DI0(\upkey/n140 ), 
    .LSR(\upkey/n3121 ), .CLK(clk_c), .FCI(\upkey/n5947 ), .F0(\upkey/n140 ), 
    .Q0(\upkey/keysamplerpulsecnt_25 ), .F1(\upkey/n139 ), 
    .Q1(\upkey/keysamplerpulsecnt_26 ), .FCO(\upkey/n5948 ));
  upkey_SLICE_89 \upkey/SLICE_89 ( .A1(\upkey/keysamplerpulsecnt_24 ), 
    .A0(\upkey/keysamplerpulsecnt_23 ), .DI1(\upkey/n141 ), .DI0(\upkey/n142 ), 
    .LSR(\upkey/n3121 ), .CLK(clk_c), .FCI(\upkey/n5946 ), .F0(\upkey/n142 ), 
    .Q0(\upkey/keysamplerpulsecnt_23 ), .F1(\upkey/n141 ), 
    .Q1(\upkey/keysamplerpulsecnt_24 ), .FCO(\upkey/n5947 ));
  upkey_SLICE_90 \upkey/SLICE_90 ( .A1(\upkey/keysamplerpulsecnt_22 ), 
    .A0(\upkey/keysamplerpulsecnt_21 ), .DI1(\upkey/n143 ), .DI0(\upkey/n144 ), 
    .LSR(\upkey/n3121 ), .CLK(clk_c), .FCI(\upkey/n5945 ), .F0(\upkey/n144 ), 
    .Q0(\upkey/keysamplerpulsecnt_21 ), .F1(\upkey/n143 ), 
    .Q1(\upkey/keysamplerpulsecnt_22 ), .FCO(\upkey/n5946 ));
  upkey_SLICE_91 \upkey/SLICE_91 ( .A1(\upkey/keysamplerpulsecnt_20 ), 
    .A0(\upkey/keysamplerpulsecnt_19 ), .DI1(\upkey/n145 ), .DI0(\upkey/n146 ), 
    .LSR(\upkey/n3121 ), .CLK(clk_c), .FCI(\upkey/n5944 ), .F0(\upkey/n146 ), 
    .Q0(\upkey/keysamplerpulsecnt_19 ), .F1(\upkey/n145 ), 
    .Q1(\upkey/keysamplerpulsecnt_20 ), .FCO(\upkey/n5945 ));
  upkey_SLICE_92 \upkey/SLICE_92 ( .A1(\upkey/keysamplerpulsecnt_18 ), 
    .A0(\upkey/keysamplerpulsecnt_17 ), .DI1(\upkey/n147 ), .DI0(\upkey/n148 ), 
    .LSR(\upkey/n3121 ), .CLK(clk_c), .FCI(\upkey/n5943 ), .F0(\upkey/n148 ), 
    .Q0(\upkey/keysamplerpulsecnt_17 ), .F1(\upkey/n147 ), 
    .Q1(\upkey/keysamplerpulsecnt_18 ), .FCO(\upkey/n5944 ));
  upkey_SLICE_93 \upkey/SLICE_93 ( .A1(\upkey/keysamplerpulsecnt_16 ), 
    .A0(\upkey/keysamplerpulsecnt_15 ), .DI1(\upkey/n149 ), .DI0(\upkey/n150 ), 
    .LSR(\upkey/n3121 ), .CLK(clk_c), .FCI(\upkey/n5942 ), .F0(\upkey/n150 ), 
    .Q0(\upkey/keysamplerpulsecnt_15 ), .F1(\upkey/n149 ), 
    .Q1(\upkey/keysamplerpulsecnt_16 ), .FCO(\upkey/n5943 ));
  upkey_SLICE_94 \upkey/SLICE_94 ( .A1(\upkey/keysamplerpulsecnt_14 ), 
    .A0(\upkey/keysamplerpulsecnt_13 ), .DI1(\upkey/n151 ), .DI0(\upkey/n152 ), 
    .LSR(\upkey/n3121 ), .CLK(clk_c), .FCI(\upkey/n5941 ), .F0(\upkey/n152 ), 
    .Q0(\upkey/keysamplerpulsecnt_13 ), .F1(\upkey/n151 ), 
    .Q1(\upkey/keysamplerpulsecnt_14 ), .FCO(\upkey/n5942 ));
  upkey_SLICE_95 \upkey/SLICE_95 ( .A1(\upkey/keysamplerpulsecnt_12 ), 
    .A0(\upkey/keysamplerpulsecnt_11 ), .DI1(\upkey/n153 ), .DI0(\upkey/n154 ), 
    .LSR(\upkey/n3121 ), .CLK(clk_c), .FCI(\upkey/n5940 ), .F0(\upkey/n154 ), 
    .Q0(\upkey/keysamplerpulsecnt_11 ), .F1(\upkey/n153 ), 
    .Q1(\upkey/keysamplerpulsecnt_12 ), .FCO(\upkey/n5941 ));
  upkey_SLICE_96 \upkey/SLICE_96 ( .A1(\upkey/keysamplerpulsecnt_10 ), 
    .A0(\upkey/keysamplerpulsecnt_9 ), .DI1(\upkey/n155 ), .DI0(\upkey/n156 ), 
    .LSR(\upkey/n3121 ), .CLK(clk_c), .FCI(\upkey/n5939 ), .F0(\upkey/n156 ), 
    .Q0(\upkey/keysamplerpulsecnt_9 ), .F1(\upkey/n155 ), 
    .Q1(\upkey/keysamplerpulsecnt_10 ), .FCO(\upkey/n5940 ));
  upkey_SLICE_97 \upkey/SLICE_97 ( .A1(\upkey/keysamplerpulsecnt_8 ), 
    .A0(\upkey/keysamplerpulsecnt_7 ), .DI1(\upkey/n157 ), .DI0(\upkey/n158 ), 
    .LSR(\upkey/n3121 ), .CLK(clk_c), .FCI(\upkey/n5938 ), .F0(\upkey/n158 ), 
    .Q0(\upkey/keysamplerpulsecnt_7 ), .F1(\upkey/n157 ), 
    .Q1(\upkey/keysamplerpulsecnt_8 ), .FCO(\upkey/n5939 ));
  upkey_SLICE_98 \upkey/SLICE_98 ( .A1(\upkey/keysamplerpulsecnt_6 ), 
    .A0(\upkey/keysamplerpulsecnt_5 ), .DI1(\upkey/n159 ), .DI0(\upkey/n160 ), 
    .LSR(\upkey/n3121 ), .CLK(clk_c), .FCI(\upkey/n5937 ), .F0(\upkey/n160 ), 
    .Q0(\upkey/keysamplerpulsecnt_5 ), .F1(\upkey/n159 ), 
    .Q1(\upkey/keysamplerpulsecnt_6 ), .FCO(\upkey/n5938 ));
  upkey_SLICE_99 \upkey/SLICE_99 ( .A1(\upkey/keysamplerpulsecnt_4 ), 
    .A0(\upkey/keysamplerpulsecnt_3 ), .DI1(\upkey/n161 ), .DI0(\upkey/n162 ), 
    .LSR(\upkey/n3121 ), .CLK(clk_c), .FCI(\upkey/n5936 ), .F0(\upkey/n162 ), 
    .Q0(\upkey/keysamplerpulsecnt_3 ), .F1(\upkey/n161 ), 
    .Q1(\upkey/keysamplerpulsecnt_4 ), .FCO(\upkey/n5937 ));
  upkey_SLICE_100 \upkey/SLICE_100 ( .A1(\upkey/keysamplerpulsecnt_2 ), 
    .A0(\upkey/keysamplerpulsecnt_1 ), .DI1(\upkey/n163 ), .DI0(\upkey/n164 ), 
    .LSR(\upkey/n3121 ), .CLK(clk_c), .FCI(\upkey/n5935 ), .F0(\upkey/n164 ), 
    .Q0(\upkey/keysamplerpulsecnt_1 ), .F1(\upkey/n163 ), 
    .Q1(\upkey/keysamplerpulsecnt_2 ), .FCO(\upkey/n5936 ));
  upkey_SLICE_101 \upkey/SLICE_101 ( .A1(\upkey/keysamplerpulsecnt_0 ), 
    .DI1(\upkey/n165 ), .LSR(\upkey/n3121 ), .CLK(clk_c), .F1(\upkey/n165 ), 
    .Q1(\upkey/keysamplerpulsecnt_0 ), .FCO(\upkey/n5935 ));
  re_SLICE_102 \re/SLICE_102 ( .D1(\re/act_cache_tmp ), .A1(PortB_c), 
    .D0(\re/act_cache_tmp ), .A0(PortB_c), .DI1(\re/n17 ), .DI0(\re/n6772 ), 
    .CE(\re/clk_c_enable_14 ), .LSR(\re/n4541 ), .CLK(clk_c), .F0(\re/n6772 ), 
    .Q0(act_of_re_0), .F1(\re/n17 ), .Q1(act_of_re_31));
  controller_SLICE_104 \controller/SLICE_104 ( .B1(\controller/moderec_0 ), 
    .A1(\controller/moderec_1 ), .A0(\controller/moderec_0 ), 
    .DI1(\controller/n14 ), .DI0(\controller/n7638 ), 
    .CE(\controller/moderec_1__N_149 ), .CLK(clk_c), .F0(\controller/n7638 ), 
    .Q0(\controller/moderec_0 ), .F1(\controller/n14 ), 
    .Q1(\controller/moderec_1 ));
  tm_SLICE_105 \tm/SLICE_105 ( .D1(\tm/n7650 ), .C1(\tm/n7606 ), 
    .B1(\tm/n7646 ), .A1(\tm/n6950 ), .D0(\tm/n7602 ), .C0(ctrlcode595_17), 
    .B0(\tm/n4_adj_385 ), .A0(\tm/n2592 ), .DI0(\tm/n2752 ), 
    .CE(\tm/clk_c_enable_38 ), .CLK(clk_c), .F0(\tm/n2752 ), 
    .Q0(ctrlcode595_17), .F1(\tm/n7602 ));
  dt_SLICE_106 \dt/SLICE_106 ( .D1(\dt/n7621 ), .C1(\dt/rck_N_376 ), 
    .B1(\dt/n6256 ), .A1(\dt/n372 ), .D0(\dt/codeP_2 ), .C0(\dt/n4 ), 
    .B0(\dt/codeP_1 ), .A0(\dt/n7078 ), .DI0(\dt/din_N_365 ), 
    .CE(\dt/din_N_372 ), .CLK(clk_c), .F0(\dt/din_N_365 ), .Q0(din_c), 
    .F1(\dt/n4 ));
  downkey_SLICE_107 \downkey/SLICE_107 ( .D0(\downkey/keystore_1 ), 
    .B0(\downkey/keystore_0 ), .A0(\downkey/keystore_2 ), 
    .DI0(\downkey/keystate_N_142 ), .M1(\downkey/keysamplerpulse ), 
    .CLK(clk_c), .F0(\downkey/keystate_N_142 ), .Q0(down_key_state), 
    .Q1(\downkey/keysamplerpulse_ls ));
  downkey_SLICE_108 \downkey/SLICE_108 ( .D1(\downkey/n7025 ), 
    .C1(\downkey/keysamplerpulsecnt_16 ), .B1(\downkey/keysamplerpulsecnt_10 ), 
    .A1(\downkey/n9 ), .B0(\downkey/n3122 ), .A0(\downkey/keysamplerpulse ), 
    .DI0(\downkey/keysamplerpulse_N_144 ), .CLK(clk_c), 
    .F0(\downkey/keysamplerpulse_N_144 ), .Q0(\downkey/keysamplerpulse ), 
    .F1(\downkey/n3122 ));
  downkey_SLICE_110 \downkey/SLICE_110 ( .B0(down_key_c), 
    .DI0(\downkey/btnstate_N_138 ), .M1(\downkey/keystore_0 ), 
    .CE(\downkey/keystore_2__N_139 ), .CLK(clk_c), 
    .F0(\downkey/btnstate_N_138 ), .Q0(\downkey/keystore_0 ), 
    .Q1(\downkey/keystore_1 ));
  dt_SLICE_112 \dt/SLICE_112 ( .D1(\dt/n370 ), .C1(\dt/shift_clock_ls ), 
    .A1(sck_c), .D0(\dt/clk_c_enable_57 ), .A0(\dt/codeP_0 ), .DI0(\dt/n8 ), 
    .LSR(\dt/n2337 ), .CLK(clk_c), .F0(\dt/n8 ), .Q0(\dt/codeP_0 ), 
    .F1(\dt/n3124 ));
  dt_SLICE_113 \dt/SLICE_113 ( .D1(\dt/codeP_0 ), .B1(\dt/codeP_2 ), 
    .A1(\dt/codeP_1 ), .D0(\dt/codeP_0 ), .A0(\dt/codeP_1 ), .DI1(\dt/n6782 ), 
    .DI0(\dt/n3 ), .CE(\dt/clk_c_enable_57 ), .LSR(\dt/n2337 ), .CLK(clk_c), 
    .F0(\dt/n3 ), .Q0(\dt/codeP_1 ), .F1(\dt/n6782 ), .Q1(\dt/codeP_2 ));
  tm_SLICE_123 \tm/SLICE_123 ( .C1(hLRec0_3), .A1(mode_0), .D0(\tm/n2592 ), 
    .C0(\tm/hHRec0_0 ), .B0(hH_0), .A0(mode_0), .DI0(\tm/n6029 ), 
    .CE(\tm/clk_c_enable_38 ), .LSR(\tm/n3120 ), .CLK(clk_c), .F0(\tm/n6029 ), 
    .Q0(hH_0), .F1(\tm/n1590 ));
  tm_SLICE_124 \tm/SLICE_124 ( .D1(\tm/n22 ), .C1(n547), .B1(\tm/n7620 ), 
    .A1(hL_2), .D0(\tm/n23_adj_390 ), .C0(hL_1), .B0(\tm/n7620 ), .A0(n547), 
    .DI1(\tm/n1325 ), .DI0(\tm/n1326 ), .CE(\tm/clk_c_enable_48 ), .CLK(clk_c), 
    .F0(\tm/n1326 ), .Q0(hLRec0_1), .F1(\tm/n1325 ), .Q1(hLRec0_2));
  SLICE_125 SLICE_125( .D1(\tm/hLRec0_0 ), .C1(hLRec0_1), .B1(hLRec0_3), 
    .A1(hLRec0_2), .D0(hL_3), .C0(n13), .B0(n8077), .A0(clk_c_enable_53), 
    .DI0(n6518), .CE(\tm/clk_c_enable_48 ), .CLK(clk_c), .F0(n6518), 
    .Q0(hLRec0_3), .F1(n13));
  tm_SLICE_126 \tm/SLICE_126 ( .D1(hL_0), .C1(\tm/n5660 ), .B1(\tm/n977 ), 
    .A1(hL_1), .C0(\tm/n1606 ), .B0(\tm/n977 ), .A0(hL_0), .DI1(\tm/n6117 ), 
    .DI0(\tm/n6031 ), .CE(\tm/clk_c_enable_40 ), .CLK(clk_c), .F0(\tm/n6031 ), 
    .Q0(hL_0), .F1(\tm/n6117 ), .Q1(hL_1));
  tm_SLICE_127 \tm/SLICE_127 ( .D1(hL_3), .C1(\tm/n6_adj_380 ), 
    .B1(\tm/n5656 ), .A1(\tm/n977 ), .D0(\tm/n5658 ), .C0(hL_2), 
    .B0(\tm/n6935 ), .A0(\tm/n6952 ), .DI1(\tm/n6129 ), .DI0(\tm/n6130 ), 
    .CE(\tm/clk_c_enable_40 ), .CLK(clk_c), .F0(\tm/n6130 ), .Q0(hL_2), 
    .F1(\tm/n6129 ), .Q1(hL_3));
  SLICE_128 SLICE_128( .D1(mode_1), .C1(mHRec0_0), .D0(n8077), .C0(mHRec0_0), 
    .B0(clk_c_enable_53), .A0(mH_0), .DI0(n1840), .CE(\tm/clk_c_enable_55 ), 
    .CLK(clk_c), .F0(n1840), .Q0(mHRec0_0), .F1(\tm/n1101 ));
  tm_SLICE_129 \tm/SLICE_129 ( .D1(\tm/n5676 ), .C1(mH_0), .B1(\tm/n1006 ), 
    .A1(mH_1), .D0(\tm/n6897 ), .C0(\tm/n1006 ), .B0(\tm/n1101 ), .A0(mH_0), 
    .DI1(\tm/n6127 ), .DI0(\tm/n20_adj_388 ), .CE(\tm/clk_c_enable_42 ), 
    .CLK(clk_c), .F0(\tm/n20_adj_388 ), .Q0(mH_0), .F1(\tm/n6127 ), .Q1(mH_1));
  tm_SLICE_130 \tm/SLICE_130 ( .D1(\tm/n1099 ), .C1(\tm/n6897 ), 
    .B1(\tm/n1006 ), .A1(\tm/n580 ), .D0(\tm/n6939 ), .C0(\tm/n1006 ), 
    .B0(\tm/n5674 ), .A0(mH_2), .DI0(\tm/n6125 ), .CE(\tm/clk_c_enable_42 ), 
    .CLK(clk_c), .F0(\tm/n6125 ), .Q0(mH_2), .F1(\tm/n5674 ));
  SLICE_131 SLICE_131( .D1(\tm/mLRec0_1 ), .B1(mLRec0_0), .D0(mL_0), 
    .C0(clk_c_enable_53), .B0(mLRec0_0), .A0(n8077), .DI0(n1208), 
    .CE(clk_c_enable_60), .CLK(clk_c), .F0(n1208), .Q0(mLRec0_0), 
    .F1(\tm/n62 ));
  tm_SLICE_132 \tm/SLICE_132 ( .D1(\tm/n4_adj_394 ), .C1(mL_2), 
    .B1(\tm/n5667 ), .A1(\tm/n1022 ), .D0(\tm/n1022 ), .C0(\tm/n10 ), 
    .A0(mL_0), .DI1(\tm/n6120 ), .DI0(\tm/n8 ), .CE(\tm/clk_c_enable_41 ), 
    .CLK(clk_c), .F0(\tm/n8 ), .Q0(mL_0), .F1(\tm/n6120 ), .Q1(mL_2));
  tm_SLICE_133 \tm/SLICE_133 ( .D1(\tm/mLRec0_1 ), .C1(mode_1), .D0(mL_0), 
    .C0(\tm/n7636 ), .B0(\tm/n7635 ), .A0(mL_1), .DI0(\tm/n7561 ), 
    .M0(\tm/n1022 ), .CE(\tm/clk_c_enable_41 ), .CLK(clk_c), .OFX0(\tm/n7561 ), 
    .Q0(mL_1));
  tm_SLICE_134 \tm/SLICE_134 ( .D1(\tm/n1905 ), .C1(\tm/n1022 ), 
    .B1(\tm/n7607 ), .A1(\tm/n7623 ), .D0(\tm/n5665 ), .C0(\tm/n1022 ), 
    .B0(\tm/n6_adj_379 ), .A0(mL_3), .DI0(\tm/n6119 ), 
    .CE(\tm/clk_c_enable_41 ), .CLK(clk_c), .F0(\tm/n6119 ), .Q0(mL_3), 
    .F1(\tm/n5665 ));
  modekey_SLICE_136 \modekey/SLICE_136 ( .D0(\modekey/keystore_1 ), 
    .C0(\modekey/keystore_2 ), .A0(\modekey/keystore_0 ), 
    .DI0(\modekey/keystate_N_142 ), .M1(\modekey/keysamplerpulse ), 
    .CLK(clk_c), .F0(\modekey/keystate_N_142 ), .Q0(mode_key_state), 
    .Q1(\modekey/keysamplerpulse_ls ));
  SLICE_137 SLICE_137( .D1(\modekey/n7029 ), .C1(\modekey/n9 ), 
    .B1(\modekey/keysamplerpulsecnt_16 ), .A1(\modekey/keysamplerpulsecnt_10 ), 
    .C0(\modekey/n3119 ), .A0(\modekey/keysamplerpulse ), 
    .DI0(\modekey/keysamplerpulse_N_144 ), .M1(sck_c), .CLK(clk_c), 
    .F0(\modekey/keysamplerpulse_N_144 ), .Q0(\modekey/keysamplerpulse ), 
    .F1(\modekey/n3119 ), .Q1(\dt/shift_clock_ls ));
  modekey_SLICE_139 \modekey/SLICE_139 ( .B0(mode_key_c), 
    .DI0(\modekey/btnstate_N_138 ), .M1(\modekey/keystore_0 ), 
    .CE(\modekey/keystore_2__N_139 ), .CLK(clk_c), 
    .F0(\modekey/btnstate_N_138 ), .Q0(\modekey/keystore_0 ), 
    .Q1(\modekey/keystore_1 ));
  SLICE_142 SLICE_142( .D1(mL_2), .B1(mL_0), .A1(mL_1), 
    .D0(\upkey/keysamplerpulsecnt_24 ), .C0(\upkey/keysamplerpulsecnt_17 ), 
    .B0(\upkey/keysamplerpulsecnt_0 ), .A0(\upkey/keysamplerpulsecnt_20 ), 
    .M0(PortA_c), .CLK(clk_c), .F0(\upkey/n40 ), .Q0(\re/PA_ls ), .F1(n7628));
  SLICE_143 SLICE_143( .D1(\upkey/keysamplerpulsecnt_8 ), 
    .C1(\upkey/keysamplerpulsecnt_13 ), .B1(\upkey/keysamplerpulsecnt_22 ), 
    .A1(\upkey/keysamplerpulsecnt_19 ), .D0(\upkey/keysamplerpulsecnt_6 ), 
    .C0(\upkey/keysamplerpulsecnt_7 ), .B0(\upkey/keysamplerpulsecnt_14 ), 
    .A0(\upkey/keysamplerpulsecnt_12 ), .M0(PortB_c), 
    .CE(\re/clk_c_enable_10 ), .CLK(clk_c), .F0(\upkey/n7027 ), 
    .Q0(\re/act_cache_tmp ), .F1(\upkey/n43 ));
  re_SLICE_144 \re/SLICE_144 ( .D1(\re/PA_ls ), .B1(\re/int_times ), 
    .A1(PortA_c), .D0(\re/PA_ls ), .B0(PortA_c), .A0(\re/int_times ), 
    .DI0(\re/n3115 ), .CLK(clk_c), .F0(\re/n3115 ), .Q0(\re/int_times ), 
    .F1(\re/n4541 ));
  SLICE_145 SLICE_145( .D1(\upkey/keysamplerpulse_ls ), 
    .A1(\upkey/keysamplerpulse ), .C0(\rstkey/keystore_0 ), 
    .B0(\rstkey/keystore_1 ), .A0(\rstkey/keystore_2 ), 
    .DI0(\rstkey/keystate_N_142 ), .CLK(clk_c), .F0(\rstkey/keystate_N_142 ), 
    .Q0(rst_key_state), .F1(\upkey/keystore_2__N_139 ));
  rstkey_SLICE_146 \rstkey/SLICE_146 ( .D1(\rstkey/n49 ), 
    .C1(\rstkey/keysamplerpulsecnt_12 ), .B1(\rstkey/keysamplerpulsecnt_10 ), 
    .A1(\rstkey/n50 ), .C0(\rstkey/n3118 ), .A0(\rstkey/keysamplerpulse ), 
    .DI0(\rstkey/keysamplerpulse_N_144 ), .CLK(clk_c), 
    .F0(\rstkey/keysamplerpulse_N_144 ), .Q0(\rstkey/keysamplerpulse ), 
    .F1(\rstkey/n3118 ));
  SLICE_147 SLICE_147( .D1(\downkey/keysamplerpulse ), 
    .B1(\downkey/keysamplerpulse_ls ), .D0(\downkey/keysamplerpulsecnt_24 ), 
    .C0(\downkey/keysamplerpulsecnt_20 ), .B0(\downkey/keysamplerpulsecnt_17 ), 
    .A0(\downkey/keysamplerpulsecnt_0 ), .M0(\rstkey/keysamplerpulse ), 
    .CLK(clk_c), .F0(\downkey/n40 ), .Q0(\rstkey/keysamplerpulse_ls ), 
    .F1(\downkey/keystore_2__N_139 ));
  SLICE_148 SLICE_148( .D1(\downkey/keysamplerpulsecnt_8 ), 
    .C1(\downkey/keysamplerpulsecnt_19 ), .B1(\downkey/keysamplerpulsecnt_22 ), 
    .A1(\downkey/keysamplerpulsecnt_13 ), .B0(rst_key_c), 
    .DI0(\rstkey/btnstate_N_138 ), .M1(\rstkey/keystore_0 ), 
    .CE(\rstkey/keystore_2__N_139 ), .CLK(clk_c), .F0(\rstkey/btnstate_N_138 ), 
    .Q0(\rstkey/keystore_0 ), .F1(\downkey/n43 ), .Q1(\rstkey/keystore_1 ));
  SLICE_149 SLICE_149( .D1(\downkey/keysamplerpulsecnt_7 ), 
    .C1(\downkey/keysamplerpulsecnt_14 ), .B1(\downkey/keysamplerpulsecnt_12 ), 
    .A1(\downkey/keysamplerpulsecnt_6 ), .D0(\modekey/keysamplerpulsecnt_0 ), 
    .C0(\modekey/keysamplerpulsecnt_24 ), .B0(\modekey/keysamplerpulsecnt_20 ), 
    .A0(\modekey/keysamplerpulsecnt_17 ), .M0(\rstkey/keystore_1 ), 
    .CE(\rstkey/keystore_2__N_139 ), .CLK(clk_c), .F0(\modekey/n40 ), 
    .Q0(\rstkey/keystore_2 ), .F1(\downkey/n7025 ));
  SLICE_150 SLICE_150( .D1(sH_2), .C1(n8077), .B1(n4434), .A1(clk_c_enable_53), 
    .D0(clk_c_enable_53), .C0(n8077), .B0(sH_0), .A0(sHRec0_0), .DI1(n1453), 
    .DI0(n1455), .CE(clk_c_enable_50), .CLK(clk_c), .F0(n1455), .Q0(sHRec0_0), 
    .F1(n1453), .Q1(sHRec0_2));
  tm_SLICE_151 \tm/SLICE_151 ( .D1(sH_0), .C1(\tm/n992 ), .B1(\tm/n5651 ), 
    .A1(sH_1), .D0(\tm/n6074 ), .C0(\tm/n992 ), .B0(n1262), .A0(sH_0), 
    .DI1(\tm/n6126 ), .DI0(\tm/n20_adj_387 ), .CE(\tm/clk_c_enable_39 ), 
    .CLK(clk_c), .F0(\tm/n20_adj_387 ), .Q0(sH_0), .F1(\tm/n6126 ), .Q1(sH_1));
  tm_SLICE_152 \tm/SLICE_152 ( .D1(n1260), .C1(\tm/n6074 ), .B1(\tm/n992 ), 
    .A1(\tm/n7605 ), .D0(\tm/n992 ), .C0(\tm/n5649 ), .B0(\tm/n6945 ), 
    .A0(sH_2), .DI0(\tm/n6121 ), .CE(\tm/clk_c_enable_39 ), .CLK(clk_c), 
    .F0(\tm/n6121 ), .Q0(sH_2), .F1(\tm/n5649 ));
  SLICE_153 SLICE_153( .C1(mode_1), .B1(mode_0), .D0(sLRec0_0), .C0(n8077), 
    .B0(clk_c_enable_53), .A0(sL_0), .DI0(n1773), .CE(clk_c_enable_53), 
    .CLK(clk_c), .F0(n1773), .Q0(sLRec0_0), .F1(n8077));
  tm_SLICE_154 \tm/SLICE_154 ( .D1(\tm/n1039 ), .C1(\tm/n5637 ), 
    .B1(\tm/n4_adj_384 ), .A1(sL_2), .D0(\tm/n1039 ), .C0(\tm/n2956 ), 
    .B0(\tm/n1852 ), .A0(sL_0), .DI1(\tm/n6122 ), .DI0(\tm/n6028 ), 
    .CE(\tm/clk_c_enable_45 ), .CLK(clk_c), .F0(\tm/n6028 ), .Q0(sL_0), 
    .F1(\tm/n6122 ), .Q1(sL_2));
  tm_SLICE_155 \tm/SLICE_155 ( .D1(\tm/sLRec0_1 ), .A1(mode_1), .D0(sL_1), 
    .C0(\tm/n7635 ), .B0(sL_0), .A0(\tm/n7636 ), .DI0(\tm/n7498 ), 
    .M0(\tm/n1039 ), .CE(\tm/clk_c_enable_45 ), .CLK(clk_c), .OFX0(\tm/n7498 ), 
    .Q0(sL_1));
  tm_SLICE_156 \tm/SLICE_156 ( .D1(\tm/n1849 ), .C1(\tm/n1039 ), 
    .B1(\tm/n7623 ), .A1(\tm/n2956 ), .D0(\tm/n5635 ), .C0(\tm/n1039 ), 
    .B0(\tm/n6_adj_386 ), .A0(sL_3), .DI0(\tm/n6118 ), 
    .CE(\tm/clk_c_enable_45 ), .CLK(clk_c), .F0(\tm/n6118 ), .Q0(sL_3), 
    .F1(\tm/n5635 ));
  dt_SLICE_157 \dt/SLICE_157 ( .D1(\dt/n7159 ), .C1(\dt/n50 ), .B1(\dt/n49 ), 
    .A1(\dt/n58 ), .C0(\dt/n3123 ), .A0(sck_c), .DI0(\dt/sck_N_375 ), 
    .CLK(clk_c), .F0(\dt/sck_N_375 ), .Q0(sck_c), .F1(\dt/n3123 ));
  secondGen_SLICE_158 \secondGen/SLICE_158 ( .D1(\secondGen/seccnt_11 ), 
    .C1(\secondGen/n43 ), .B1(\secondGen/seccnt_7 ), .A1(\secondGen/n44 ), 
    .B0(\secondGen/n3117 ), .A0(sec), .DI0(\secondGen/clk_out_N_68 ), 
    .CLK(clk_c), .F0(\secondGen/clk_out_N_68 ), .Q0(sec), 
    .F1(\secondGen/n3117 ));
  SLICE_159 SLICE_159( .D1(\modekey/keysamplerpulsecnt_22 ), 
    .C1(\modekey/keysamplerpulsecnt_8 ), .B1(\modekey/keysamplerpulsecnt_13 ), 
    .A1(\modekey/keysamplerpulsecnt_19 ), .C0(sec), .DI0(sec_N_2), .CLK(clk_c), 
    .F0(sec_N_2), .Q0(secDisp_c), .F1(\modekey/n43 ));
  SLICE_160 SLICE_160( .D1(\modekey/keysamplerpulse ), 
    .C1(\modekey/keysamplerpulse_ls ), .D0(\modekey/keysamplerpulsecnt_14 ), 
    .C0(\modekey/keysamplerpulsecnt_6 ), .B0(\modekey/keysamplerpulsecnt_12 ), 
    .A0(\modekey/keysamplerpulsecnt_7 ), .M0(sec), .CLK(clk_c), 
    .F0(\modekey/n7029 ), .Q0(sec_ls), .F1(\modekey/keystore_2__N_139 ));
  SLICE_161 SLICE_161( .D1(\secondGen/seccnt_4 ), .C1(\secondGen/seccnt_1 ), 
    .B1(\secondGen/seccnt_30 ), .A1(\secondGen/seccnt_27 ), 
    .D0(\secondGen/seccnt_6 ), .A0(\secondGen/seccnt_23 ), .M0(down_key_state), 
    .CLK(clk_c), .F0(\secondGen/n32 ), .Q0(\tm/downkey_ls ), 
    .F1(\secondGen/n38 ));
  tm_SLICE_162 \tm/SLICE_162 ( .D1(n6832), .C1(ctrlcode595_17), 
    .B1(\tm/n7620 ), .A1(\tm/n17 ), .D0(n6832), .C0(\tm/n7620 ), 
    .B0(\tm/hHRec0_0 ), .A0(hH_0), .DI1(\tm/n1393 ), .DI0(\tm/n1394 ), 
    .CE(\tm/clk_c_enable_61 ), .CLK(clk_c), .F0(\tm/n1394 ), 
    .Q0(\tm/hHRec0_0 ), .F1(\tm/n1393 ), .Q1(\tm/hHRec0_1 ));
  SLICE_163 SLICE_163( .D1(n6889), .C1(hLRec0_3), .B1(hLRec0_2), .A1(n1336), 
    .D0(n547), .C0(hL_0), .B0(\tm/n7620 ), .A0(\tm/hLRec0_0 ), 
    .DI0(\tm/n1327 ), .CE(\tm/clk_c_enable_48 ), .CLK(clk_c), .F0(\tm/n1327 ), 
    .Q0(\tm/hLRec0_0 ), .F1(n547));
  tm_SLICE_164 \tm/SLICE_164 ( .C1(mH_1), .B1(\tm/n7620 ), .A1(mHRec0_0), 
    .D0(\tm/mHRec0_2 ), .C0(mH_1), .B0(\tm/n7620 ), .A0(mHRec0_0), 
    .DI0(\tm/n7666 ), .M0(\tm/mHRec0_1 ), .CE(\tm/clk_c_enable_55 ), 
    .CLK(clk_c), .OFX0(\tm/n7666 ), .Q0(\tm/mHRec0_1 ));
  SLICE_165 SLICE_165( .D1(\tm/mHRec0_2 ), .C1(mHRec0_0), .A1(\tm/mHRec0_1 ), 
    .D0(clk_c_enable_53), .C0(n9_adj_398), .B0(n8077), .A0(mH_2), .DI0(n6684), 
    .CE(\tm/clk_c_enable_55 ), .CLK(clk_c), .F0(n6684), .Q0(\tm/mHRec0_2 ), 
    .F1(n9_adj_398));
  tm_SLICE_166 \tm/SLICE_166 ( .D1(\tm/n7661 ), .B1(mL_3), .A1(\tm/n7620 ), 
    .D0(\tm/n62 ), .C0(\tm/n9 ), .B0(mL_1), .A0(\tm/n7620 ), .DI1(\tm/n7663 ), 
    .DI0(\tm/n1207 ), .CE(clk_c_enable_60), .CLK(clk_c), .F0(\tm/n1207 ), 
    .Q0(\tm/mLRec0_1 ), .F1(\tm/n7663 ), .Q1(\tm/mLRec0_3 ));
  tm_SLICE_167 \tm/SLICE_167 ( .D1(mLRec0_0), .C1(\tm/mLRec0_2 ), 
    .B1(\tm/n7620 ), .A1(mL_2), .C0(\tm/mLRec0_2 ), .B0(\tm/n7620 ), .A0(mL_2), 
    .DI0(\tm/n7660 ), .M0(\tm/mLRec0_1 ), .CE(clk_c_enable_60), .CLK(clk_c), 
    .OFX0(\tm/n7660 ), .Q0(\tm/mLRec0_2 ));
  SLICE_168 SLICE_168( .D1(sHRec0_2), .C1(sHRec0_0), .A1(\tm/sHRec0_1 ), 
    .D0(n8077), .C0(clk_c_enable_53), .B0(n4439), .A0(sH_1), .DI0(n1454), 
    .CE(clk_c_enable_50), .CLK(clk_c), .F0(n1454), .Q0(\tm/sHRec0_1 ), 
    .F1(n4439));
  tm_SLICE_169 \tm/SLICE_169 ( .D1(sL_3), .C1(\tm/n7620 ), .B1(\tm/n7673 ), 
    .D0(\tm/n111 ), .C0(\tm/n7620 ), .B0(n7), .A0(sL_1), .DI1(\tm/n7675 ), 
    .DI0(\tm/n1772 ), .CE(clk_c_enable_53), .CLK(clk_c), .F0(\tm/n1772 ), 
    .Q0(\tm/sLRec0_1 ), .F1(\tm/n7675 ), .Q1(\tm/sLRec0_3 ));
  tm_SLICE_170 \tm/SLICE_170 ( .D1(sLRec0_0), .C1(sL_2), .B1(\tm/sLRec0_2 ), 
    .A1(\tm/n7620 ), .D0(\tm/n7620 ), .C0(sL_2), .A0(\tm/sLRec0_2 ), 
    .DI0(\tm/n7669 ), .M0(\tm/sLRec0_1 ), .CE(clk_c_enable_53), .CLK(clk_c), 
    .OFX0(\tm/n7669 ), .Q0(\tm/sLRec0_2 ));
  SLICE_171 SLICE_171( .B1(\rstkey/keysamplerpulsecnt_16 ), 
    .A1(\rstkey/keysamplerpulsecnt_7 ), .D0(\rstkey/keysamplerpulsecnt_20 ), 
    .C0(\rstkey/keysamplerpulsecnt_5 ), .B0(\rstkey/keysamplerpulsecnt_19 ), 
    .A0(\rstkey/keysamplerpulsecnt_22 ), .M0(up_key_state), .CLK(clk_c), 
    .F0(\rstkey/n44 ), .Q0(\tm/upkey_ls ), .F1(\rstkey/n7003 ));
  SLICE_172 SLICE_172( .D1(\rstkey/keysamplerpulse_ls ), 
    .A1(\rstkey/keysamplerpulse ), .D0(\upkey/keystore_2 ), 
    .C0(\upkey/keystore_0 ), .B0(\upkey/keystore_1 ), 
    .DI0(\upkey/keystate_N_142 ), .CLK(clk_c), .F0(\upkey/keystate_N_142 ), 
    .Q0(up_key_state), .F1(\rstkey/keystore_2__N_139 ));
  upkey_SLICE_173 \upkey/SLICE_173 ( .D1(\upkey/keysamplerpulsecnt_16 ), 
    .C1(\upkey/n9 ), .B1(\upkey/keysamplerpulsecnt_10 ), .A1(\upkey/n7027 ), 
    .B0(\upkey/n3121 ), .A0(\upkey/keysamplerpulse ), 
    .DI0(\upkey/keysamplerpulse_N_144 ), .CLK(clk_c), 
    .F0(\upkey/keysamplerpulse_N_144 ), .Q0(\upkey/keysamplerpulse ), 
    .F1(\upkey/n3121 ));
  SLICE_174 SLICE_174( .D1(\dt/shift_clock_cnt_9 ), 
    .C1(\dt/shift_clock_cnt_26 ), .B1(\dt/shift_clock_cnt_25 ), 
    .A1(\dt/shift_clock_cnt_12 ), .D0(\dt/shift_clock_cnt_3 ), 
    .C0(\dt/shift_clock_cnt_13 ), .B0(\dt/shift_clock_cnt_29 ), 
    .A0(\dt/shift_clock_cnt_31 ), .M0(\upkey/keysamplerpulse ), .CLK(clk_c), 
    .F0(\dt/n56 ), .Q0(\upkey/keysamplerpulse_ls ), .F1(\dt/n51 ));
  SLICE_175 SLICE_175( .C1(mode_key_state), .B1(\controller/modekey_ls ), 
    .C0(up_key_c), .DI0(\upkey/btnstate_N_138 ), .M1(\upkey/keystore_0 ), 
    .CE(\upkey/keystore_2__N_139 ), .CLK(clk_c), .F0(\upkey/btnstate_N_138 ), 
    .Q0(\upkey/keystore_0 ), .F1(\controller/moderec_1__N_149 ), 
    .Q1(\upkey/keystore_1 ));
  SLICE_176 SLICE_176( .D1(\tm/hHRec0_0 ), .C1(\tm/hHRec0_1 ), .D0(sHRec0_2), 
    .B0(\tm/sHRec0_1 ), .A0(sHRec0_0), .M0(\upkey/keystore_1 ), 
    .CE(\upkey/keystore_2__N_139 ), .CLK(clk_c), .F0(n4434), 
    .Q0(\upkey/keystore_2 ), .F1(\tm/n17 ));
  tm_i23_SLICE_177 \tm/i23/SLICE_177 ( .D1(\tm/n7627 ), .C1(\tm/n23 ), 
    .B1(\tm/n7635 ), .A1(\tm/n7636 ), .D0(hL_1), .C0(\tm/n7614 ), 
    .A0(\tm/n7613 ), .M0(hL_0), .OFX0(\tm/n16 ));
  tm_i6525_SLICE_178 \tm/i6525/SLICE_178 ( .D1(mode_1), .C1(\tm/n3008 ), 
    .B1(\tm/n7610 ), .A1(mode_0), .D0(mode_1), .C0(\tm/n7610 ), .B0(mode_0), 
    .M0(\tm/n7624 ), .OFX0(\tm/n1039 ));
  tm_i6446_SLICE_179 \tm/i6446/SLICE_179 ( .D1(\tm/n6_adj_378 ), .C1(hL_1), 
    .B1(hL_0), .A1(hL_3), .D0(\tm/n257 ), .C0(hL_1), .B0(hL_0), .A0(hL_3), 
    .M0(\tm/n7623 ), .OFX0(\tm/n7465 ));
  dt_i6266_SLICE_180 \dt/i6266/SLICE_180 ( .D1(\dt/rck_N_376 ), 
    .C1(\dt/n2673 ), .B1(\dt/n7621 ), .A1(\dt/n7631 ), .D0(\dt/n375 ), 
    .C0(\dt/n6_adj_377 ), .B0(\dt/n6940 ), .A0(\dt/n7609 ), .M1(\dt/codeP_1 ), 
    .M0(\dt/codeP_0 ), .FXB(\dt/n7077 ), .FXA(\dt/n7076 ), .OFX0(\dt/n7077 ), 
    .OFX1(\dt/n7078 ));
  dt_i5444_SLICE_181 \dt/i5444/SLICE_181 ( .D1(\dt/n2688 ), .C1(\dt/n7653 ), 
    .A1(\dt/n374 ), .D0(\dt/n6940 ), .C0(\dt/n373 ), .B0(\dt/n375 ), 
    .A0(\dt/n3090 ), .M0(\dt/codeP_0 ), .OFX0(\dt/n6256 ));
  dt_i6265_SLICE_182 \dt/i6265/SLICE_182 ( .D1(\dt/n370 ), .C1(\dt/rck_N_376 ), 
    .A1(\dt/n3083 ), .D0(\dt/n6 ), .C0(\dt/n371 ), .B0(\dt/n7619 ), 
    .A0(\dt/n3088 ), .M0(\dt/codeP_0 ), .OFX0(\dt/n7076 ));
  dt_i2374_SLICE_183 \dt/i2374/SLICE_183 ( .D1(\dt/n379 ), .C1(\dt/n7477 ), 
    .B1(\dt/n378 ), .A1(\dt/n2576 ), .D0(ctrlcode595_68), .C0(ctrlcode595_69), 
    .B0(\dt/n380 ), .M0(\dt/n7052 ), .OFX0(\dt/n3090 ));
  dt_i2370_SLICE_184 \dt/i2370/SLICE_184 ( .D1(\dt/n379 ), .C1(\dt/n7672 ), 
    .B1(\dt/n2680 ), .A1(\dt/n378 ), .D0(ctrlcode595_37), .C0(\dt/n380 ), 
    .B0(ctrlcode595_36), .M0(\dt/n7052 ), .OFX0(\dt/n3086 ));
  dt_i2372_SLICE_185 \dt/i2372/SLICE_185 ( .D1(\dt/n379 ), .C1(\dt/n7684 ), 
    .B1(\dt/n378 ), .A1(\dt/n7449 ), .C0(ctrlcode595_4), .B0(\dt/n380 ), 
    .A0(ctrlcode595_5), .M0(\dt/n7052 ), .OFX0(\dt/n3088 ));
  dt_i1958_SLICE_186 \dt/i1958/SLICE_186 ( .D1(\dt/n7472 ), .B1(\dt/n7493 ), 
    .A1(\dt/n2687 ), .D0(mH_0), .C0(mH_1), .B0(\dt/n383 ), .A0(mH_2), 
    .M0(\dt/n7071 ), .OFX0(\dt/n2672 ));
  dt_i1974_SLICE_187 \dt/i1974/SLICE_187 ( .C1(\dt/n7475 ), .B1(\dt/n7494 ), 
    .A1(\dt/n2687 ), .D0(sH_0), .C0(\dt/n383 ), .B0(sH_1), .A0(sH_2), 
    .M0(\dt/n7071 ), .OFX0(\dt/n2688 ));
  dt_i6442_SLICE_188 \dt/i6442/SLICE_188 ( .D1(hL_2), .C1(hL_3), .B1(hL_0), 
    .A1(hL_1), .D0(\dt/n7447 ), .C0(\dt/n383 ), .A0(\dt/n7080 ), 
    .M0(\dt/n382 ), .OFX0(\dt/n7449 ));
  dt_i6452_SLICE_189 \dt/i6452/SLICE_189 ( .D1(sL_3), .C1(sL_0), .B1(sL_2), 
    .A1(sL_1), .D0(sL_3), .C0(sL_0), .B0(sL_2), .A0(sL_1), .M0(\dt/n378 ), 
    .OFX0(\dt/n7477 ));
  dt_i6450_SLICE_190 \dt/i6450/SLICE_190 ( .C1(sH_0), .B1(sH_1), .A1(sH_2), 
    .D0(\dt/n379 ), .C0(sH_0), .B0(sH_1), .A0(sH_2), .M0(\dt/n378 ), 
    .OFX0(\dt/n7475 ));
  dt_i6448_SLICE_191 \dt/i6448/SLICE_191 ( .D1(mH_2), .C1(mH_1), .A1(mH_0), 
    .D0(mH_2), .C0(mH_1), .B0(\dt/n379 ), .A0(mH_0), .M0(\dt/n378 ), 
    .OFX0(\dt/n7472 ));
  dt_i6543_SLICE_192 \dt/i6543/SLICE_192 ( .D1(hL_1), .C1(hL_3), .B1(hL_0), 
    .A1(\dt/n378 ), .D0(hL_1), .C0(hL_3), .B0(hL_0), .A0(\dt/n378 ), .M0(hL_2), 
    .OFX0(\dt/n7684 ));
  dt_i6541_SLICE_193 \dt/i6541/SLICE_193 ( .D1(mL_1), .C1(mL_2), .B1(mL_3), 
    .A1(\dt/n383 ), .D0(mL_1), .C0(mL_2), .B0(mL_3), .A0(\dt/n383 ), .M0(mL_0), 
    .OFX0(\dt/n7681 ));
  dt_i6539_SLICE_194 \dt/i6539/SLICE_194 ( .D1(\dt/n383 ), .C1(sL_1), 
    .B1(sL_3), .A1(sL_2), .D0(\dt/n383 ), .C0(sL_1), .B0(sL_3), .A0(sL_2), 
    .M0(sL_0), .OFX0(\dt/n7678 ));
  dt_i6535_SLICE_195 \dt/i6535/SLICE_195 ( .D1(mL_2), .C1(mL_0), .B1(mL_3), 
    .A1(\dt/n378 ), .D0(mL_2), .C0(mL_0), .B0(mL_3), .A0(\dt/n378 ), .M0(mL_1), 
    .OFX0(\dt/n7672 ));
  SLICE_196 SLICE_196( .D1(hH_0), .C1(ctrlcode595_17), .B1(n381), .A1(n2658), 
    .D0(\dt/n382 ), .C0(\dt/n383 ), .B0(ctrlcode595_17), .A0(hH_0), .F0(n2658), 
    .F1(n3082));
  tm_SLICE_197 \tm/SLICE_197 ( .D1(\tm/n6 ), .C1(n4642), .B1(n8077), .A1(mH_1), 
    .D0(mH_0), .C0(\tm/n6937 ), .B0(\tm/n14 ), .A0(mH_1), .F0(\tm/n6939 ), 
    .F1(\tm/n6937 ));
  tm_SLICE_198 \tm/SLICE_198 ( .D1(mL_3), .C1(\tm/n2989 ), .B1(n7628), 
    .A1(\tm/n7623 ), .D0(mL_3), .C0(mL_0), .B0(\tm/n7648 ), .A0(\tm/n257 ), 
    .F0(\tm/n2989 ), .F1(\tm/n2339 ));
  tm_SLICE_199 \tm/SLICE_199 ( .D1(\tm/n7623 ), .C1(\tm/n6952 ), 
    .B1(\tm/n7650 ), .A1(\tm/n13 ), .D0(mode_1), .C0(\tm/n7650 ), 
    .B0(\tm/n7606 ), .A0(mode_0), .F0(\tm/n6952 ), .F1(\tm/n6935 ));
  tm_SLICE_200 \tm/SLICE_200 ( .D1(\tm/n7623 ), .C1(\tm/n2592 ), 
    .B1(\tm/hHRec0_1 ), .A1(mode_0), .D0(\tm/n7623 ), .C0(n8077), 
    .B0(\tm/n7614 ), .A0(\tm/n6_adj_378 ), .F0(\tm/n2592 ), .F1(\tm/n5644 ));
  tm_SLICE_201 \tm/SLICE_201 ( .D1(\tm/n5667 ), .C1(\tm/n4_adj_394 ), 
    .B1(mL_2), .A1(\tm/n1022 ), .D0(\tm/mLRec0_2 ), .C0(mode_1), 
    .B0(\tm/n7623 ), .A0(\tm/n1022 ), .F0(\tm/n5667 ), .F1(\tm/n6_adj_379 ));
  tm_SLICE_202 \tm/SLICE_202 ( .D1(\tm/n6870 ), .C1(\tm/n7645 ), 
    .B1(\tm/n7623 ), .A1(\tm/n6226 ), .D0(\tm/n977 ), .C0(\tm/n1753 ), 
    .B0(\tm/n7623 ), .A0(\tm/n1590 ), .F0(\tm/n5656 ), .F1(\tm/n1753 ));
  tm_SLICE_203 \tm/SLICE_203 ( .D1(\tm/n6935 ), .C1(\tm/n20 ), .B1(hL_2), 
    .A1(\tm/n6969 ), .D0(hL_2), .C0(\tm/n7651 ), .B0(\tm/n7650 ), 
    .A0(\tm/n22_adj_381 ), .F0(\tm/n20 ), .F1(\tm/n6_adj_380 ));
  tm_SLICE_204 \tm/SLICE_204 ( .D1(n8077), .C1(\tm/n6_adj_383 ), .B1(sH_1), 
    .A1(n4547), .D0(\tm/n12 ), .C0(sH_1), .B0(\tm/n6943 ), 
    .A0(\tm/n16_adj_382 ), .F0(\tm/n6945 ), .F1(\tm/n6943 ));
  tm_SLICE_205 \tm/SLICE_205 ( .D1(\tm/n5637 ), .C1(\tm/n4_adj_384 ), 
    .B1(sL_2), .A1(\tm/n1039 ), .D0(\tm/n1039 ), .C0(sL_0), .B0(\tm/n7623 ), 
    .A0(sL_1), .F0(\tm/n4_adj_384 ), .F1(\tm/n6_adj_386 ));
  tm_SLICE_206 \tm/SLICE_206 ( .D1(\tm/n257 ), .C1(\tm/n7634 ), .B1(sL_0), 
    .A1(sL_3), .D0(\tm/n7623 ), .C0(\tm/n3008 ), .B0(n7626), .A0(sL_3), 
    .F0(\tm/n2341 ), .F1(\tm/n3008 ));
  SLICE_207 SLICE_207( .D1(mL_2), .C1(mL_3), .B1(mL_0), .A1(mL_1), 
    .D0(\tm/n7623 ), .C0(n7616), .B0(\tm/n6927 ), .A0(\tm/n6963 ), 
    .F0(\tm/n14 ), .F1(n7616));
  tm_SLICE_208 \tm/SLICE_208 ( .D1(\tm/n7649 ), .C1(mH_0), .B1(\tm/n7629 ), 
    .A1(\tm/n7647 ), .C0(mode_0), .A0(mode_1), .F0(\tm/n7649 ), 
    .F1(\tm/n6927 ));
  tm_SLICE_209 \tm/SLICE_209 ( .D1(act_of_re_0), .C1(\tm/upkey_ls ), 
    .B1(act_of_re_31), .A1(up_key_state), .D0(mode_0), .C0(mode_1), 
    .B0(\tm/n2989 ), .A0(\tm/n7624 ), .F0(\tm/n6 ), .F1(\tm/n7624 ));
  tm_SLICE_210 \tm/SLICE_210 ( .D1(\tm/n7608 ), .C1(\tm/n7624 ), .B1(n8077), 
    .A1(\tm/n7617 ), .C0(mode_1), .B0(mode_0), .A0(\tm/n2989 ), 
    .F0(\tm/n7617 ), .F1(\tm/n1022 ));
  SLICE_211 SLICE_211( .C1(\dt/n7681 ), .B1(\dt/n382 ), .A1(ctrlcode595_35), 
    .D0(mL_1), .C0(mL_2), .B0(mL_3), .A0(mL_0), .F0(ctrlcode595_35), 
    .F1(\dt/n2680 ));
  tm_SLICE_212 \tm/SLICE_212 ( .D1(\tm/n257 ), .C1(\tm/n7624 ), 
    .B1(\tm/n7614 ), .A1(\tm/n7650 ), .B0(hL_0), .A0(hL_1), .F0(\tm/n7650 ), 
    .F1(\tm/n7604 ));
  tm_SLICE_213 \tm/SLICE_213 ( .D1(mL_1), .C1(\tm/n1022 ), .B1(\tm/n7623 ), 
    .A1(mL_0), .D0(up_key_state), .C0(act_of_re_31), .B0(act_of_re_0), 
    .A0(\tm/upkey_ls ), .F0(\tm/n7623 ), .F1(\tm/n4_adj_394 ));
  tm_SLICE_214 \tm/SLICE_214 ( .D1(mL_3), .C1(n7628), .B1(\tm/n7636 ), 
    .A1(\tm/n7635 ), .D0(\tm/n1006 ), .C0(mode_1), .B0(\tm/mHRec0_1 ), 
    .A0(\tm/n580 ), .F0(\tm/n5676 ), .F1(\tm/n580 ));
  tm_SLICE_215 \tm/SLICE_215 ( .D1(sH_2), .A1(sH_1), .D0(sH_0), 
    .C0(\tm/n6943 ), .B0(\tm/n7610 ), .A0(\tm/n7644 ), .F0(\tm/n992 ), 
    .F1(\tm/n7644 ));
  tm_SLICE_216 \tm/SLICE_216 ( .D1(\tm/n23 ), .C1(hL_2), .B1(\tm/n7645 ), 
    .A1(\tm/n7651 ), .C0(hL_1), .A0(hL_0), .F0(\tm/n7651 ), .F1(\tm/n13 ));
  tm_SLICE_217 \tm/SLICE_217 ( .D1(\tm/n257 ), .C1(\tm/n7645 ), .B1(hL_3), 
    .A1(\tm/n7624 ), .D0(mode_1), .C0(mode_0), .F0(\tm/n7645 ), 
    .F1(\tm/n22_adj_381 ));
  tm_SLICE_218 \tm/SLICE_218 ( .D1(hL_2), .C1(hL_1), .B1(hL_0), .A1(hL_3), 
    .D0(\tm/n7604 ), .C0(\tm/n6950 ), .B0(\tm/clk_c_enable_38 ), 
    .A0(\tm/n7646 ), .F0(\tm/n3120 ), .F1(\tm/n6950 ));
  tm_SLICE_219 \tm/SLICE_219 ( .C1(\tm/n16 ), .B1(mode_1), .A1(mode_0), 
    .D0(\tm/n4 ), .C0(\tm/n977 ), .B0(\tm/n1753 ), .A0(\tm/n7623 ), 
    .F0(\tm/n5658 ), .F1(\tm/n977 ));
  tm_SLICE_220 \tm/SLICE_220 ( .C1(mH_0), .B1(mH_2), .A1(mH_1), 
    .D0(\tm/n7618 ), .C0(\tm/n7630 ), .B0(\tm/n6937 ), .A0(\tm/n7623 ), 
    .F0(\tm/n1006 ), .F1(\tm/n7630 ));
  tm_SLICE_221 \tm/SLICE_221 ( .D1(up_key_state), .C1(\tm/upkey_ls ), 
    .B1(act_of_re_0), .A1(act_of_re_31), .D0(hLRec0_1), .C0(\tm/n7622 ), 
    .B0(mode_0), .A0(\tm/n1753 ), .F0(\tm/n1605 ), .F1(\tm/n7622 ));
  SLICE_222 SLICE_222( .D1(sL_1), .B1(sL_0), .A1(sL_2), .D0(sL_3), 
    .C0(\tm/n7635 ), .B0(n7626), .A0(\tm/n7636 ), .F0(\tm/n7605 ), .F1(n7626));
  tm_SLICE_223 \tm/SLICE_223 ( .D1(sH_2), .C1(sH_0), .B1(\tm/n2956 ), 
    .A1(sH_1), .D0(\tm/n7622 ), .C0(mode_1), .B0(\tm/n6837 ), .A0(mode_0), 
    .F0(\tm/n2956 ), .F1(\tm/n6074 ));
  tm_SLICE_224 \tm/SLICE_224 ( .D1(mL_3), .C1(mode_0), .B1(\tm/n7648 ), 
    .A1(mL_0), .D0(\tm/n7630 ), .C0(mode_1), .B0(\tm/n7615 ), .A0(\tm/n7622 ), 
    .F0(\tm/n6897 ), .F1(\tm/n7615 ));
  tm_SLICE_225 \tm/SLICE_225 ( .D1(mL_2), .C1(mL_3), .B1(mL_1), .A1(mL_0), 
    .D0(\tm/n7622 ), .C0(mode_1), .B0(mode_0), .A0(\tm/n7629 ), 
    .F0(\tm/n7607 ), .F1(\tm/n7629 ));
  tm_SLICE_226 \tm/SLICE_226 ( .D1(down_key_state), .C1(act_of_re_31), 
    .B1(\tm/downkey_ls ), .A1(act_of_re_0), .D0(mode_1), .C0(\tm/n257 ), 
    .B0(\tm/n7623 ), .A0(mode_0), .F0(\tm/clk_c_enable_45 ), .F1(\tm/n257 ));
  tm_SLICE_227 \tm/SLICE_227 ( .C1(act_of_re_31), .B1(act_of_re_0), 
    .D0(\tm/n977 ), .C0(\tm/n7636 ), .B0(\tm/n7635 ), .A0(\tm/n1605 ), 
    .F0(\tm/n5660 ), .F1(\tm/n7636 ));
  tm_SLICE_228 \tm/SLICE_228 ( .D1(\tm/n7637 ), .C1(\tm/n7635 ), 
    .B1(\tm/n6837 ), .A1(\tm/n7636 ), .C0(mode_1), .A0(mode_0), 
    .F0(\tm/n7637 ), .F1(\tm/n7610 ));
  tm_SLICE_229 \tm/SLICE_229 ( .D1(\tm/upkey_ls ), .C1(up_key_state), 
    .D0(\tm/n7649 ), .C0(\tm/n7635 ), .B0(\tm/n7636 ), .A0(\tm/n7629 ), 
    .F0(\tm/n7608 ), .F1(\tm/n7635 ));
  tm_SLICE_230 \tm/SLICE_230 ( .D1(n8077), .C1(\tm/n7612 ), .B1(\tm/hLRec0_0 ), 
    .A1(\tm/n10_adj_389 ), .D0(n6828), .C0(\tm/n9 ), .F0(\tm/n7612 ), .F1(n9));
  tm_SLICE_231 \tm/SLICE_231 ( .D1(n8077), .C1(\tm/n7603 ), 
    .B1(clk_c_enable_53), .A1(\tm/n4_adj_396 ), .D0(\tm/n9 ), 
    .C0(\tm/n10_adj_389 ), .B0(\tm/hLRec0_0 ), .A0(n6828), .F0(\tm/n7603 ), 
    .F1(\tm/clk_c_enable_61 ));
  tm_SLICE_232 \tm/SLICE_232 ( .D1(n8077), .C1(\tm/n7612 ), 
    .B1(\tm/n10_adj_389 ), .A1(clk_c_enable_53), .D0(\tm/mHRec0_1 ), 
    .C0(\tm/mHRec0_2 ), .A0(mHRec0_0), .F0(\tm/n10_adj_389 ), 
    .F1(\tm/clk_c_enable_48 ));
  SLICE_233 SLICE_233( .C1(sec), .B1(sec_ls), .D0(n8077), .C0(n6828), 
    .B0(clk_c_enable_53), .A0(\tm/n9 ), .F0(\tm/clk_c_enable_55 ), 
    .F1(clk_c_enable_53));
  SLICE_234 SLICE_234( .D1(sec_ls), .C1(sec), .B1(n8077), .A1(n6828), 
    .D0(sHRec0_0), .C0(sHRec0_2), .B0(\tm/sHRec0_1 ), .A0(n7), .F0(n6828), 
    .F1(clk_c_enable_60));
  tm_SLICE_235 \tm/SLICE_235 ( .D1(mL_2), .C1(mL_1), .D0(mL_3), .C0(mL_0), 
    .B0(\tm/n7649 ), .A0(\tm/n7648 ), .F0(\tm/n7618 ), .F1(\tm/n7648 ));
  SLICE_236 SLICE_236( .D1(n8077), .C1(n7), .B1(sec), .A1(sec_ls), 
    .D0(\tm/sLRec0_2 ), .C0(\tm/sLRec0_1 ), .B0(sLRec0_0), .A0(\tm/sLRec0_3 ), 
    .F0(n7), .F1(clk_c_enable_50));
  tm_SLICE_237 \tm/SLICE_237 ( .D1(hL_2), .C1(\tm/n23 ), .B1(hL_0), .D0(hL_1), 
    .C0(ctrlcode595_17), .B0(hH_0), .A0(hL_3), .F0(\tm/n23 ), .F1(\tm/n6870 ));
  tm_SLICE_238 \tm/SLICE_238 ( .D1(\tm/n7624 ), .C1(\tm/n257 ), 
    .B1(\tm/n7627 ), .A1(hL_3), .D0(mode_1), .C0(mode_0), .B0(hL_2), 
    .F0(\tm/n7627 ), .F1(\tm/n7606 ));
  tm_SLICE_239 \tm/SLICE_239 ( .D1(hLRec0_1), .C1(hLRec0_2), .B1(hLRec0_3), 
    .A1(\tm/n7642 ), .D0(\tm/hHRec0_0 ), .B0(\tm/hHRec0_1 ), .F0(\tm/n7642 ), 
    .F1(\tm/n4_adj_396 ));
  controller_SLICE_240 \controller/SLICE_240 ( .D1(hLRec0_1), .C1(hLRec0_2), 
    .A1(sec), .D0(hLRec0_3), .C0(n9), .B0(\controller/n7 ), .A0(sec_ls), 
    .F0(n6832), .F1(\controller/n7 ));
  dt_SLICE_241 \dt/SLICE_241 ( .B1(\dt/n371 ), .A1(\dt/n377 ), .D0(\dt/n7631 ), 
    .C0(\dt/n7632 ), .B0(\dt/n7328 ), .A0(\dt/n372 ), .F0(\dt/n7329 ), 
    .F1(\dt/n7632 ));
  dt_SLICE_242 \dt/SLICE_242 ( .D1(n381), .C1(\dt/n2687 ), .B1(\dt/n382 ), 
    .C0(\dt/n379 ), .B0(\dt/n380 ), .A0(\dt/n378 ), .F0(\dt/n2687 ), 
    .F1(\dt/n7071 ));
  dt_SLICE_243 \dt/SLICE_243 ( .D1(\dt/n382 ), .C1(\dt/n383 ), .B1(\dt/n384 ), 
    .A1(\dt/n7652 ), .D0(\dt/rck_N_376 ), .C0(\dt/n370 ), .F0(\dt/n7652 ), 
    .F1(\dt/n6102 ));
  dt_SLICE_244 \dt/SLICE_244 ( .C1(\dt/n7653 ), .B1(\dt/n372 ), .A1(\dt/n374 ), 
    .D0(\dt/n376 ), .C0(\dt/n373 ), .A0(\dt/n375 ), .F0(\dt/n7653 ), 
    .F1(\dt/n7619 ));
  SLICE_245 SLICE_245( .D1(sL_1), .C1(sL_0), .B1(sL_2), .A1(sL_3), 
    .D0(\dt/n382 ), .C0(\dt/n7678 ), .B0(ctrlcode595_67), 
    .M0(\downkey/keystore_1 ), .CE(\downkey/keystore_2__N_139 ), .CLK(clk_c), 
    .F0(\dt/n2576 ), .Q0(\downkey/keystore_2 ), .F1(ctrlcode595_67));
  dt_SLICE_246 \dt/SLICE_246 ( .C1(\dt/shift_clock_cnt_14 ), 
    .A1(\dt/shift_clock_cnt_7 ), .D0(\dt/n41 ), .C0(\dt/n54 ), .B0(\dt/n60 ), 
    .A0(\dt/n42 ), .F0(\dt/n7159 ), .F1(\dt/n42 ));
  dt_SLICE_247 \dt/SLICE_247 ( .D1(\dt/shift_clock_ls ), .C1(rst_key_state), 
    .B1(\dt/n370 ), .A1(sck_c), .D0(\dt/codeP_0 ), .C0(\dt/clk_c_enable_57 ), 
    .B0(\dt/codeP_2 ), .A0(\dt/codeP_1 ), .F0(\dt/n2337 ), 
    .F1(\dt/clk_c_enable_57 ));
  dt_SLICE_248 \dt/SLICE_248 ( .B1(\dt/shift_clock_cnt_17 ), 
    .A1(\dt/shift_clock_cnt_24 ), .D0(\dt/shift_clock_cnt_1 ), .C0(\dt/n39 ), 
    .B0(\dt/shift_clock_cnt_4 ), .A0(\dt/n51 ), .F0(\dt/n58 ), .F1(\dt/n39 ));
  dt_SLICE_249 \dt/SLICE_249 ( .D1(\dt/shift_clock_cnt_15 ), 
    .A1(\dt/shift_clock_cnt_23 ), .D0(\dt/n56 ), .C0(\dt/n46 ), 
    .B0(\dt/shift_clock_cnt_20 ), .A0(\dt/shift_clock_cnt_10 ), .F0(\dt/n60 ), 
    .F1(\dt/n46 ));
  SLICE_250 SLICE_250( .D1(\rstkey/n7003 ), 
    .C1(\rstkey/keysamplerpulsecnt_15 ), .B1(\rstkey/keysamplerpulsecnt_6 ), 
    .A1(\rstkey/keysamplerpulsecnt_14 ), .D0(\rstkey/n45 ), 
    .C0(\rstkey/n7031 ), .B0(\rstkey/keysamplerpulsecnt_31 ), 
    .A0(\rstkey/n40 ), .M0(\dt/n377 ), .CE(\dt/clk_c_enable_28 ), 
    .LSR(\dt/n3124 ), .CLK(clk_c), .F0(\rstkey/n49 ), .Q0(\dt/n376 ), 
    .F1(\rstkey/n7031 ));
  SLICE_251 SLICE_251( .D1(\rstkey/keysamplerpulsecnt_21 ), 
    .B1(\rstkey/keysamplerpulsecnt_25 ), .D0(\rstkey/n48 ), .C0(\rstkey/n29 ), 
    .B0(\rstkey/n42 ), .A0(\rstkey/n30 ), .M0(\modekey/keystore_1 ), 
    .CE(\modekey/keystore_2__N_139 ), .CLK(clk_c), .F0(\rstkey/n50 ), 
    .Q0(\modekey/keystore_2 ), .F1(\rstkey/n30 ));
  SLICE_252 SLICE_252( .D1(\rstkey/keysamplerpulsecnt_30 ), 
    .A1(\rstkey/keysamplerpulsecnt_27 ), .D0(\rstkey/keysamplerpulsecnt_1 ), 
    .C0(\rstkey/n44 ), .B0(\rstkey/n34 ), .A0(\rstkey/keysamplerpulsecnt_4 ), 
    .M1(\dt/n378 ), .M0(\dt/n379 ), .CE(\dt/clk_c_enable_28 ), 
    .LSR(\dt/n3124 ), .CLK(clk_c), .F0(\rstkey/n48 ), .Q0(\dt/n378 ), 
    .F1(\rstkey/n34 ), .Q1(\dt/n377 ));
  secondGen_SLICE_253 \secondGen/SLICE_253 ( .D1(\secondGen/seccnt_14 ), 
    .C1(\secondGen/n40 ), .B1(\secondGen/n32 ), .A1(\secondGen/seccnt_5 ), 
    .D0(\secondGen/seccnt_13 ), .C0(\secondGen/seccnt_3 ), 
    .B0(\secondGen/seccnt_29 ), .A0(\secondGen/seccnt_31 ), 
    .F0(\secondGen/n40 ), .F1(\secondGen/n43 ));
  secondGen_SLICE_254 \secondGen/SLICE_254 ( .D1(\secondGen/n36 ), 
    .C1(\secondGen/n42 ), .B1(\secondGen/n24 ), .A1(\secondGen/n7033 ), 
    .D0(\secondGen/seccnt_16 ), .C0(\secondGen/n6961 ), 
    .B0(\secondGen/seccnt_8 ), .A0(\secondGen/n7019 ), .F0(\secondGen/n7033 ), 
    .F1(\secondGen/n44 ));
  secondGen_SLICE_255 \secondGen/SLICE_255 ( .B1(\secondGen/seccnt_24 ), 
    .A1(\secondGen/seccnt_12 ), .D0(\secondGen/n38 ), .C0(\secondGen/n28 ), 
    .B0(\secondGen/seccnt_9 ), .A0(\secondGen/seccnt_26 ), 
    .F0(\secondGen/n42 ), .F1(\secondGen/n28 ));
  SLICE_256 SLICE_256( .D1(\modekey/keysamplerpulsecnt_23 ), 
    .C1(\modekey/n42 ), .B1(\modekey/n32 ), 
    .A1(\modekey/keysamplerpulsecnt_21 ), .D0(\modekey/n45 ), 
    .C0(\modekey/n46 ), .B0(\modekey/n47 ), 
    .A0(\modekey/keysamplerpulsecnt_15 ), .M0(\dt/n370 ), 
    .CE(\dt/clk_c_enable_28 ), .CLK(clk_c), .F0(\modekey/n9 ), 
    .Q0(\dt/rck_N_376 ), .F1(\modekey/n46 ));
  SLICE_257 SLICE_257( .D1(\modekey/keysamplerpulsecnt_30 ), 
    .B1(\modekey/keysamplerpulsecnt_1 ), .A1(\modekey/keysamplerpulsecnt_11 ), 
    .D0(\modekey/keysamplerpulsecnt_3 ), .C0(\modekey/n43 ), 
    .B0(\modekey/keysamplerpulsecnt_2 ), .A0(\modekey/n38 ), .M1(\dt/n374 ), 
    .M0(\dt/n375 ), .CE(\dt/clk_c_enable_28 ), .LSR(\dt/n3124 ), .CLK(clk_c), 
    .F0(\modekey/n47 ), .Q0(\dt/n374 ), .F1(\modekey/n38 ), .Q1(\dt/n373 ));
  SLICE_258 SLICE_258( .B1(\modekey/keysamplerpulsecnt_29 ), 
    .A1(\modekey/keysamplerpulsecnt_28 ), .D0(\modekey/n40 ), 
    .C0(\modekey/keysamplerpulsecnt_31 ), .B0(\modekey/n28 ), 
    .A0(\modekey/keysamplerpulsecnt_27 ), .M1(\dt/n376 ), .M0(\dt/rck_N_376 ), 
    .CE(\dt/clk_c_enable_28 ), .LSR(\dt/n3124 ), .CLK(clk_c), 
    .F0(\modekey/n45 ), .Q0(\dt/n384 ), .F1(\modekey/n28 ), .Q1(\dt/n375 ));
  SLICE_259 SLICE_259( .D1(\downkey/n32 ), 
    .C1(\downkey/keysamplerpulsecnt_23 ), .B1(\downkey/n42 ), 
    .A1(\downkey/keysamplerpulsecnt_21 ), .D0(\downkey/n46 ), 
    .C0(\downkey/n47 ), .B0(\downkey/n45 ), 
    .A0(\downkey/keysamplerpulsecnt_15 ), .M1(\controller/moderec_1 ), 
    .M0(\controller/moderec_0 ), .CLK(clk_c), .F0(\downkey/n9 ), .Q0(mode_0), 
    .F1(\downkey/n46 ), .Q1(mode_1));
  downkey_SLICE_260 \downkey/SLICE_260 ( .D1(\downkey/keysamplerpulsecnt_1 ), 
    .C1(\downkey/keysamplerpulsecnt_11 ), .B1(\downkey/keysamplerpulsecnt_30 ), 
    .D0(\downkey/keysamplerpulsecnt_2 ), .C0(\downkey/n38 ), 
    .B0(\downkey/n43 ), .A0(\downkey/keysamplerpulsecnt_3 ), 
    .F0(\downkey/n47 ), .F1(\downkey/n38 ));
  SLICE_261 SLICE_261( .D1(\downkey/keysamplerpulsecnt_29 ), 
    .A1(\downkey/keysamplerpulsecnt_28 ), .D0(\downkey/n40 ), 
    .C0(\downkey/n28 ), .B0(\downkey/keysamplerpulsecnt_27 ), 
    .A0(\downkey/keysamplerpulsecnt_31 ), .M0(mode_key_state), .CLK(clk_c), 
    .F0(\downkey/n45 ), .Q0(\controller/modekey_ls ), .F1(\downkey/n28 ));
  upkey_SLICE_262 \upkey/SLICE_262 ( .D1(\upkey/keysamplerpulsecnt_23 ), 
    .C1(\upkey/n42 ), .B1(\upkey/keysamplerpulsecnt_21 ), .A1(\upkey/n32 ), 
    .D0(\upkey/n45 ), .C0(\upkey/keysamplerpulsecnt_15 ), .B0(\upkey/n47 ), 
    .A0(\upkey/n46 ), .F0(\upkey/n9 ), .F1(\upkey/n46 ));
  upkey_SLICE_263 \upkey/SLICE_263 ( .D1(\upkey/keysamplerpulsecnt_11 ), 
    .C1(\upkey/keysamplerpulsecnt_1 ), .B1(\upkey/keysamplerpulsecnt_30 ), 
    .D0(\upkey/keysamplerpulsecnt_2 ), .C0(\upkey/n38 ), 
    .B0(\upkey/keysamplerpulsecnt_3 ), .A0(\upkey/n43 ), .F0(\upkey/n47 ), 
    .F1(\upkey/n38 ));
  upkey_SLICE_264 \upkey/SLICE_264 ( .D1(\upkey/keysamplerpulsecnt_29 ), 
    .A1(\upkey/keysamplerpulsecnt_28 ), .D0(\upkey/keysamplerpulsecnt_27 ), 
    .C0(\upkey/n28 ), .B0(\upkey/keysamplerpulsecnt_31 ), .A0(\upkey/n40 ), 
    .F0(\upkey/n45 ), .F1(\upkey/n28 ));
  tm_SLICE_265 \tm/SLICE_265 ( .D1(\tm/n7623 ), .C1(mode_1), .B1(mode_0), 
    .A1(\tm/n257 ), .D0(\tm/n7623 ), .C0(mode_1), .B0(\tm/n257 ), .A0(mode_0), 
    .F0(\tm/clk_c_enable_41 ), .F1(\tm/clk_c_enable_40 ));
  tm_SLICE_266 \tm/SLICE_266 ( .D1(\tm/mLRec0_1 ), .C1(mLRec0_0), 
    .B1(\tm/mLRec0_2 ), .A1(\tm/mLRec0_3 ), .D0(\tm/mLRec0_1 ), .C0(mLRec0_0), 
    .B0(\tm/mLRec0_2 ), .A0(\tm/mLRec0_3 ), .F0(\tm/n9 ), .F1(\tm/n7661 ));
  SLICE_267 SLICE_267( .D1(sL_1), .C1(sL_0), .B1(sL_2), .A1(sL_3), .D0(sL_1), 
    .C0(sL_0), .B0(sL_2), .A0(sL_3), .F0(\tm/n6837 ), .F1(ctrlcode595_68));
  SLICE_268 SLICE_268( .D1(hL_1), .C1(hL_3), .B1(hL_0), .A1(hL_2), .D0(hL_1), 
    .C0(hL_3), .B0(hL_0), .A0(hL_2), .F0(\dt/n7447 ), .F1(ctrlcode595_5));
  te_SLICE_269 \te/SLICE_269 ( .D1(mL_3), .C1(mL_2), .B1(mL_1), .A1(mL_0), 
    .D0(mL_3), .C0(mL_2), .B0(mL_1), .A0(mL_0), .F0(ctrlcode595_37), 
    .F1(ctrlcode595_36));
  SLICE_270 SLICE_270( .D1(hL_1), .C1(hL_3), .B1(hL_0), .A1(hL_2), .D0(hL_1), 
    .C0(hL_3), .B0(hL_0), .A0(hL_2), .F0(\dt/n7080 ), .F1(ctrlcode595_4));
  tm_SLICE_271 \tm/SLICE_271 ( .D1(hL_2), .C1(mode_1), .B1(\tm/n7465 ), 
    .A1(mode_0), .D0(hL_2), .C0(mode_1), .B0(hL_3), .A0(mode_0), 
    .F0(\tm/n7614 ), .F1(\tm/clk_c_enable_38 ));
  tm_SLICE_272 \tm/SLICE_272 ( .D1(\tm/n257 ), .C1(\tm/n7636 ), 
    .B1(up_key_state), .A1(\tm/upkey_ls ), .D0(n8077), .C0(\tm/n7636 ), 
    .B0(up_key_state), .A0(\tm/upkey_ls ), .F0(\tm/n6969 ), .F1(\tm/n7613 ));
  SLICE_273 SLICE_273( .D1(\re/int_times ), .C1(PortA_c), .B1(\re/PA_ls ), 
    .D0(\re/int_times ), .C0(PortA_c), .B0(\re/PA_ls ), .M1(\dt/n384 ), 
    .M0(\dt/n371 ), .CE(\dt/clk_c_enable_28 ), .LSR(\dt/n3124 ), .CLK(clk_c), 
    .F0(\re/clk_c_enable_10 ), .Q0(\dt/n370 ), .F1(\re/clk_c_enable_14 ), 
    .Q1(\dt/n383 ));
  dt_SLICE_274 \dt/SLICE_274 ( .C1(\dt/n377 ), .B1(\dt/n371 ), .A1(\dt/n370 ), 
    .D0(\dt/n372 ), .C0(\dt/n377 ), .B0(\dt/n371 ), .A0(\dt/n370 ), 
    .F0(\dt/n7609 ), .F1(\dt/n7621 ));
  SLICE_275 SLICE_275( .D1(mH_0), .C1(mH_1), .B1(n381), .A1(mH_2), .C0(mH_1), 
    .A0(mH_0), .F0(\tm/n6963 ), .F1(\dt/n7493 ));
  tm_SLICE_276 \tm/SLICE_276 ( .D1(\tm/hLRec0_0 ), .C1(hLRec0_1), 
    .B1(\tm/hHRec0_0 ), .A1(\tm/hHRec0_1 ), .C0(hLRec0_1), .B0(\tm/hLRec0_0 ), 
    .A0(hLRec0_2), .F0(\tm/n22 ), .F1(n6889));
  SLICE_277 SLICE_277( .D1(hH_0), .C1(ctrlcode595_17), .B1(\dt/n378 ), 
    .A1(\dt/n379 ), .D0(hL_1), .C0(hL_0), .B0(hH_0), .A0(ctrlcode595_17), 
    .F0(\tm/n6_adj_378 ), .F1(\dt/n7328 ));
  tm_SLICE_278 \tm/SLICE_278 ( .D1(\tm/hLRec0_0 ), .A1(hLRec0_1), 
    .D0(\tm/hLRec0_0 ), .A0(hLRec0_1), .F0(n1336), .F1(\tm/n23_adj_390 ));
  tm_SLICE_279 \tm/SLICE_279 ( .D1(hH_0), .C1(mode_1), .B1(mode_0), 
    .A1(\tm/n5644 ), .D0(mode_1), .B0(\tm/n2341 ), .A0(mode_0), 
    .F0(\tm/clk_c_enable_39 ), .F1(\tm/n4_adj_385 ));
  tm_SLICE_280 \tm/SLICE_280 ( .D1(mode_1), .C1(sec), .B1(sec_ls), .A1(mode_0), 
    .D0(mode_1), .C0(\tm/n7624 ), .B0(\tm/n3008 ), .A0(mode_0), 
    .F0(\tm/n6_adj_383 ), .F1(\tm/n7620 ));
  tm_SLICE_281 \tm/SLICE_281 ( .D1(\tm/sLRec0_1 ), .C1(sLRec0_0), 
    .B1(\tm/sLRec0_2 ), .A1(\tm/sLRec0_3 ), .C0(sLRec0_0), .B0(\tm/sLRec0_1 ), 
    .F0(\tm/n111 ), .F1(\tm/n7673 ));
  tm_SLICE_282 \tm/SLICE_282 ( .D1(ctrlcode595_17), .C1(\tm/n257 ), .B1(hH_0), 
    .A1(\tm/n6950 ), .D0(ctrlcode595_17), .B0(hH_0), .F0(\tm/n7646 ), 
    .F1(\tm/n6226 ));
  SLICE_283 SLICE_283( .D1(sL_1), .C1(sL_0), .B1(sL_2), .A1(sL_3), .D0(sL_1), 
    .B0(sL_2), .F0(\tm/n7634 ), .F1(ctrlcode595_69));
  controller_SLICE_284 \controller/SLICE_284 ( .D1(\controller/moderec_0 ), 
    .A1(\controller/moderec_1 ), .D0(\controller/moderec_0 ), 
    .A0(\controller/moderec_1 ), .F0(modedisplay_c_0), .F1(modedisplay_c_1));
  controller_SLICE_285 \controller/SLICE_285 ( .D1(\controller/moderec_0 ), 
    .A1(\controller/moderec_1 ), .D0(\controller/moderec_0 ), 
    .A0(\controller/moderec_1 ), .F0(modedisplay_c_2), .F1(modedisplay_c_3));
  dt_SLICE_286 \dt/SLICE_286 ( .D1(\dt/n376 ), .B1(\dt/n374 ), .D0(\dt/n376 ), 
    .C0(\dt/n373 ), .B0(\dt/n374 ), .A0(\dt/n375 ), .F0(\dt/n7631 ), 
    .F1(\dt/n6940 ));
  SLICE_287 SLICE_287( .C1(sH_0), .A1(sH_2), .D0(n381), .C0(sH_0), .B0(sH_1), 
    .A0(sH_2), .F0(\dt/n7494 ), .F1(n4547));
  dt_SLICE_288 \dt/SLICE_288 ( .C1(sck_c), .A1(\dt/shift_clock_ls ), 
    .C0(sck_c), .A0(\dt/shift_clock_ls ), .F0(\dt/clk_c_enable_28 ), 
    .F1(\dt/din_N_372 ));
  SLICE_289 SLICE_289( .C1(mode_1), .B1(sHRec0_0), .D0(\tm/mHRec0_2 ), 
    .C0(mode_1), .F0(\tm/n1099 ), .F1(n1262));
  SLICE_290 SLICE_290( .C1(mode_1), .A1(sHRec0_2), .C0(mode_1), 
    .A0(\tm/mLRec0_3 ), .F0(\tm/n1905 ), .F1(n1260));
  tm_SLICE_291 \tm/SLICE_291 ( .D1(\tm/n2339 ), .C1(mode_1), .A1(mode_0), 
    .D0(hLRec0_2), .A0(mode_0), .F0(\tm/n4 ), .F1(\tm/clk_c_enable_42 ));
  tm_SLICE_292 \tm/SLICE_292 ( .D1(mode_1), .B1(sLRec0_0), .D0(mode_1), 
    .C0(\tm/n992 ), .B0(\tm/sHRec0_1 ), .A0(\tm/n7605 ), .F0(\tm/n5651 ), 
    .F1(\tm/n1852 ));
  tm_SLICE_293 \tm/SLICE_293 ( .D1(mLRec0_0), .C1(mode_1), .B1(\tm/n7622 ), 
    .A1(\tm/n7615 ), .D0(mode_0), .C0(\tm/n1753 ), .B0(\tm/n7622 ), 
    .A0(\tm/hLRec0_0 ), .F0(\tm/n1606 ), .F1(\tm/n10 ));
  tm_SLICE_294 \tm/SLICE_294 ( .D1(mode_1), .C1(\tm/n1039 ), 
    .B1(\tm/sLRec0_2 ), .A1(\tm/n7623 ), .C0(mode_1), .B0(\tm/sLRec0_3 ), 
    .F0(\tm/n1849 ), .F1(\tm/n5637 ));
  tm_SLICE_295 \tm/SLICE_295 ( .D1(sH_0), .C1(\tm/n7605 ), .B1(\tm/n7610 ), 
    .A1(\tm/n7644 ), .D0(sH_0), .C0(n7626), .B0(sL_3), .A0(\tm/n7623 ), 
    .F0(\tm/n12 ), .F1(\tm/n16_adj_382 ));
  SLICE_296 SLICE_296( .D1(mH_0), .A1(mH_2), .C0(mH_1), .A0(mH_2), 
    .F0(\tm/n7647 ), .F1(n4642));
  dt_SLICE_297 \dt/SLICE_297 ( .D1(\dt/rck_N_376 ), .C1(\dt/n373 ), 
    .B1(\dt/n3086 ), .D0(\dt/rck_N_376 ), .C0(\dt/n377 ), .B0(\dt/n370 ), 
    .F0(\dt/n6 ), .F1(\dt/n6_adj_377 ));
  dt_SLICE_298 \dt/SLICE_298 ( .D1(\dt/n379 ), .C1(n381), .B1(\dt/n378 ), 
    .A1(\dt/n380 ), .D0(n3082), .C0(n381), .B0(\dt/n7329 ), .A0(\dt/n6102 ), 
    .F0(\dt/n3083 ), .F1(\dt/n7052 ));
  upkey_SLICE_299 \upkey/SLICE_299 ( .D1(\upkey/keysamplerpulsecnt_4 ), 
    .C1(\upkey/keysamplerpulsecnt_9 ), .B1(\upkey/keysamplerpulsecnt_18 ), 
    .A1(\upkey/keysamplerpulsecnt_5 ), .B0(\upkey/keysamplerpulsecnt_25 ), 
    .A0(\upkey/keysamplerpulsecnt_26 ), .F0(\upkey/n32 ), .F1(\upkey/n42 ));
  downkey_SLICE_300 \downkey/SLICE_300 ( .D1(\downkey/keysamplerpulsecnt_5 ), 
    .C1(\downkey/keysamplerpulsecnt_18 ), .B1(\downkey/keysamplerpulsecnt_9 ), 
    .A1(\downkey/keysamplerpulsecnt_4 ), .C0(\downkey/keysamplerpulsecnt_25 ), 
    .B0(\downkey/keysamplerpulsecnt_26 ), .F0(\downkey/n32 ), 
    .F1(\downkey/n42 ));
  SLICE_301 SLICE_301( .D1(\modekey/keysamplerpulsecnt_4 ), 
    .C1(\modekey/keysamplerpulsecnt_18 ), .B1(\modekey/keysamplerpulsecnt_9 ), 
    .A1(\modekey/keysamplerpulsecnt_5 ), .C0(\modekey/keysamplerpulsecnt_26 ), 
    .B0(\modekey/keysamplerpulsecnt_25 ), .M1(\dt/n372 ), .M0(\dt/n373 ), 
    .CE(\dt/clk_c_enable_28 ), .LSR(\dt/n3124 ), .CLK(clk_c), 
    .F0(\modekey/n32 ), .Q0(\dt/n372 ), .F1(\modekey/n42 ), .Q1(\dt/n371 ));
  secondGen_SLICE_302 \secondGen/SLICE_302 ( .D1(\secondGen/seccnt_20 ), 
    .C1(\secondGen/seccnt_15 ), .B1(\secondGen/seccnt_10 ), 
    .A1(\secondGen/seccnt_22 ), .D0(\secondGen/seccnt_17 ), 
    .C0(\secondGen/seccnt_19 ), .F0(\secondGen/n6961 ), .F1(\secondGen/n7019 ));
  secondGen_SLICE_303 \secondGen/SLICE_303 ( .D1(\secondGen/seccnt_25 ), 
    .C1(\secondGen/seccnt_18 ), .B1(\secondGen/seccnt_21 ), 
    .A1(\secondGen/seccnt_2 ), .D0(\secondGen/seccnt_28 ), 
    .C0(\secondGen/seccnt_0 ), .F0(\secondGen/n24 ), .F1(\secondGen/n36 ));
  SLICE_304 SLICE_304( .D1(\rstkey/keysamplerpulsecnt_8 ), 
    .B1(\rstkey/keysamplerpulsecnt_11 ), .D0(\rstkey/keysamplerpulsecnt_17 ), 
    .C0(\rstkey/keysamplerpulsecnt_26 ), .B0(\rstkey/keysamplerpulsecnt_24 ), 
    .A0(\rstkey/keysamplerpulsecnt_9 ), .M1(\dt/n380 ), .M0(n381), 
    .CE(\dt/clk_c_enable_28 ), .LSR(\dt/n3124 ), .CLK(clk_c), 
    .F0(\rstkey/n42 ), .Q0(\dt/n380 ), .F1(\rstkey/n29 ), .Q1(\dt/n379 ));
  SLICE_305 SLICE_305( .D1(\rstkey/keysamplerpulsecnt_3 ), 
    .C1(\rstkey/keysamplerpulsecnt_13 ), .B1(\rstkey/keysamplerpulsecnt_23 ), 
    .A1(\rstkey/keysamplerpulsecnt_29 ), .D0(\rstkey/keysamplerpulsecnt_28 ), 
    .C0(\rstkey/keysamplerpulsecnt_2 ), .B0(\rstkey/keysamplerpulsecnt_0 ), 
    .A0(\rstkey/keysamplerpulsecnt_18 ), .M1(\dt/n382 ), .M0(\dt/n383 ), 
    .CE(\dt/clk_c_enable_28 ), .LSR(\dt/n3124 ), .CLK(clk_c), 
    .F0(\rstkey/n40 ), .Q0(\dt/n382 ), .F1(\rstkey/n45 ), .Q1(n381));
  dt_SLICE_306 \dt/SLICE_306 ( .B1(\dt/shift_clock_cnt_30 ), 
    .A1(\dt/shift_clock_cnt_27 ), .D0(\dt/shift_clock_cnt_22 ), 
    .C0(\dt/shift_clock_cnt_5 ), .B0(\dt/shift_clock_cnt_6 ), 
    .A0(\dt/shift_clock_cnt_19 ), .F0(\dt/n54 ), .F1(\dt/n41 ));
  dt_SLICE_307 \dt/SLICE_307 ( .D1(\dt/shift_clock_cnt_18 ), 
    .C1(\dt/shift_clock_cnt_0 ), .B1(\dt/shift_clock_cnt_2 ), 
    .A1(\dt/shift_clock_cnt_28 ), .D0(\dt/shift_clock_cnt_8 ), 
    .C0(\dt/shift_clock_cnt_11 ), .B0(\dt/shift_clock_cnt_21 ), 
    .A0(\dt/shift_clock_cnt_16 ), .F0(\dt/n50 ), .F1(\dt/n49 ));
  dt_SLICE_308 \dt/SLICE_308 ( .C1(\dt/n372 ), .B1(\dt/n2672 ), 
    .D0(\dt/rck_N_376 ), .A0(rst_key_state), .F0(rck_c), .F1(\dt/n2673 ));
  down_key down_key_I( .PADDI(down_key_c), .down_key(down_key));
  up_key up_key_I( .PADDI(up_key_c), .up_key(up_key));
  mode_key mode_key_I( .PADDI(mode_key_c), .mode_key(mode_key));
  rst_key rst_key_I( .PADDI(rst_key_c), .rst_key(rst_key));
  clk clk_I( .PADDI(clk_c), .clk(clk));
  rck rck_I( .PADDO(rck_c), .rck(rck));
  sck sck_I( .PADDO(sck_c), .sck(sck));
  din din_I( .PADDO(din_c), .din(din));
  secDisp secDisp_I( .PADDO(secDisp_c), .secDisp(secDisp));
  modedisplay_0_ \modedisplay[0]_I ( .PADDO(modedisplay_c_0), 
    .modedisplay0(modedisplay[0]));
  modedisplay_1_ \modedisplay[1]_I ( .PADDO(modedisplay_c_1), 
    .modedisplay1(modedisplay[1]));
  modedisplay_2_ \modedisplay[2]_I ( .PADDO(modedisplay_c_2), 
    .modedisplay2(modedisplay[2]));
  modedisplay_3_ \modedisplay[3]_I ( .PADDO(modedisplay_c_3), 
    .modedisplay3(modedisplay[3]));
  PortA PortA_I( .PADDI(PortA_c), .PortA(PortA));
  PortB PortB_I( .PADDI(PortB_c), .PortB(PortB));
  GSR_INST GSR_INST( .GSRNET(~rst_key_state));
  VHI VHI_INST( .Z(VCCI));
  PUR PUR_INST( .PUR(VCCI));
endmodule

module dt_SLICE_0 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \dt/shift_clock_cnt_1589__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_clock_cnt_1589__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \dt/shift_clock_cnt_1589_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module dt_SLICE_1 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \dt/shift_clock_cnt_1589__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_clock_cnt_1589__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \dt/shift_clock_cnt_1589_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_SLICE_2 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \dt/shift_clock_cnt_1589__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_clock_cnt_1589__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \dt/shift_clock_cnt_1589_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_SLICE_3 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \dt/shift_clock_cnt_1589__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_clock_cnt_1589__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \dt/shift_clock_cnt_1589_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_SLICE_4 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre \dt/shift_clock_cnt_1589__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \dt/shift_clock_cnt_1589_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module dt_SLICE_5 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre \dt/shift_clock_cnt_1589__i31 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \dt/shift_clock_cnt_1589_add_4_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module dt_SLICE_6 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \dt/shift_clock_cnt_1589__i30 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_clock_cnt_1589__i29 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \dt/shift_clock_cnt_1589_add_4_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_SLICE_7 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \dt/shift_clock_cnt_1589__i28 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_clock_cnt_1589__i27 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \dt/shift_clock_cnt_1589_add_4_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_SLICE_8 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \dt/shift_clock_cnt_1589__i26 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_clock_cnt_1589__i25 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \dt/shift_clock_cnt_1589_add_4_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_SLICE_9 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \dt/shift_clock_cnt_1589__i24 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_clock_cnt_1589__i23 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \dt/shift_clock_cnt_1589_add_4_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_SLICE_10 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \dt/shift_clock_cnt_1589__i22 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_clock_cnt_1589__i21 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \dt/shift_clock_cnt_1589_add_4_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_SLICE_11 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \dt/shift_clock_cnt_1589__i20 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_clock_cnt_1589__i19 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \dt/shift_clock_cnt_1589_add_4_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_SLICE_12 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \dt/shift_clock_cnt_1589__i18 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_clock_cnt_1589__i17 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \dt/shift_clock_cnt_1589_add_4_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_SLICE_13 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \dt/shift_clock_cnt_1589__i16 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_clock_cnt_1589__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \dt/shift_clock_cnt_1589_add_4_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_SLICE_14 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \dt/shift_clock_cnt_1589__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_clock_cnt_1589__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \dt/shift_clock_cnt_1589_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_SLICE_15 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \dt/shift_clock_cnt_1589__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_clock_cnt_1589__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \dt/shift_clock_cnt_1589_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module dt_SLICE_16 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \dt/shift_clock_cnt_1589__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_clock_cnt_1589__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \dt/shift_clock_cnt_1589_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module rstkey_SLICE_17 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \rstkey/keysamplerpulsecnt_1579_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0003 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module rstkey_SLICE_18 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i31 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \rstkey/keysamplerpulsecnt_1579_add_4_33 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module rstkey_SLICE_19 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i30 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i29 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \rstkey/keysamplerpulsecnt_1579_add_4_31 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module rstkey_SLICE_20 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i28 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i27 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \rstkey/keysamplerpulsecnt_1579_add_4_29 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module rstkey_SLICE_21 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i26 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i25 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \rstkey/keysamplerpulsecnt_1579_add_4_27 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module rstkey_SLICE_22 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i24 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i23 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \rstkey/keysamplerpulsecnt_1579_add_4_25 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module rstkey_SLICE_23 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i22 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i21 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \rstkey/keysamplerpulsecnt_1579_add_4_23 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module rstkey_SLICE_24 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i20 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i19 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \rstkey/keysamplerpulsecnt_1579_add_4_21 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module rstkey_SLICE_25 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i18 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i17 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \rstkey/keysamplerpulsecnt_1579_add_4_19 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module rstkey_SLICE_26 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i16 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i15 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \rstkey/keysamplerpulsecnt_1579_add_4_17 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module rstkey_SLICE_27 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i14 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i13 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \rstkey/keysamplerpulsecnt_1579_add_4_15 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module rstkey_SLICE_28 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i12 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i11 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \rstkey/keysamplerpulsecnt_1579_add_4_13 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module rstkey_SLICE_29 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i10 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \rstkey/keysamplerpulsecnt_1579_add_4_11 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module rstkey_SLICE_30 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \rstkey/keysamplerpulsecnt_1579_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module rstkey_SLICE_31 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \rstkey/keysamplerpulsecnt_1579_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module rstkey_SLICE_32 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \rstkey/keysamplerpulsecnt_1579_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module rstkey_SLICE_33 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \rstkey/keysamplerpulsecnt_1579__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \rstkey/keysamplerpulsecnt_1579_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_34 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \secondGen/seccnt_1578__i10 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \secondGen/seccnt_1578__i9 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \secondGen/seccnt_1578_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_35 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre \secondGen/seccnt_1578__i31 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \secondGen/seccnt_1578_add_4_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_36 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \secondGen/seccnt_1578__i8 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \secondGen/seccnt_1578__i7 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \secondGen/seccnt_1578_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_37 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \secondGen/seccnt_1578__i30 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \secondGen/seccnt_1578__i29 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \secondGen/seccnt_1578_add_4_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_38 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \secondGen/seccnt_1578__i28 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \secondGen/seccnt_1578__i27 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \secondGen/seccnt_1578_add_4_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_39 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \secondGen/seccnt_1578__i26 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \secondGen/seccnt_1578__i25 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \secondGen/seccnt_1578_add_4_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_40 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \secondGen/seccnt_1578__i6 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \secondGen/seccnt_1578__i5 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \secondGen/seccnt_1578_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_41 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \secondGen/seccnt_1578__i24 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \secondGen/seccnt_1578__i23 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \secondGen/seccnt_1578_add_4_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_42 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \secondGen/seccnt_1578__i4 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \secondGen/seccnt_1578__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \secondGen/seccnt_1578_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_43 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \secondGen/seccnt_1578__i22 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \secondGen/seccnt_1578__i21 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \secondGen/seccnt_1578_add_4_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_44 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \secondGen/seccnt_1578__i20 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \secondGen/seccnt_1578__i19 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \secondGen/seccnt_1578_add_4_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_45 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \secondGen/seccnt_1578__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \secondGen/seccnt_1578__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \secondGen/seccnt_1578_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_46 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \secondGen/seccnt_1578__i18 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \secondGen/seccnt_1578__i17 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \secondGen/seccnt_1578_add_4_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_47 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \secondGen/seccnt_1578__i16 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \secondGen/seccnt_1578__i15 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \secondGen/seccnt_1578_add_4_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_48 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre \secondGen/seccnt_1578__i0 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \secondGen/seccnt_1578_add_4_1 ( .A0(GNDI), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_49 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \secondGen/seccnt_1578__i14 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \secondGen/seccnt_1578__i13 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \secondGen/seccnt_1578_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_50 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, 
    Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \secondGen/seccnt_1578__i12 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \secondGen/seccnt_1578__i11 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \secondGen/seccnt_1578_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module modekey_SLICE_51 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i31 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \modekey/keysamplerpulsecnt_1580_add_4_33 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module modekey_SLICE_52 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i30 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i29 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \modekey/keysamplerpulsecnt_1580_add_4_31 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module modekey_SLICE_53 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i28 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i27 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \modekey/keysamplerpulsecnt_1580_add_4_29 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module modekey_SLICE_54 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i26 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i25 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \modekey/keysamplerpulsecnt_1580_add_4_27 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module modekey_SLICE_55 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i24 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i23 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \modekey/keysamplerpulsecnt_1580_add_4_25 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module modekey_SLICE_56 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i22 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i21 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \modekey/keysamplerpulsecnt_1580_add_4_23 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module modekey_SLICE_57 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i20 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i19 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \modekey/keysamplerpulsecnt_1580_add_4_21 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module modekey_SLICE_58 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i18 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i17 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \modekey/keysamplerpulsecnt_1580_add_4_19 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module modekey_SLICE_59 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i16 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i15 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \modekey/keysamplerpulsecnt_1580_add_4_17 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module modekey_SLICE_60 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i14 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i13 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \modekey/keysamplerpulsecnt_1580_add_4_15 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module modekey_SLICE_61 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i12 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i11 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \modekey/keysamplerpulsecnt_1580_add_4_13 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module modekey_SLICE_62 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i10 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i9 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \modekey/keysamplerpulsecnt_1580_add_4_11 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module modekey_SLICE_63 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i8 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i7 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \modekey/keysamplerpulsecnt_1580_add_4_9 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module modekey_SLICE_64 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i6 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i5 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \modekey/keysamplerpulsecnt_1580_add_4_7 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module modekey_SLICE_65 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i4 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i3 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \modekey/keysamplerpulsecnt_1580_add_4_5 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module modekey_SLICE_66 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i2 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i1 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \modekey/keysamplerpulsecnt_1580_add_4_3 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module modekey_SLICE_67 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0003 \modekey/keysamplerpulsecnt_1580__i0 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \modekey/keysamplerpulsecnt_1580_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module downkey_SLICE_68 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i4 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i3 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \downkey/keysamplerpulsecnt_1582_add_4_5 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module downkey_SLICE_69 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i2 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i1 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \downkey/keysamplerpulsecnt_1582_add_4_3 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module downkey_SLICE_70 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i0 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \downkey/keysamplerpulsecnt_1582_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module downkey_SLICE_71 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i31 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \downkey/keysamplerpulsecnt_1582_add_4_33 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module downkey_SLICE_72 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i30 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i29 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \downkey/keysamplerpulsecnt_1582_add_4_31 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module downkey_SLICE_73 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i28 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i27 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \downkey/keysamplerpulsecnt_1582_add_4_29 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module downkey_SLICE_74 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i26 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i25 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \downkey/keysamplerpulsecnt_1582_add_4_27 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module downkey_SLICE_75 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i24 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i23 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \downkey/keysamplerpulsecnt_1582_add_4_25 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module downkey_SLICE_76 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i22 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i21 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \downkey/keysamplerpulsecnt_1582_add_4_23 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module downkey_SLICE_77 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i20 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i19 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \downkey/keysamplerpulsecnt_1582_add_4_21 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module downkey_SLICE_78 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i18 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i17 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \downkey/keysamplerpulsecnt_1582_add_4_19 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module downkey_SLICE_79 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i16 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i15 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \downkey/keysamplerpulsecnt_1582_add_4_17 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module downkey_SLICE_80 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i14 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i13 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \downkey/keysamplerpulsecnt_1582_add_4_15 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module downkey_SLICE_81 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i12 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i11 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \downkey/keysamplerpulsecnt_1582_add_4_13 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module downkey_SLICE_82 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i10 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i9 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \downkey/keysamplerpulsecnt_1582_add_4_11 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module downkey_SLICE_83 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i8 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i7 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \downkey/keysamplerpulsecnt_1582_add_4_9 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module downkey_SLICE_84 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i6 ( .D0(VCCI), 
    .D1(DI1_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \downkey/keysamplerpulsecnt_1582__i5 ( .D0(VCCI), 
    .D1(DI0_dly), .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \downkey/keysamplerpulsecnt_1582_add_4_7 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_85 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i31 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20002 \upkey/keysamplerpulsecnt_1581_add_4_33 ( .A0(A0), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), 
    .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_86 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i30 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i29 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \upkey/keysamplerpulsecnt_1581_add_4_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_87 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i28 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i27 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \upkey/keysamplerpulsecnt_1581_add_4_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_88 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i26 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i25 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \upkey/keysamplerpulsecnt_1581_add_4_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_89 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i24 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i23 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \upkey/keysamplerpulsecnt_1581_add_4_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_90 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i22 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i21 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \upkey/keysamplerpulsecnt_1581_add_4_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_91 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i20 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i19 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \upkey/keysamplerpulsecnt_1581_add_4_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_92 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i18 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i17 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \upkey/keysamplerpulsecnt_1581_add_4_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_93 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i16 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \upkey/keysamplerpulsecnt_1581_add_4_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_94 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \upkey/keysamplerpulsecnt_1581_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_95 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \upkey/keysamplerpulsecnt_1581_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_96 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \upkey/keysamplerpulsecnt_1581_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_97 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \upkey/keysamplerpulsecnt_1581_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_98 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \upkey/keysamplerpulsecnt_1581_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_99 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \upkey/keysamplerpulsecnt_1581_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_100 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, 
    F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu2 \upkey/keysamplerpulsecnt_1581_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_101 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0003 \upkey/keysamplerpulsecnt_1581__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20001 \upkey/keysamplerpulsecnt_1581_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module re_SLICE_102 ( input D1, A1, D0, A0, DI1, DI0, CE, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut4 \re/i19_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 \re/i15_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0003 \re/act_cache__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \re/act_cache__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40004 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h55AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module controller_SLICE_104 ( input B1, A1, A0, DI1, DI0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40005 \controller/i5002_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40006 \controller/i1808_1_lut_rep_135 ( .A(A0), .B(GNDI), .C(GNDI), 
    .D(GNDI), .Z(F0));
  vmuxregsre0007 \controller/moderec_1583__i1 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0007 \controller/moderec_1583__i0 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0007 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module tm_SLICE_105 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40008 \tm/i1_3_lut_rep_99_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40009 \tm/i3967_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/hHRec1_1585__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40008 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40009 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF9C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_SLICE_106 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40010 \dt/i1_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40011 \dt/codeP_2__I_0_i7_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \dt/din_58 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40010 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F0E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40011 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h30AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module downkey_SLICE_107 ( input D0, B0, A0, DI0, M1, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40012 \downkey/i2_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \downkey/keysamplerpulse_ls_32 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \downkey/keystate_34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40012 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0013 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module downkey_SLICE_108 ( input D1, C1, B1, A1, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40014 \downkey/i6361_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40005 \downkey/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \downkey/keysamplerpulse_31 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40014 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module downkey_SLICE_110 ( input B0, DI0, M1, CE, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  lut40015 \downkey/btnstate_I_0_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \downkey/keystore_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \downkey/keystore_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3333) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_SLICE_112 ( input D1, C1, A1, D0, A0, DI0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40016 \dt/i2409_2_lut_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40004 \dt/i1854_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0003 \dt/codeP__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_SLICE_113 ( input D1, B1, A1, D0, A0, DI1, DI0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40017 \dt/i15_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40018 \dt/i1380_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0003 \dt/codeP__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0003 \dt/codeP__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h66CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h55AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_123 ( input C1, A1, D0, C0, B0, A0, DI0, CE, LSR, CLK, output 
    F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40019 \tm/i4042_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 \tm/i5226_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \tm/hHRec1_1585__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5033) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_124 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40021 \tm/mux_747_i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40022 \tm/mux_747_i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/hLRec0_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0007 \tm/hLRec0_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8B88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD1C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_125 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40023 \tm/i32_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40024 i30_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/hLRec0_i0_i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h68CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40024 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF870) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_126 ( input D1, C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40025 \tm/i2_4_lut_adj_23 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40026 \tm/i5228_3_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0007 \tm/hLRec1_1588__i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0007 \tm/hLRec1_1588__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE1D2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40026 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD1D1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_127 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40027 \tm/i2_4_lut_adj_19 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40028 \tm/i2_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/hLRec1_1588__i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0007 \tm/hLRec1_1588__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h693C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9C63) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_128 ( input D1, C1, D0, C0, B0, A0, DI0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40029 \tm/i3836_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40030 mux_1182_i1_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/mHRec0_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40030 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8B0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_129 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40031 \tm/i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 \tm/i5208_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/mHRec1_1586__i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0007 \tm/mHRec1_1586__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hED12) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h05C5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_130 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40033 \tm/i4987_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40034 \tm/i2_4_lut_adj_43 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/mHRec1_1586__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1D11) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC639) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_131 ( input D1, B1, D0, C0, B0, A0, DI0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40035 \tm/i1708_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40036 mux_652_i1_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/mLRec0_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h33CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB313) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_132 ( input D1, C1, B1, A1, D0, C0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40037 \tm/i2_3_lut_4_lut_adj_41 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40038 \tm/i23_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0007 \tm/mLRec1_1587__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0007 \tm/mLRec1_1587__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h639C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40038 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F55) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_133 ( input D1, C1, D0, C0, B0, A0, DI0, M0, CE, CLK, output 
    OFX0, Q0 );
  wire   GNDI, \tm/SLICE_133/tm/SLICE_133_K1_H1 , 
         \tm/SLICE_133/tm/i6503/GATE_H0 , VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40039 \tm/SLICE_133_K1 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(\tm/SLICE_133/tm/SLICE_133_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 \tm/i6503/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\tm/SLICE_133/tm/i6503/GATE_H0 ));
  vmuxregsre0007 \tm/mLRec1_1587__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \tm/SLICE_133_K0K1MUX ( .D0(\tm/SLICE_133/tm/i6503/GATE_H0 ), 
    .D1(\tm/SLICE_133/tm/SLICE_133_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h659A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module tm_SLICE_134 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40041 \tm/i4978_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 \tm/i2_4_lut_adj_17 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/mLRec1_1587__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3505) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h39C6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module modekey_SLICE_136 ( input D0, C0, A0, DI0, M1, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40043 \modekey/i2_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \modekey/keysamplerpulse_ls_32 ( .D0(M1_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \modekey/keystate_34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_137 ( input D1, C1, B1, A1, C0, A0, DI0, M1, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut40044 \modekey/i6355_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 \modekey/i1_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \dt/shift_clock_ls_56 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \modekey/keysamplerpulse_31 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5A5A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module modekey_SLICE_139 ( input B0, DI0, M1, CE, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  lut40015 \modekey/btnstate_I_0_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \modekey/keystore_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \modekey/keystore_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_142 ( input D1, B1, A1, D0, C0, B0, A0, M0, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40046 \te/i2_2_lut_rep_125_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \upkey/i15_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \re/PA_ls_31 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_143 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40048 \upkey/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 \upkey/i6215_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \re/act_cache_tmp_32 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module re_SLICE_144 ( input D1, B1, A1, D0, B0, A0, DI0, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40050 \re/i6342_2_lut_2_lut_4_lut_3_lut ( .A(A1), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \re/i2399_3_lut_4_lut_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  vmuxregsre0013 \re/int_times_33 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE77) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBB22) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_145 ( input D1, A1, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \upkey/keysamplerpulse_I_0_37_2_lut ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 \rstkey/i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre0013 \rstkey/keystate_34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module rstkey_SLICE_146 ( input D1, C1, B1, A1, C0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40053 \rstkey/i6352_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 \rstkey/i1_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \rstkey/keysamplerpulse_31 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_147 ( input D1, B1, D0, C0, B0, A0, M0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40054 \downkey/keysamplerpulse_I_0_37_2_lut ( .A(GNDI), .B(B1), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40055 \downkey/i15_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \rstkey/keysamplerpulse_ls_32 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3300) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_148 ( input D1, C1, B1, A1, B0, DI0, M1, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  lut40056 \downkey/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40015 \rstkey/btnstate_I_0_1_lut ( .A(GNDI), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \rstkey/keystore_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \rstkey/keystore_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_149 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40057 \downkey/i6213_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40058 \modekey/i15_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \rstkey/keystore_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_150 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40059 i3731_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40060 i3739_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/sHRec0_i0_i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0007 \tm/sHRec0_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEC4C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_151 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40061 \tm/i2_4_lut_adj_27 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 \tm/i5207_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/sHRec1_1590__i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0007 \tm/sHRec1_1590__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC9C6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_152 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40033 \tm/i4962_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40062 \tm/i2_4_lut_adj_24 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/sHRec1_1590__i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC369) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_153 ( input C1, B1, D0, C0, B0, A0, DI0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40063 \tm/equal_529_i3_2_lut_rep_151 ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 mux_1135_i1_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/sLRec0_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h80BF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_154 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40065 \tm/i2_3_lut_4_lut_adj_28 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40066 \tm/i5225_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/sLRec1_1584__i2 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0007 \tm/sLRec1_1584__i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3C96) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C55) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_155 ( input D1, A1, D0, C0, B0, A0, DI0, M0, CE, CLK, output 
    OFX0, Q0 );
  wire   GNDI, \tm/SLICE_155/tm/SLICE_155_K1_H1 , 
         \tm/SLICE_155/tm/i6462/GATE_H0 , VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40067 \tm/SLICE_155_K1 ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(\tm/SLICE_155/tm/SLICE_155_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40068 \tm/i6462/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\tm/SLICE_155/tm/i6462/GATE_H0 ));
  vmuxregsre0007 \tm/sLRec1_1584__i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \tm/SLICE_155_K0K1MUX ( .D0(\tm/SLICE_155/tm/i6462/GATE_H0 ), 
    .D1(\tm/SLICE_155/tm/SLICE_155_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5500) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h39C6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_156 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40069 \tm/i4948_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 \tm/i2_4_lut_adj_32 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/sLRec1_1584__i3 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5303) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_SLICE_157 ( input D1, C1, B1, A1, C0, A0, DI0, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40070 \dt/i6393_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 \dt/i1_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0071 \dt/shift_clock_55 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0071 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module secondGen_SLICE_158 ( input D1, C1, B1, A1, B0, A0, DI0, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40072 \secondGen/i6345_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40005 \secondGen/i1_2_lut_adj_7 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0007 \secondGen/sec_16 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_159 ( input D1, C1, B1, A1, C0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40073 \modekey/i18_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40074 sec_I_0_1_lut( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 secDisp_9( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_160 ( input D1, C1, D0, C0, B0, A0, M0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40075 \modekey/keysamplerpulse_I_0_37_2_lut ( .A(GNDI), .B(GNDI), .C(C1), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40076 \modekey/i6217_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \tm/sec_ls_188 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_161 ( input D1, C1, B1, A1, D0, A0, M0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40077 \secondGen/i15_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40078 \secondGen/i9_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \tm/downkey_ls_187 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_162 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40079 \tm/mux_800_i2_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40080 \tm/mux_800_i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/hHRec0_i0_i1 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0007 \tm/hHRec0_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE2C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA3A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_163 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40081 i1954_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40082 \tm/mux_747_i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/hLRec0_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2320) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0D1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_164 ( input C1, B1, A1, D0, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   GNDI, \tm/SLICE_164/tm/SLICE_164_K1_H1 , 
         \tm/SLICE_164/tm/i6531/GATE_H0 , VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40083 \tm/SLICE_164_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\tm/SLICE_164/tm/SLICE_164_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40084 \tm/i6531/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\tm/SLICE_164/tm/i6531/GATE_H0 ));
  vmuxregsre0007 \tm/mHRec0_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \tm/SLICE_164_K0K1MUX ( .D0(\tm/SLICE_164/tm/i6531/GATE_H0 ), 
    .D1(\tm/SLICE_164/tm/SLICE_164_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD1D1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC0E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_165 ( input D1, C1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40085 \tm/i23_3_lut_adj_38 ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40086 i22_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/mHRec0_i0_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40085 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0FA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40086 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB8F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_166 ( input D1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40087 \tm/i6529/GATE ( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40088 \tm/mux_652_i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/mLRec0_i0_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0007 \tm/mLRec0_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40087 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDD88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40088 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8D88) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_167 ( input D1, C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   \tm/SLICE_167/tm/SLICE_167_K1_H1 , GNDI, 
         \tm/SLICE_167/tm/i6527/GATE_H0 , VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40089 \tm/SLICE_167_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\tm/SLICE_167/tm/SLICE_167_K1_H1 ));
  lut40090 \tm/i6527/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\tm/SLICE_167/tm/i6527/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0007 \tm/mLRec0_i0_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \tm/SLICE_167_K0K1MUX ( .D0(\tm/SLICE_167/tm/i6527/GATE_H0 ), 
    .D1(\tm/SLICE_167/tm/SLICE_167_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40089 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8BB8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40090 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB8B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_168 ( input D1, C1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40091 \tm/i3735_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40092 i3736_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/sHRec0_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40091 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A5A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40092 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hACCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_169 ( input D1, C1, B1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40093 \tm/i6537/GATE ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40094 \tm/mux_1135_i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0007 \tm/sLRec0_i0_i3 ( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0007 \tm/sLRec0_i0_i1 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40093 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40094 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA3A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_170 ( input D1, C1, B1, A1, D0, C0, A0, DI0, M0, CE, CLK, 
    output OFX0, Q0 );
  wire   \tm/SLICE_170/tm/SLICE_170_K1_H1 , GNDI, 
         \tm/SLICE_170/tm/i6533/GATE_H0 , VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40095 \tm/SLICE_170_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\tm/SLICE_170/tm/SLICE_170_K1_H1 ));
  lut40096 \tm/i6533/GATE ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(\tm/SLICE_170/tm/i6533/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0007 \tm/sLRec0_i0_i2 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 \tm/SLICE_170_K0K1MUX ( .D0(\tm/SLICE_170/tm/i6533/GATE_H0 ), 
    .D1(\tm/SLICE_170/tm/SLICE_170_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40095 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB1E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40096 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_171 ( input B1, A1, D0, C0, B0, A0, M0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40097 \rstkey/i6191_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40098 \rstkey/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \tm/upkey_ls_186 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40097 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40098 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_172 ( input D1, A1, D0, C0, B0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 \rstkey/keysamplerpulse_I_0_37_2_lut ( .A(A1), .B(GNDI), .C(GNDI), 
    .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40099 \upkey/i2_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \upkey/keystate_34 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40099 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module upkey_SLICE_173 ( input D1, C1, B1, A1, B0, A0, DI0, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40100 \upkey/i6358_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40005 \upkey/i1_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \upkey/keysamplerpulse_31 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40100 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_174 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CLK, output F0, 
    Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  lut40055 \dt/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40055 \dt/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \upkey/keysamplerpulse_ls_32 ( .D0(M0_dly), .D1(VCCI), 
    .SD(GNDI), .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_175 ( input C1, B1, C0, DI0, M1, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly, CE_dly;

  lut40101 \controller/moderec_1__I_1_2_lut ( .A(GNDI), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40074 \upkey/btnstate_I_0_1_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  vmuxregsre0013 \upkey/keystore_i0_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0013 \upkey/keystore_i0_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40101 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_176 ( input D1, C1, D0, B0, A0, M0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40102 \tm/i1642_2_lut ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40103 \tm/i3730_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  vmuxregsre0013 \upkey/keystore_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40102 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0FF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40103 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5588) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_i23_SLICE_177 ( input D1, C1, B1, A1, D0, C0, A0, M0, output OFX0 );
  wire   \tm/i23/SLICE_177/tm/i23/SLICE_177_K1_H1 , GNDI, 
         \tm/i23/SLICE_177/tm/i23/GATE_H0 ;

  lut40104 \tm/i23/SLICE_177_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\tm/i23/SLICE_177/tm/i23/SLICE_177_K1_H1 ));
  lut40105 \tm/i23/GATE ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(\tm/i23/SLICE_177/tm/i23/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \tm/i23/SLICE_177_K0K1MUX ( .D0(\tm/i23/SLICE_177/tm/i23/GATE_H0 ), 
    .D1(\tm/i23/SLICE_177/tm/i23/SLICE_177_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40104 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40105 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_i6525_SLICE_178 ( input D1, C1, B1, A1, D0, C0, B0, M0, output OFX0 );
  wire   \tm/i6525/SLICE_178/tm/i6525/SLICE_178_K1_H1 , GNDI, 
         \tm/i6525/SLICE_178/tm/i6525/GATE_H0 ;

  lut40106 \tm/i6525/SLICE_178_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\tm/i6525/SLICE_178/tm/i6525/SLICE_178_K1_H1 ));
  lut40107 \tm/i6525/GATE ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(\tm/i6525/SLICE_178/tm/i6525/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \tm/i6525/SLICE_178_K0K1MUX ( 
    .D0(\tm/i6525/SLICE_178/tm/i6525/GATE_H0 ), 
    .D1(\tm/i6525/SLICE_178/tm/i6525/SLICE_178_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40106 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40107 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0F3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_i6446_SLICE_179 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \tm/i6446/SLICE_179/tm/i6446/SLICE_179_K1_H1 , 
         \tm/i6446/SLICE_179/tm/i6446/GATE_H0 ;

  lut40108 \tm/i6446/SLICE_179_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\tm/i6446/SLICE_179/tm/i6446/SLICE_179_K1_H1 ));
  lut40109 \tm/i6446/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\tm/i6446/SLICE_179/tm/i6446/GATE_H0 ));
  selmux2 \tm/i6446/SLICE_179_K0K1MUX ( 
    .D0(\tm/i6446/SLICE_179/tm/i6446/GATE_H0 ), 
    .D1(\tm/i6446/SLICE_179/tm/i6446/SLICE_179_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40108 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5D08) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40109 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_i6266_SLICE_180 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, FXB, 
    FXA, output OFX0, OFX1 );
  wire   \dt/i6266/SLICE_180/dt/i6266/SLICE_180_K1_H1 , 
         \dt/i6266/SLICE_180/dt/i6266/GATE_H0 ;

  lut40110 \dt/i6266/SLICE_180_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\dt/i6266/SLICE_180/dt/i6266/SLICE_180_K1_H1 ));
  lut40111 \dt/i6266/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\dt/i6266/SLICE_180/dt/i6266/GATE_H0 ));
  selmux2 \dt/i6266/SLICE_180_K0K1MUX ( 
    .D0(\dt/i6266/SLICE_180/dt/i6266/GATE_H0 ), 
    .D1(\dt/i6266/SLICE_180/dt/i6266/SLICE_180_K1_H1 ), .SD(M0), .Z(OFX0));
  selmux2 \dt/i6266/SLICE_180_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40110 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00FE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40111 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_i5444_SLICE_181 ( input D1, C1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \dt/i5444/SLICE_181/dt/i5444/SLICE_181_K1_H1 , 
         \dt/i5444/SLICE_181/dt/i5444/GATE_H0 ;

  lut40112 \dt/i5444/SLICE_181_K1 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(\dt/i5444/SLICE_181/dt/i5444/SLICE_181_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40113 \dt/i5444/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\dt/i5444/SLICE_181/dt/i5444/GATE_H0 ));
  selmux2 \dt/i5444/SLICE_181_K0K1MUX ( 
    .D0(\dt/i5444/SLICE_181/dt/i5444/GATE_H0 ), 
    .D1(\dt/i5444/SLICE_181/dt/i5444/SLICE_181_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40112 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF5F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40113 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_i6265_SLICE_182 ( input D1, C1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \dt/i6265/SLICE_182/dt/i6265/SLICE_182_K1_H1 , 
         \dt/i6265/SLICE_182/dt/i6265/GATE_H0 ;

  lut40114 \dt/i6265/SLICE_182_K1 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(\dt/i6265/SLICE_182/dt/i6265/SLICE_182_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40115 \dt/i6265/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\dt/i6265/SLICE_182/dt/i6265/GATE_H0 ));
  selmux2 \dt/i6265/SLICE_182_K0K1MUX ( 
    .D0(\dt/i6265/SLICE_182/dt/i6265/GATE_H0 ), 
    .D1(\dt/i6265/SLICE_182/dt/i6265/SLICE_182_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40114 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40115 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFCE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_i2374_SLICE_183 ( input D1, C1, B1, A1, D0, C0, B0, M0, output OFX0 );
  wire   \dt/i2374/SLICE_183/dt/i2374/SLICE_183_K1_H1 , GNDI, 
         \dt/i2374/SLICE_183/dt/i2374/GATE_H0 ;

  lut40116 \dt/i2374/SLICE_183_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\dt/i2374/SLICE_183/dt/i2374/SLICE_183_K1_H1 ));
  lut40117 \dt/i2374/GATE ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(\dt/i2374/SLICE_183/dt/i2374/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \dt/i2374/SLICE_183_K0K1MUX ( 
    .D0(\dt/i2374/SLICE_183/dt/i2374/GATE_H0 ), 
    .D1(\dt/i2374/SLICE_183/dt/i2374/SLICE_183_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40116 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0E2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40117 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF3C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_i2370_SLICE_184 ( input D1, C1, B1, A1, D0, C0, B0, M0, output OFX0 );
  wire   \dt/i2370/SLICE_184/dt/i2370/SLICE_184_K1_H1 , GNDI, 
         \dt/i2370/SLICE_184/dt/i2370/GATE_H0 ;

  lut40118 \dt/i2370/SLICE_184_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\dt/i2370/SLICE_184/dt/i2370/SLICE_184_K1_H1 ));
  lut40119 \dt/i2370/GATE ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(\dt/i2370/SLICE_184/dt/i2370/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \dt/i2370/SLICE_184_K0K1MUX ( 
    .D0(\dt/i2370/SLICE_184/dt/i2370/GATE_H0 ), 
    .D1(\dt/i2370/SLICE_184/dt/i2370/SLICE_184_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40118 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF0E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40119 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFC0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_i2372_SLICE_185 ( input D1, C1, B1, A1, C0, B0, A0, M0, output OFX0 );
  wire   \dt/i2372/SLICE_185/dt/i2372/SLICE_185_K1_H1 , GNDI, 
         \dt/i2372/SLICE_185/dt/i2372/GATE_H0 ;

  lut40116 \dt/i2372/SLICE_185_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\dt/i2372/SLICE_185/dt/i2372/SLICE_185_K1_H1 ));
  lut40120 \dt/i2372/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\dt/i2372/SLICE_185/dt/i2372/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \dt/i2372/SLICE_185_K0K1MUX ( 
    .D0(\dt/i2372/SLICE_185/dt/i2372/GATE_H0 ), 
    .D1(\dt/i2372/SLICE_185/dt/i2372/SLICE_185_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40120 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB8B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_i1958_SLICE_186 ( input D1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \dt/i1958/SLICE_186/dt/i1958/SLICE_186_K1_H1 , 
         \dt/i1958/SLICE_186/dt/i1958/GATE_H0 ;

  lut40121 \dt/i1958/SLICE_186_K1 ( .A(A1), .B(B1), .C(GNDI), .D(D1), 
    .Z(\dt/i1958/SLICE_186/dt/i1958/SLICE_186_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40122 \dt/i1958/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\dt/i1958/SLICE_186/dt/i1958/GATE_H0 ));
  selmux2 \dt/i1958/SLICE_186_K0K1MUX ( 
    .D0(\dt/i1958/SLICE_186/dt/i1958/GATE_H0 ), 
    .D1(\dt/i1958/SLICE_186/dt/i1958/SLICE_186_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40121 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEE44) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40122 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1ABE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_i1974_SLICE_187 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \dt/i1974/SLICE_187/dt/i1974/SLICE_187_K1_H1 , 
         \dt/i1974/SLICE_187/dt/i1974/GATE_H0 ;

  lut40123 \dt/i1974/SLICE_187_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\dt/i1974/SLICE_187/dt/i1974/SLICE_187_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40124 \dt/i1974/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\dt/i1974/SLICE_187/dt/i1974/GATE_H0 ));
  selmux2 \dt/i1974/SLICE_187_K0K1MUX ( 
    .D0(\dt/i1974/SLICE_187/dt/i1974/GATE_H0 ), 
    .D1(\dt/i1974/SLICE_187/dt/i1974/SLICE_187_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40123 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE4E4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40124 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h26BE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_i6442_SLICE_188 ( input D1, C1, B1, A1, D0, C0, A0, M0, output OFX0 );
  wire   \dt/i6442/SLICE_188/dt/i6442/SLICE_188_K1_H1 , GNDI, 
         \dt/i6442/SLICE_188/dt/i6442/GATE_H0 ;

  lut40125 \dt/i6442/SLICE_188_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\dt/i6442/SLICE_188/dt/i6442/SLICE_188_K1_H1 ));
  lut40126 \dt/i6442/GATE ( .A(A0), .B(GNDI), .C(C0), .D(D0), 
    .Z(\dt/i6442/SLICE_188/dt/i6442/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \dt/i6442/SLICE_188_K0K1MUX ( 
    .D0(\dt/i6442/SLICE_188/dt/i6442/GATE_H0 ), 
    .D1(\dt/i6442/SLICE_188/dt/i6442/SLICE_188_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40125 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF2B3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40126 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_i6452_SLICE_189 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \dt/i6452/SLICE_189/dt/i6452/SLICE_189_K1_H1 , 
         \dt/i6452/SLICE_189/dt/i6452/GATE_H0 ;

  lut40127 \dt/i6452/SLICE_189_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\dt/i6452/SLICE_189/dt/i6452/SLICE_189_K1_H1 ));
  lut40128 \dt/i6452/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\dt/i6452/SLICE_189/dt/i6452/GATE_H0 ));
  selmux2 \dt/i6452/SLICE_189_K0K1MUX ( 
    .D0(\dt/i6452/SLICE_189/dt/i6452/GATE_H0 ), 
    .D1(\dt/i6452/SLICE_189/dt/i6452/SLICE_189_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40127 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9FEB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40128 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h53B7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_i6450_SLICE_190 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \dt/i6450/SLICE_190/dt/i6450/SLICE_190_K1_H1 , 
         \dt/i6450/SLICE_190/dt/i6450/GATE_H0 ;

  lut40129 \dt/i6450/SLICE_190_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\dt/i6450/SLICE_190/dt/i6450/SLICE_190_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40130 \dt/i6450/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\dt/i6450/SLICE_190/dt/i6450/GATE_H0 ));
  selmux2 \dt/i6450/SLICE_190_K0K1MUX ( 
    .D0(\dt/i6450/SLICE_190/dt/i6450/GATE_H0 ), 
    .D1(\dt/i6450/SLICE_190/dt/i6450/SLICE_190_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40129 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEDED) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40130 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD7FB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_i6448_SLICE_191 ( input D1, C1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \dt/i6448/SLICE_191/dt/i6448/SLICE_191_K1_H1 , 
         \dt/i6448/SLICE_191/dt/i6448/GATE_H0 ;

  lut40131 \dt/i6448/SLICE_191_K1 ( .A(A1), .B(GNDI), .C(C1), .D(D1), 
    .Z(\dt/i6448/SLICE_191/dt/i6448/SLICE_191_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40132 \dt/i6448/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\dt/i6448/SLICE_191/dt/i6448/GATE_H0 ));
  selmux2 \dt/i6448/SLICE_191_K0K1MUX ( 
    .D0(\dt/i6448/SLICE_191/dt/i6448/GATE_H0 ), 
    .D1(\dt/i6448/SLICE_191/dt/i6448/SLICE_191_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40131 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAF5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40132 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB7EF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_i6543_SLICE_192 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \dt/i6543/SLICE_192/dt/i6543/SLICE_192_K1_H1 , 
         \dt/i6543/SLICE_192/dt/i6543/GATE_H0 ;

  lut40133 \dt/i6543/SLICE_192_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\dt/i6543/SLICE_192/dt/i6543/SLICE_192_K1_H1 ));
  lut40134 \dt/i6543/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\dt/i6543/SLICE_192/dt/i6543/GATE_H0 ));
  selmux2 \dt/i6543/SLICE_192_K0K1MUX ( 
    .D0(\dt/i6543/SLICE_192/dt/i6543/GATE_H0 ), 
    .D1(\dt/i6543/SLICE_192/dt/i6543/SLICE_192_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40133 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAE69) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40134 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3FF7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_i6541_SLICE_193 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \dt/i6541/SLICE_193/dt/i6541/SLICE_193_K1_H1 , 
         \dt/i6541/SLICE_193/dt/i6541/GATE_H0 ;

  lut40135 \dt/i6541/SLICE_193_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\dt/i6541/SLICE_193/dt/i6541/SLICE_193_K1_H1 ));
  lut40136 \dt/i6541/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\dt/i6541/SLICE_193/dt/i6541/GATE_H0 ));
  selmux2 \dt/i6541/SLICE_193_K0K1MUX ( 
    .D0(\dt/i6541/SLICE_193/dt/i6541/GATE_H0 ), 
    .D1(\dt/i6541/SLICE_193/dt/i6541/SLICE_193_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40135 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCD7C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40136 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDBE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_i6539_SLICE_194 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \dt/i6539/SLICE_194/dt/i6539/SLICE_194_K1_H1 , 
         \dt/i6539/SLICE_194/dt/i6539/GATE_H0 ;

  lut40137 \dt/i6539/SLICE_194_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\dt/i6539/SLICE_194/dt/i6539/SLICE_194_K1_H1 ));
  lut40138 \dt/i6539/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\dt/i6539/SLICE_194/dt/i6539/GATE_H0 ));
  selmux2 \dt/i6539/SLICE_194_K0K1MUX ( 
    .D0(\dt/i6539/SLICE_194/dt/i6539/GATE_H0 ), 
    .D1(\dt/i6539/SLICE_194/dt/i6539/SLICE_194_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40137 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC6DE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40138 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFF6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_i6535_SLICE_195 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output 
    OFX0 );
  wire   \dt/i6535/SLICE_195/dt/i6535/SLICE_195_K1_H1 , 
         \dt/i6535/SLICE_195/dt/i6535/GATE_H0 ;

  lut40139 \dt/i6535/SLICE_195_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\dt/i6535/SLICE_195/dt/i6535/SLICE_195_K1_H1 ));
  lut40140 \dt/i6535/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\dt/i6535/SLICE_195/dt/i6535/GATE_H0 ));
  selmux2 \dt/i6535/SLICE_195_K0K1MUX ( 
    .D0(\dt/i6535/SLICE_195/dt/i6535/GATE_H0 ), 
    .D1(\dt/i6535/SLICE_195/dt/i6535/SLICE_195_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40139 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBA3F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40140 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h69DF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_196 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40141 \te/i2366_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40142 \dt/i1945_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40141 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE2EE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40142 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h551C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_197 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40143 \tm/i1_4_lut_adj_15 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40144 \tm/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40143 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3733) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40144 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_198 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40145 \tm/i1439_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40146 \tm/i3_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40145 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7250) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40146 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_199 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40147 \tm/i2_4_lut_adj_21 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40148 \tm/i1_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40147 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBF3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40148 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C5D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_200 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40149 \tm/i4957_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40150 \tm/i1_4_lut_adj_16 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40149 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h404F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40150 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8F0F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_201 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40151 \tm/i5144_4_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40152 \tm/i4980_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40151 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF440) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40152 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1B11) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_202 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40153 \tm/n6226_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40154 \tm/i4969_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40153 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40154 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A33) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_203 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40155 \tm/i5110_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40156 \tm/i2_4_lut_adj_20 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40155 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h50DC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40156 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_204 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40157 \tm/i1_4_lut_adj_26 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40158 \tm/i1_4_lut_adj_25 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40157 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h10FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40158 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_205 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40151 \tm/i5032_4_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40159 \tm/n1039_bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40159 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00B2) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_206 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40160 \tm/i3_4_lut_adj_45 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40161 \tm/i1438_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40160 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40161 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h22F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_207 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40162 \te/i1_2_lut_rep_113_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40163 \tm/i1_4_lut_adj_14 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40162 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40163 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCD00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_208 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40164 \tm/i1_2_lut_3_lut_4_lut_adj_37 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40165 \tm/i1_2_lut_rep_146 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40164 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40165 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_209 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40166 \tm/i2_2_lut_rep_121_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40167 \tm/i2_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40166 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8CAF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40167 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_210 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40168 \tm/i1_4_lut_adj_18 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40169 \tm/i1_2_lut_rep_114_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40168 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFB3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40169 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_211 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40170 \dt/i1966_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40171 \tm/mL_0__bdd_4_lut_6623 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40170 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hB8B8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40171 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDC5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_212 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40172 \tm/i1_2_lut_rep_101_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40173 \tm/i3853_2_lut_rep_147 ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40172 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40173 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_213 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40174 \tm/n1022_bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40175 \tm/i69_2_lut_rep_120_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40174 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0B02) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40175 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0CAE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_214 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40176 \tm/i185_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40066 \tm/i4989_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40176 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0B00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_215 ( input D1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40177 \tm/i4_2_lut_rep_141 ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40178 \tm/i1_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40177 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5500) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40178 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF8F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_216 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40179 \tm/i2_2_lut_3_lut_4_lut_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40180 \tm/i6143_2_lut_rep_148 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40179 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5D55) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40180 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_217 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40181 \tm/i2_3_lut_4_lut_adj_40 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40182 \tm/i1_2_lut_rep_142 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40181 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40182 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_218 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40183 \tm/i6365_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40164 \tm/i2404_2_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40183 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_219 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40184 \tm/i1_2_lut_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40185 \tm/i4971_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40184 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF1F1) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40185 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3505) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_220 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40186 \tm/i1_2_lut_rep_127_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40187 \tm/i1_3_lut_4_lut_adj_22 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40186 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40187 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_221 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40188 \tm/i1_3_lut_rep_119_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40189 \tm/mux_980_i2_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40188 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h44F4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40189 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1B0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_222 ( input D1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40190 \te/i2_2_lut_rep_123_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40191 \tm/i198_2_lut_rep_102_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40190 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40191 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3100) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_223 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40192 \tm/i2_3_lut_4_lut_adj_49 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40193 \tm/i2_3_lut_4_lut_adj_29 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40192 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40193 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_224 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40194 \tm/i1_2_lut_rep_112_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40164 \tm/i1_2_lut_3_lut_4_lut_adj_30 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40194 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_225 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40195 \tm/i2_3_lut_rep_126_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40196 \tm/i1_2_lut_rep_104_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40195 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40196 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_226 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40197 \tm/i83_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40198 \tm/i21_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40197 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA0EC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40198 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA855) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_227 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40199 \tm/equal_1630_i3_2_lut_rep_133 ( .A(GNDI), .B(B1), .C(C1), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40200 \tm/i4973_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40199 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF3F3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40200 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA30) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_228 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40201 \tm/i2_3_lut_rep_107_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40180 \tm/i1_2_lut_rep_134 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40201 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_229 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40075 \tm/i68_2_lut_rep_132 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40202 \tm/i1_2_lut_rep_105_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40202 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA200) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_230 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40203 \tm/i3_2_lut_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40204 \tm/i1_2_lut_rep_109 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40203 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40204 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_231 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40205 \tm/i1_4_lut_adj_46 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40206 \tm/i1_2_lut_rep_100_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40205 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40206 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_232 ( input D1, C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40207 \tm/i4077_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40208 \tm/i2_3_lut ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40207 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40208 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_233 ( input C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40209 \secondGen/i1185_2_lut_rep_138 ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40210 \tm/i4073_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40209 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3030) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40210 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCC80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_234 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40211 \secondGen/i4071_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40212 \tm/i3_4_lut_adj_35 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40211 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00E0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40212 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_235 ( input D1, C1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40029 \tm/i6167_2_lut_rep_145 ( .A(GNDI), .B(GNDI), .C(C1), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40213 \tm/i1_2_lut_rep_115_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40213 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_236 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40214 \secondGen/i4075_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40215 \tm/i2_4_lut_adj_36 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40214 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4440) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40215 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_237 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40216 \tm/i1_3_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40217 \tm/i44_4_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40216 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40217 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h10AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_238 ( input D1, C1, B1, A1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40218 \tm/i1_2_lut_rep_103_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40219 \tm/i1_2_lut_rep_124_3_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40218 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40219 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0030) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_239 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40220 \tm/i1_4_lut_adj_47 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40221 \tm/i1_2_lut_rep_139 ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40220 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h020C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40221 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h00CC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module controller_SLICE_240 ( input D1, C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40222 \controller/i1_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40223 \controller/i5_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40222 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40223 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_SLICE_241 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40173 \dt/i1_2_lut_rep_129 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40224 \dt/n7328_bdd_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40224 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_SLICE_242 ( input D1, C1, B1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40225 \dt/i6367_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40226 \dt/i2_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40225 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40226 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_SLICE_243 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40047 \dt/i3_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 \dt/i1_2_lut_rep_149 ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module dt_SLICE_244 ( input C1, B1, A1, D0, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40227 \dt/i1_2_lut_rep_116_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40228 \dt/i2_3_lut_rep_150 ( .A(A0), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40227 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40228 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_245 ( input D1, C1, B1, A1, D0, C0, B0, M0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40229 \te/sL_2__bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40230 \dt/i1863_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \downkey/keystore_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40229 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAF8B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40230 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_SLICE_246 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40231 \dt/i10_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40232 \dt/i6392_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40231 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFAFA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40232 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_SLICE_247 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40233 \dt/i3_4_lut_adj_9 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40234 \dt/i3_4_lut_adj_8 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40233 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0400) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40234 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_SLICE_248 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40235 \dt/i7_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40236 \dt/i26_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40235 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40236 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_SLICE_249 ( input D1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40078 \dt/i14_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40237 \dt/i28_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40237 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_250 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, LSR, CLK, 
    output F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40238 \rstkey/i6219_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40239 \rstkey/i23_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \dt/shift_cnt_FSM__i9 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40238 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40239 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_251 ( input D1, B1, D0, C0, B0, A0, M0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly, CE_dly;

  lut40240 \rstkey/i4_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40241 \rstkey/i24_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \modekey/keystore_i0_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40240 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40241 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_252 ( input D1, A1, D0, C0, B0, A0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40242 \rstkey/i8_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40243 \rstkey/i22_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \dt/shift_cnt_FSM__i8 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_cnt_FSM__i7 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40242 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40243 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module secondGen_SLICE_253 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40243 \secondGen/i20_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40244 \secondGen/i17_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40244 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module secondGen_SLICE_254 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, 
    F1 );

  lut40245 \secondGen/i21_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40246 \secondGen/i6221_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40245 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40246 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module secondGen_SLICE_255 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40173 \secondGen/i5_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40237 \secondGen/i19_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_256 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, M0_dly, CLK_dly, CE_dly;

  lut40243 \modekey/i21_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40247 \modekey/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0071 \dt/shift_cnt_FSM__i0 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40247 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_257 ( input D1, B1, A1, D0, C0, B0, A0, M1, M0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40248 \modekey/i13_3_lut ( .A(A1), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \modekey/i22_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \dt/shift_cnt_FSM__i12 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_cnt_FSM__i11 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40248 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_258 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40235 \modekey/i3_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40241 \modekey/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \dt/shift_cnt_FSM__i10 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_cnt_FSM__i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_259 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CLK, output 
    F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly;

  lut40249 \downkey/i21_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40250 \downkey/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \controller/mode_i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0013 \controller/mode_i1 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40249 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40250 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module downkey_SLICE_260 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40251 \downkey/i13_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40252 \downkey/i22_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40251 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40252 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_261 ( input D1, A1, D0, C0, B0, A0, M0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40078 \downkey/i3_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40237 \downkey/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0013 \controller/modekey_ls_21 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module upkey_SLICE_262 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40056 \upkey/i21_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40253 \upkey/i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40253 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module upkey_SLICE_263 ( input D1, C1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40254 \upkey/i13_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40255 \upkey/i22_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40254 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40255 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module upkey_SLICE_264 ( input D1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40078 \upkey/i3_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40252 \upkey/i20_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tm_SLICE_265 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40256 \tm/i6379_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40257 \tm/i6382_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40256 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0F0B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40257 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5545) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_266 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40258 \tm/mux_652_i4_4_lut_else_1_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40259 \tm/i2_4_lut_adj_34 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40258 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6A8A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40259 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_267 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40260 \te/sL_3__bdd_4_lut_6628 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40261 \tm/i2_3_lut_4_lut_adj_42 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40260 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3DEB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40261 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_268 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40262 \te/i6423/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40263 \dt/n7080_bdd_4_lut_6461 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40262 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5EDF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40263 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7DA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module te_SLICE_269 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40264 \te/mL_3__bdd_4_lut_6507 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40265 \te/mL_2__bdd_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40264 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7B6D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40265 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2FFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_270 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40266 \te/hL_3__I_0_Mux_4_i15/GATE ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40267 \dt/i6269/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40266 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h67F9) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40267 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF27B) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_271 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40268 \tm/i6388_4_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40269 \tm/i1_2_lut_rep_111_3_lut_4_lut_4_lut ( .A(A0), .B(B0), .C(C0), 
    .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40268 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h050D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40269 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0002) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_272 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40270 \tm/i1_2_lut_rep_110_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40271 \tm/i6157_2_lut_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40270 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40271 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2FFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_273 ( input D1, C1, B1, D0, C0, B0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40272 \re/i2386_1_lut_3_lut ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40273 \re/i2_3_lut_rep_136 ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \dt/shift_cnt_FSM__i2 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_cnt_FSM__i15 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40272 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF3) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40273 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h000C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_SLICE_274 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40274 \dt/i1_2_lut_rep_118_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40249 \dt/i1_2_lut_rep_106_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40274 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_275 ( input D1, C1, B1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40275 \dt/mH_2__bdd_4_lut_6515 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40180 \tm/i6151_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40275 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h48F5) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_276 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40196 \tm/i1_2_lut_3_lut_4_lut_adj_44 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40276 \tm/i1664_2_lut_3_lut ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40276 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6A6A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_277 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40277 \dt/n379_bdd_4_lut_6655 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40278 \tm/i2_3_lut_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40277 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF3EF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40278 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_278 ( input D1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40004 \tm/i1657_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40279 \tm/i757_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40279 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5500) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_279 ( input D1, C1, B1, A1, D0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40280 \tm/i1_3_lut_4_lut_adj_48 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40281 \tm/i19_3_lut ( .A(A0), .B(B0), .C(GNDI), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40280 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h56AA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40281 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8855) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_280 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40282 \tm/i1932_2_lut_rep_117_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40283 \tm/i2_2_lut_3_lut_4_lut_adj_31 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40282 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40283 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_281 ( input D1, C1, B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40258 \tm/mux_1135_i4_4_lut_else_1_lut ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40284 \tm/i1759_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40284 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3C3C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_282 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40285 \tm/i2_3_lut_4_lut_adj_39 ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40286 \tm/i6349_2_lut_rep_143 ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40285 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0020) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40286 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0033) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_283 ( input D1, C1, B1, A1, D0, B0, output F0, F1 );
  wire   GNDI;

  lut40287 \te/sL_1__bdd_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40240 \tm/i6163_2_lut_rep_131 ( .A(GNDI), .B(B0), .C(GNDI), .D(D0), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40287 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h76F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module controller_SLICE_284 ( input D1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40288 \controller/i3820_2_lut_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40078 \controller/i3838_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40288 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module controller_SLICE_285 ( input D1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40289 \controller/i6399_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40290 \controller/i3824_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40289 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h55FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40290 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF55) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_SLICE_286 ( input D1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40291 \dt/i1_2_lut_adj_11 ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 \dt/i1_2_lut_rep_128_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40291 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_287 ( input C1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40019 \te/i3845_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40292 \dt/sH_2__bdd_4_lut_6642 ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40292 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6D0D) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_SLICE_288 ( input C1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40293 \dt/din_I_6_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40294 \dt/sck_I_0_69_2_lut_rep_130 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40293 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0A0A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40294 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5050) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_289 ( input C1, B1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40295 \controller/i1_2_lut_adj_13 ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40296 \tm/i4040_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40295 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFCFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40296 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFF0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_290 ( input C1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40019 \controller/i1_2_lut ( .A(A1), .B(GNDI), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40231 \tm/i4028_2_lut ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tm_SLICE_291 ( input D1, C1, A1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40297 \tm/i6385_3_lut ( .A(A1), .B(GNDI), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40177 \tm/i1_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40297 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5505) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_292 ( input D1, B1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40291 \tm/i3896_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \tm/i4964_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tm_SLICE_293 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40298 \tm/i24_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40299 \tm/mux_980_i1_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40298 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h808F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40299 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3F3A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module tm_SLICE_294 ( input D1, C1, B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40032 \tm/i4950_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \tm/i4030_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module tm_SLICE_295 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40300 \tm/i23_3_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40301 \tm/i1_2_lut_3_lut_4_lut_adj_33 ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40300 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h88F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40301 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h08FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_296 ( input D1, A1, C0, A0, output F0, F1 );
  wire   GNDI;

  lut40078 \te/i3940_2_lut ( .A(A1), .B(GNDI), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40165 \tm/i4_2_lut_rep_144 ( .A(A0), .B(GNDI), .C(C0), .D(GNDI), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module dt_SLICE_297 ( input D1, C1, B1, D0, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40302 \dt/i1_3_lut_adj_12 ( .A(GNDI), .B(B1), .C(C1), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40303 \dt/i2_2_lut_3_lut ( .A(GNDI), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40302 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFF0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40303 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_SLICE_298 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40304 \dt/i6371_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40305 \dt/i6329_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40304 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFCD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40305 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE04) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module upkey_SLICE_299 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40255 \upkey/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40235 \upkey/i7_2_lut ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module downkey_SLICE_300 ( input D1, C1, B1, A1, C0, B0, output F0, F1 );
  wire   GNDI;

  lut40243 \downkey/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40295 \downkey/i7_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_301 ( input D1, C1, B1, A1, C0, B0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40058 \modekey/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 \modekey/i7_2_lut ( .A(GNDI), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \dt/shift_cnt_FSM__i14 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_cnt_FSM__i13 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module secondGen_SLICE_302 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40306 \secondGen/i6207_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40307 \secondGen/i6149_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40306 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40307 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module secondGen_SLICE_303 ( input D1, C1, B1, A1, D0, C0, output F0, F1 );
  wire   GNDI;

  lut40308 \secondGen/i13_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 \secondGen/i1_2_lut ( .A(GNDI), .B(GNDI), .C(C0), .D(D0), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40308 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_304 ( input D1, B1, D0, C0, B0, A0, M1, M0, CE, LSR, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40240 \rstkey/i3_2_lut ( .A(GNDI), .B(B1), .C(GNDI), .D(D1), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 \rstkey/i16_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \dt/shift_cnt_FSM__i6 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \dt/shift_cnt_FSM__i5 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_305 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly, LSR_dly;

  lut40098 \rstkey/i19_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40309 \rstkey/i14_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre \dt/shift_cnt_FSM__i4 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \dt/shift_cnt_FSM__i3 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40309 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_SLICE_306 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40173 \dt/i9_2_lut ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40310 \dt/i22_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40310 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module dt_SLICE_307 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40047 \dt/i17_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40056 \dt/i18_4_lut ( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module dt_SLICE_308 ( input C1, B1, D0, A0, output F0, F1 );
  wire   GNDI;

  lut40311 \dt/i3980_2_lut ( .A(GNDI), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40078 \dt/i3844_2_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40311 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C0C) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module down_key ( output PADDI, input down_key );

  xo2iobuf down_key_pad( .Z(PADDI), .PAD(down_key));

  specify
    (down_key => PADDI) = (0:0:0,0:0:0);
    $width (posedge down_key, 0:0:0);
    $width (negedge down_key, 0:0:0);
  endspecify

endmodule

module xo2iobuf ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module up_key ( output PADDI, input up_key );

  xo2iobuf up_key_pad( .Z(PADDI), .PAD(up_key));

  specify
    (up_key => PADDI) = (0:0:0,0:0:0);
    $width (posedge up_key, 0:0:0);
    $width (negedge up_key, 0:0:0);
  endspecify

endmodule

module mode_key ( output PADDI, input mode_key );

  xo2iobuf mode_key_pad( .Z(PADDI), .PAD(mode_key));

  specify
    (mode_key => PADDI) = (0:0:0,0:0:0);
    $width (posedge mode_key, 0:0:0);
    $width (negedge mode_key, 0:0:0);
  endspecify

endmodule

module rst_key ( output PADDI, input rst_key );

  xo2iobuf rst_key_pad( .Z(PADDI), .PAD(rst_key));

  specify
    (rst_key => PADDI) = (0:0:0,0:0:0);
    $width (posedge rst_key, 0:0:0);
    $width (negedge rst_key, 0:0:0);
  endspecify

endmodule

module clk ( output PADDI, input clk );

  xo2iobuf clk_pad( .Z(PADDI), .PAD(clk));

  specify
    (clk => PADDI) = (0:0:0,0:0:0);
    $width (posedge clk, 0:0:0);
    $width (negedge clk, 0:0:0);
  endspecify

endmodule

module rck ( input PADDO, output rck );
  wire   GNDI;

  xo2iobuf0312 rck_pad( .I(PADDO), .T(GNDI), .PAD(rck));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => rck) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf0312 ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module sck ( input PADDO, output sck );
  wire   GNDI;

  xo2iobuf0312 sck_pad( .I(PADDO), .T(GNDI), .PAD(sck));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => sck) = (0:0:0,0:0:0);
  endspecify

endmodule

module din ( input PADDO, output din );
  wire   GNDI;

  xo2iobuf0312 din_pad( .I(PADDO), .T(GNDI), .PAD(din));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => din) = (0:0:0,0:0:0);
  endspecify

endmodule

module secDisp ( input PADDO, output secDisp );
  wire   GNDI;

  xo2iobuf0312 secDisp_pad( .I(PADDO), .T(GNDI), .PAD(secDisp));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => secDisp) = (0:0:0,0:0:0);
  endspecify

endmodule

module modedisplay_0_ ( input PADDO, output modedisplay0 );
  wire   GNDI;

  xo2iobuf0312 modedisplay_pad_0( .I(PADDO), .T(GNDI), .PAD(modedisplay0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => modedisplay0) = (0:0:0,0:0:0);
  endspecify

endmodule

module modedisplay_1_ ( input PADDO, output modedisplay1 );
  wire   GNDI;

  xo2iobuf0312 modedisplay_pad_1( .I(PADDO), .T(GNDI), .PAD(modedisplay1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => modedisplay1) = (0:0:0,0:0:0);
  endspecify

endmodule

module modedisplay_2_ ( input PADDO, output modedisplay2 );
  wire   GNDI;

  xo2iobuf0312 modedisplay_pad_2( .I(PADDO), .T(GNDI), .PAD(modedisplay2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => modedisplay2) = (0:0:0,0:0:0);
  endspecify

endmodule

module modedisplay_3_ ( input PADDO, output modedisplay3 );
  wire   GNDI;

  xo2iobuf0312 modedisplay_pad_3( .I(PADDO), .T(GNDI), .PAD(modedisplay3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => modedisplay3) = (0:0:0,0:0:0);
  endspecify

endmodule

module PortA ( output PADDI, input PortA );

  xo2iobuf PortA_pad( .Z(PADDI), .PAD(PortA));

  specify
    (PortA => PADDI) = (0:0:0,0:0:0);
    $width (posedge PortA, 0:0:0);
    $width (negedge PortA, 0:0:0);
  endspecify

endmodule

module PortB ( output PADDI, input PortB );

  xo2iobuf PortB_pad( .Z(PADDI), .PAD(PortB));

  specify
    (PortB => PADDI) = (0:0:0,0:0:0);
    $width (posedge PortB, 0:0:0);
    $width (negedge PortB, 0:0:0);
  endspecify

endmodule

module GSR_INST ( input GSRNET );

  GSR5MODE GSR_INST_GSRMODE( .GSR(GSRNET));

  specify
  endspecify

endmodule

module GSR5MODE ( input GSR );
  wire   GSRMODE;

  INV INST10( .A(GSR), .Z(GSRMODE));
  GSR INST20( .GSR(GSRMODE));
endmodule
