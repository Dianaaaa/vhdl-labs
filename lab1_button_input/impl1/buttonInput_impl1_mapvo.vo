
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.11.0.396.4

// ldbanno -n Verilog -o buttonInput_impl1_mapvo.vo -w -neg -gui -msgset C:/Users/10352/vhdl-labs/lab1_button_input/promote.xml buttonInput_impl1_map.ncd 
// Netlist created on Wed Nov 18 21:59:19 2020
// Netlist written on Wed Nov 18 21:59:22 2020
// Design is for device LCMXO2-4000HC
// Design is for package CSBGA132
// Design is for performance grade 4

`timescale 1 ns / 1 ps

module Key_Table ( ROW, COL, button_four, a_to_g, a_to_g2, seg, seg2, clk );
  input  [3:0] COL;
  input  [3:0] button_four;
  input  clk;
  output [3:0] ROW;
  output [6:0] a_to_g;
  output [6:0] a_to_g2;
  output seg, seg2;
  wire   clk_cnt_8, clk_cnt_7, n67, n68, clk_c, n3442, n3443, clk_cnt_13, n62, 
         n3445, clk_cnt_2, clk_cnt_1, n73, n74, n3439, n3440, clk_cnt_4, 
         clk_cnt_3, n71, n72, n3441, clk_cnt_12, clk_cnt_11, n63, n64, n3444, 
         clk_cnt_6, clk_cnt_5, n69, n70, clk_cnt_10, clk_cnt_9, n65, n66, 
         clk_cnt_0, n75, LED_get_0, LED_get_1, n29, n30, n386, apa, LED_get_2, 
         LED_get_3, n27, n28, LED_get_4, n4107, n26, num_cnt_1, num_cnt_0, 
         n7_adj_2, n4097, num_cnt_2, ROW_c_0, ROW_c_1, n4093, n7, ROW_c_2, 
         ROW_c_3, BTN_cache_3, BTN_cache_1, BTN_cache_2, n3958, n3791, n3785, 
         a_to_g2_6_N_18_0, n4082, apa_enable_10, a_to_g2_c_0, n4069, n199, 
         a_to_g2_6_N_18_1, apa_enable_13, a_to_g2_c_1, n3732, n183, n229, 
         n2170, n4_adj_3, n4092, a_to_g2_6_N_18_3, a_to_g2_6_N_18_2, 
         a_to_g2_c_2, a_to_g2_c_3, n4_adj_10, n3817, a_to_g2_6_N_18_4, 
         a_to_g2_c_4, n243, n3898, a_to_g2_6_N_18_5, a_to_g2_c_5, n243_adj_5, 
         a_to_g2_6_N_18_6, a_to_g2_c_6, n1136, n3755, n16, apa_enable_5, 
         a_to_g_6_N_11_3, n4068, apa_enable_12, a_to_g_c_5, a_to_g_c_6, n4321, 
         clk_c_enable_1, apa_N_10, COL_c_1, COL_c_0, key_out_15__N_48, n3845, 
         key_out_12, GND_net, key_out_13, COL_c_3, COL_c_2, n4, key_out_14, n8, 
         key_out_15, n3883, n606, n12_adj_6, n3725, n3, n3954, key_out_7, 
         key_out_8, n4094, n4080, n3957, key_out_0, key_out_2, key_out_1, 
         n4125, key_out_11, key_out_10, n3808, key_out_9, n4122, key_out_5, 
         key_out_4, n4103, key_out_3, n3777, n1546, n4087, n4088, n4113, 
         key_out_6, n4110, n2200, n302, n3835, n262, n3788, n3741, n3790, 
         key_out_15__N_63, n3832, n3794, n2328, n4104, n4_adj_4, n3465, n4090, 
         n3803, n3805, n4054, n204, n213, n234, n1153, n4101, n271, n3464, 
         n264, n4078, n2350, n4089, n4079, n4085, n3471, n4091, n249, n4105, 
         n3849, n1263, n4_adj_8, n2348, n33, n5, n4102, n177, n3743, n4095, 
         n4074, n4100, n1199, n2184, key_out_15__N_53, n4083, n4071, n4099, 
         n4084, n4077, n3991, n3781, n3771, n4070, BTN_cache_0, n4_adj_7, 
         n6_adj_1, button_four_c_0, n3477, key_out_15__N_58, n4096, n3990, 
         n1265, n1202, n1262, n3824, n3739, n13, n4075, n3822, n1266, n12, 
         n3877, n4_adj_11, n4081, n4072, n3486, n3865, n3736, button_four_c_1, 
         n6_adj_9, n2264, n3879, n3875, n3873, n6, n4073, n4106, 
         button_four_c_3, button_four_c_2, VCCI;

  SLICE_0 SLICE_0( .A1(clk_cnt_8), .A0(clk_cnt_7), .DI1(n67), .DI0(n68), 
    .CLK(clk_c), .FCI(n3442), .F0(n68), .Q0(clk_cnt_7), .F1(n67), 
    .Q1(clk_cnt_8), .FCO(n3443));
  SLICE_1 SLICE_1( .A0(clk_cnt_13), .DI0(n62), .CLK(clk_c), .FCI(n3445), 
    .F0(n62), .Q0(clk_cnt_13));
  SLICE_2 SLICE_2( .A1(clk_cnt_2), .A0(clk_cnt_1), .DI1(n73), .DI0(n74), 
    .CLK(clk_c), .FCI(n3439), .F0(n74), .Q0(clk_cnt_1), .F1(n73), 
    .Q1(clk_cnt_2), .FCO(n3440));
  SLICE_3 SLICE_3( .A1(clk_cnt_4), .A0(clk_cnt_3), .DI1(n71), .DI0(n72), 
    .CLK(clk_c), .FCI(n3440), .F0(n72), .Q0(clk_cnt_3), .F1(n71), 
    .Q1(clk_cnt_4), .FCO(n3441));
  SLICE_4 SLICE_4( .A1(clk_cnt_12), .A0(clk_cnt_11), .DI1(n63), .DI0(n64), 
    .CLK(clk_c), .FCI(n3444), .F0(n64), .Q0(clk_cnt_11), .F1(n63), 
    .Q1(clk_cnt_12), .FCO(n3445));
  SLICE_5 SLICE_5( .A1(clk_cnt_6), .A0(clk_cnt_5), .DI1(n69), .DI0(n70), 
    .CLK(clk_c), .FCI(n3441), .F0(n70), .Q0(clk_cnt_5), .F1(n69), 
    .Q1(clk_cnt_6), .FCO(n3442));
  SLICE_6 SLICE_6( .A1(clk_cnt_10), .A0(clk_cnt_9), .DI1(n65), .DI0(n66), 
    .CLK(clk_c), .FCI(n3443), .F0(n66), .Q0(clk_cnt_9), .F1(n65), 
    .Q1(clk_cnt_10), .FCO(n3444));
  SLICE_7 SLICE_7( .A1(clk_cnt_0), .DI1(n75), .CLK(clk_c), .F1(n75), 
    .Q1(clk_cnt_0), .FCO(n3439));
  SLICE_10 SLICE_10( .B1(LED_get_0), .A1(LED_get_1), .A0(LED_get_0), .DI1(n29), 
    .DI0(n30), .LSR(n386), .CLK(apa), .F0(n30), .Q0(LED_get_0), .F1(n29), 
    .Q1(LED_get_1));
  SLICE_11 SLICE_11( .D1(LED_get_2), .C1(LED_get_3), .B1(LED_get_0), 
    .A1(LED_get_1), .C0(LED_get_2), .B0(LED_get_0), .A0(LED_get_1), .DI1(n27), 
    .DI0(n28), .LSR(n386), .CLK(apa), .F0(n28), .Q0(LED_get_2), .F1(n27), 
    .Q1(LED_get_3));
  SLICE_12 SLICE_12( .B1(LED_get_0), .A1(LED_get_1), .D0(LED_get_4), 
    .C0(LED_get_3), .B0(n4107), .A0(LED_get_2), .DI0(n26), .LSR(n386), 
    .CLK(apa), .F0(n26), .Q0(LED_get_4), .F1(n4107));
  SLICE_13 SLICE_13( .B1(num_cnt_1), .A1(num_cnt_0), .B0(num_cnt_1), 
    .A0(num_cnt_0), .DI1(n7_adj_2), .DI0(n4097), .LSR(num_cnt_2), .CLK(apa), 
    .F0(n4097), .Q0(ROW_c_0), .F1(n7_adj_2), .Q1(ROW_c_1));
  SLICE_14 SLICE_14( .B1(num_cnt_1), .A1(num_cnt_0), .B0(num_cnt_1), 
    .A0(num_cnt_0), .DI1(n4093), .DI0(n7), .LSR(num_cnt_2), .CLK(apa), .F0(n7), 
    .Q0(ROW_c_2), .F1(n4093), .Q1(ROW_c_3));
  SLICE_15 SLICE_15( .C1(BTN_cache_3), .B1(BTN_cache_1), .A1(BTN_cache_2), 
    .C0(n3958), .B0(n3791), .A0(n3785), .DI0(a_to_g2_6_N_18_0), .M0(n4082), 
    .CE(apa_enable_10), .CLK(apa), .OFX0(a_to_g2_6_N_18_0), .Q0(a_to_g2_c_0));
  SLICE_16 SLICE_16( .B1(n3791), .A1(n3785), .D0(n4069), .C0(n4082), 
    .B0(BTN_cache_3), .A0(n199), .DI0(a_to_g2_6_N_18_1), .CE(apa_enable_13), 
    .CLK(apa), .F0(a_to_g2_6_N_18_1), .Q0(a_to_g2_c_1), .F1(n4069));
  SLICE_17 SLICE_17( .D1(n3732), .C1(n4082), .B1(n183), .A1(n229), .D0(n2170), 
    .C0(n4082), .B0(n4_adj_3), .A0(n4092), .DI1(a_to_g2_6_N_18_3), 
    .DI0(a_to_g2_6_N_18_2), .CE(apa_enable_10), .CLK(apa), 
    .F0(a_to_g2_6_N_18_2), .Q0(a_to_g2_c_2), .F1(a_to_g2_6_N_18_3), 
    .Q1(a_to_g2_c_3));
  SLICE_18 SLICE_18( .C1(BTN_cache_3), .B1(BTN_cache_2), .A1(BTN_cache_1), 
    .D0(n4_adj_10), .C0(n4082), .B0(n4092), .A0(n3817), .DI0(a_to_g2_6_N_18_4), 
    .CE(apa_enable_10), .CLK(apa), .F0(a_to_g2_6_N_18_4), .Q0(a_to_g2_c_4), 
    .F1(n4092));
  SLICE_19 SLICE_19( .B1(n3785), .A1(n2170), .D0(n4082), .C0(n243), .B0(n3817), 
    .A0(n3898), .DI0(a_to_g2_6_N_18_5), .CE(apa_enable_13), .CLK(apa), 
    .F0(a_to_g2_6_N_18_5), .Q0(a_to_g2_c_5), .F1(n3898));
  SLICE_20 SLICE_20( .C1(BTN_cache_3), .B1(BTN_cache_1), .A1(BTN_cache_2), 
    .D0(n3732), .C0(n4082), .B0(n183), .A0(n243_adj_5), .DI0(a_to_g2_6_N_18_6), 
    .CE(apa_enable_10), .CLK(apa), .F0(a_to_g2_6_N_18_6), .Q0(a_to_g2_c_6), 
    .F1(n183));
  SLICE_21 SLICE_21( .D1(n1136), .C1(n3755), .B1(n16), .A1(apa_enable_5), 
    .C0(n1136), .B0(n3755), .A0(apa_enable_5), .DI1(a_to_g_6_N_11_3), 
    .DI0(n4068), .CE(apa_enable_12), .CLK(apa), .F0(n4068), .Q0(a_to_g_c_5), 
    .F1(a_to_g_6_N_11_3), .Q1(a_to_g_c_6));
  SLICE_22 SLICE_22( .DI0(n4321), .CE(clk_c_enable_1), .LSR(apa_N_10), 
    .CLK(clk_c), .F0(n4321), .Q0(apa));
  SLICE_29 SLICE_29( .B0(LED_get_1), .A0(LED_get_3), .M1(COL_c_1), 
    .M0(COL_c_0), .CE(key_out_15__N_48), .CLK(apa), .F0(n3845), 
    .Q0(key_out_12), .F1(GND_net), .Q1(key_out_13));
  SLICE_30 SLICE_30( .B1(clk_cnt_2), .A1(clk_cnt_3), .B0(num_cnt_1), 
    .A0(num_cnt_2), .M1(COL_c_3), .M0(COL_c_2), .CE(key_out_15__N_48), 
    .CLK(apa), .F0(n4), .Q0(key_out_14), .F1(n8), .Q1(key_out_15));
  SLICE_31 SLICE_31( .D1(clk_cnt_0), .C1(clk_cnt_13), .B1(clk_cnt_11), 
    .A1(clk_cnt_1), .B0(apa_N_10), .A0(num_cnt_0), .DI0(n3883), .LSR(n606), 
    .CLK(clk_c), .F0(n3883), .Q0(num_cnt_0), .F1(n12_adj_6));
  SLICE_32 SLICE_32( .C1(num_cnt_2), .B1(num_cnt_1), .A1(num_cnt_0), 
    .B0(num_cnt_1), .A0(num_cnt_0), .DI1(n3725), .DI0(n3), .CE(apa_N_10), 
    .LSR(n606), .CLK(clk_c), .F0(n3), .Q0(num_cnt_1), .F1(n3725), 
    .Q1(num_cnt_2));
  i3633_SLICE_33 \i3633/SLICE_33 ( .B1(n3954), .A1(key_out_7), .D0(key_out_8), 
    .C0(key_out_7), .B0(n4094), .A0(n4080), .M0(a_to_g2_c_0), .OFX0(n3957));
  i3714_SLICE_34 \i3714/SLICE_34 ( .D1(key_out_0), .C1(key_out_14), 
    .B1(key_out_2), .A1(key_out_1), .D0(key_out_0), .C0(key_out_14), 
    .B0(key_out_2), .A0(key_out_1), .M0(key_out_15), .OFX0(n4125));
  i3712_SLICE_35 \i3712/SLICE_35 ( .D1(key_out_7), .C1(key_out_11), 
    .B1(key_out_10), .A1(n3808), .D0(key_out_7), .C0(key_out_11), 
    .B0(key_out_10), .A0(n3808), .M0(key_out_9), .OFX0(n4122));
  i3710_SLICE_36 \i3710/SLICE_36 ( .D1(key_out_2), .C1(key_out_5), 
    .B1(key_out_4), .A1(n4103), .D0(key_out_2), .C0(key_out_5), .B0(key_out_4), 
    .A0(n4103), .M0(key_out_3), .OFX0(n3777));
  i3708_SLICE_37 \i3708/SLICE_37 ( .C1(apa_enable_5), .B1(n1546), .A1(n1136), 
    .D0(n4087), .C0(apa_enable_5), .B0(n1546), .A0(n1136), .M0(n3755), 
    .OFX0(apa_enable_12));
  i3706_SLICE_38 \i3706/SLICE_38 ( .D1(key_out_4), .C1(key_out_11), 
    .B1(key_out_10), .A1(n4088), .D0(key_out_4), .C0(key_out_11), 
    .B0(key_out_10), .A0(n4088), .M0(key_out_5), .OFX0(n4113));
  i3704_SLICE_39 \i3704/SLICE_39 ( .D1(key_out_6), .C1(key_out_11), 
    .B1(key_out_10), .A1(n3808), .D0(key_out_6), .C0(key_out_11), 
    .B0(key_out_10), .A0(n3808), .M0(key_out_9), .OFX0(n4110));
  SLICE_40 SLICE_40( .D1(n2200), .C1(key_out_9), .B1(n302), .A1(n3835), 
    .D0(key_out_8), .C0(key_out_7), .B0(key_out_6), .A0(key_out_9), .F0(n302), 
    .F1(n262));
  SLICE_41 SLICE_41( .D1(n3777), .C1(n4094), .B1(n3788), .A1(n4110), 
    .D0(n3741), .C0(n3790), .B0(key_out_8), .A0(n4094), .M1(COL_c_3), 
    .M0(COL_c_2), .CE(key_out_15__N_63), .CLK(apa), .F0(n3954), .Q0(key_out_2), 
    .F1(n3790), .Q1(key_out_3));
  SLICE_42 SLICE_42( .D1(n3832), .C1(n3794), .B1(n2328), .A1(a_to_g2_c_3), 
    .D0(n4104), .C0(n4_adj_4), .B0(n3465), .A0(key_out_0), .F0(n3832), 
    .F1(n229));
  SLICE_43 SLICE_43( .D1(key_out_13), .C1(key_out_12), .B1(key_out_10), 
    .A1(key_out_11), .D0(n4125), .C0(n4090), .B0(n3803), .A0(n3805), 
    .F0(n3465), .F1(n4090));
  SLICE_44 SLICE_44( .D1(n4090), .C1(n3805), .B1(n4054), .A1(n204), 
    .C0(key_out_1), .B0(key_out_2), .A0(n213), .F0(n4_adj_4), .F1(n213));
  SLICE_45 SLICE_45( .B1(key_out_15), .A1(key_out_14), .D0(n4104), 
    .C0(key_out_2), .B0(key_out_0), .A0(key_out_1), .F0(n3803), .F1(n4104));
  SLICE_46 SLICE_46( .D1(n234), .C1(n4103), .B1(key_out_4), .A1(key_out_5), 
    .D0(key_out_13), .C0(key_out_12), .B0(key_out_15), .A0(key_out_14), 
    .F0(n234), .F1(n1153));
  SLICE_47 SLICE_47( .D1(n4101), .C1(n271), .B1(n4103), .A1(n4088), 
    .D0(key_out_1), .C0(key_out_0), .B0(key_out_3), .A0(key_out_2), .F0(n271), 
    .F1(n3464));
  SLICE_48 SLICE_48( .D1(key_out_13), .C1(key_out_12), .B1(key_out_15), 
    .A1(key_out_14), .D0(n4088), .C0(n234), .B0(key_out_1), .A0(key_out_0), 
    .F0(n264), .F1(n4088));
  SLICE_49 SLICE_49( .C1(key_out_8), .B1(key_out_6), .A1(key_out_7), 
    .D0(key_out_3), .C0(key_out_1), .B0(n2200), .A0(n4078), .F0(n2350), 
    .F1(n2200));
  SLICE_50 SLICE_50( .B1(key_out_4), .A1(key_out_5), .D0(n4101), 
    .C0(key_out_9), .B0(n4089), .A0(key_out_1), .F0(n4079), .F1(n4101));
  SLICE_51 SLICE_51( .D1(n4103), .C1(n4104), .B1(key_out_12), .A1(key_out_13), 
    .D0(n4101), .C0(n4085), .B0(n4089), .A0(key_out_1), .F0(n4080), .F1(n4085));
  SLICE_52 SLICE_52( .D1(key_out_7), .C1(n3471), .B1(n4091), .A1(n3464), 
    .C0(key_out_8), .B0(key_out_6), .A0(key_out_9), .F0(n4091), .F1(n249));
  SLICE_53 SLICE_53( .B1(key_out_6), .A1(key_out_7), .D0(n4089), 
    .C0(key_out_8), .B0(n4078), .A0(n4105), .F0(n3849), .F1(n4105));
  SLICE_54 SLICE_54( .D1(key_out_0), .C1(n2350), .B1(key_out_2), .A1(n1263), 
    .D0(n4_adj_8), .C0(key_out_8), .B0(n2348), .A0(n33), .F0(n4_adj_3), 
    .F1(n33));
  SLICE_55 SLICE_55( .C1(key_out_8), .B1(key_out_6), .A1(key_out_9), 
    .D0(n4080), .C0(key_out_7), .B0(n5), .A0(a_to_g2_c_2), .F0(n2348), .F1(n5));
  SLICE_56 SLICE_56( .D1(n4104), .C1(n4102), .B1(key_out_0), .A1(key_out_1), 
    .D0(n3788), .C0(n177), .B0(key_out_6), .A0(n3743), .F0(n4_adj_8), 
    .F1(n3788));
  SLICE_57 SLICE_57( .D1(n4101), .C1(n4095), .B1(n4103), .A1(n264), 
    .C0(key_out_7), .B0(n3741), .A0(key_out_9), .F0(n3743), .F1(n3741));
  SLICE_58 SLICE_58( .D1(n4074), .C1(n4100), .B1(key_out_3), .A1(n1199), 
    .C0(n3957), .B0(n2184), .A0(n2170), .M1(COL_c_3), .M0(COL_c_2), 
    .CE(key_out_15__N_53), .CLK(apa), .F0(n3958), .Q0(key_out_10), .F1(n2184), 
    .Q1(key_out_11));
  SLICE_59 SLICE_59( .B1(key_out_10), .A1(key_out_11), .D0(n4104), .C0(n4103), 
    .B0(n4083), .A0(key_out_9), .F0(n4071), .F1(n4103));
  SLICE_60 SLICE_60( .D1(n4099), .C1(n4084), .B1(n4077), .A1(n3991), 
    .D0(key_out_9), .C0(n2200), .B0(n4104), .A0(n4090), .F0(n4077), .F1(n3781));
  SLICE_61 SLICE_61( .D1(n3771), .C1(key_out_6), .B1(n4070), .A1(key_out_13), 
    .D0(n4103), .C0(key_out_8), .B0(n4104), .A0(n4079), .F0(n4070), .F1(n1199));
  SLICE_62 SLICE_62( .B1(n1136), .A1(apa_enable_5), .D0(BTN_cache_0), 
    .C0(n4_adj_7), .B0(n6_adj_1), .A0(button_four_c_0), .F0(apa_enable_5), 
    .F1(n4082));
  SLICE_63 SLICE_63( .C1(key_out_10), .B1(n3477), .A1(key_out_11), .D0(n4102), 
    .C0(n2200), .B0(n4104), .A0(n4079), .F0(n3477), .F1(n1263));
  SLICE_64 SLICE_64( .D1(LED_get_2), .C1(LED_get_0), .B1(LED_get_4), 
    .A1(n3845), .B0(apa_enable_5), .A0(n1136), .M1(COL_c_3), .M0(COL_c_2), 
    .CE(key_out_15__N_58), .CLK(apa), .F0(n386), .Q0(key_out_6), .F1(n1136), 
    .Q1(key_out_7));
  SLICE_65 SLICE_65( .B1(key_out_0), .A1(key_out_1), .D0(n4096), .C0(n4113), 
    .B0(n4095), .A0(n1153), .F0(n3471), .F1(n4096));
  SLICE_66 SLICE_66( .C1(n3990), .B1(key_out_4), .A1(key_out_5), 
    .D0(key_out_0), .C0(key_out_3), .B0(key_out_2), .A0(key_out_1), 
    .M1(COL_c_1), .M0(COL_c_0), .CE(key_out_15__N_63), .CLK(apa), .F0(n3990), 
    .Q0(key_out_0), .F1(n3991), .Q1(key_out_1));
  SLICE_67 SLICE_67( .D1(n1265), .C1(n1202), .B1(n1262), .A1(n16), .D0(n3824), 
    .C0(n3739), .B0(key_out_8), .A0(n3781), .F0(n16), .F1(n13));
  SLICE_68 SLICE_68( .B1(key_out_12), .A1(key_out_7), .D0(n3771), 
    .C0(key_out_6), .B0(n4071), .A0(key_out_13), .F0(n3739), .F1(n3771));
  SLICE_69 SLICE_69( .D1(n4101), .C1(n4105), .B1(n4085), .A1(key_out_9), 
    .D0(n4075), .C0(key_out_1), .B0(n4100), .A0(key_out_3), .F0(n3824), 
    .F1(n4075));
  SLICE_70 SLICE_70( .B1(key_out_0), .A1(key_out_2), .D0(key_out_1), 
    .C0(n4101), .B0(n4100), .A0(key_out_3), .F0(n4083), .F1(n4100));
  SLICE_71 SLICE_71( .C1(key_out_14), .B1(n3822), .A1(key_out_15), .D0(n1266), 
    .C0(n12), .B0(n1263), .A0(n13), .F0(n3755), .F1(n1266));
  SLICE_72 SLICE_72( .D1(n4101), .C1(n4084), .B1(n2200), .A1(n4085), 
    .D0(n3877), .C0(n4_adj_11), .B0(key_out_9), .A0(n1199), .F0(n12), 
    .F1(n3877));
  SLICE_73 SLICE_73( .D1(n4105), .C1(n4089), .B1(n4081), .A1(n4101), 
    .D0(key_out_8), .C0(n4072), .B0(key_out_1), .A0(n3486), .F0(n4_adj_11), 
    .F1(n4072));
  SLICE_74 SLICE_74( .D1(n2184), .C1(n3865), .B1(n1266), .A1(key_out_5), 
    .D0(n4084), .C0(key_out_4), .B0(n4081), .A0(n2200), .F0(n3865), .F1(n3817));
  SLICE_75 SLICE_75( .D1(key_out_6), .C1(key_out_13), .B1(n4071), 
    .A1(key_out_8), .C0(key_out_12), .B0(n3736), .A0(key_out_7), .F0(n3486), 
    .F1(n3736));
  SLICE_76 SLICE_76( .B1(key_out_12), .A1(key_out_13), .D0(n4104), 
    .C0(key_out_9), .B0(n4102), .A0(n4103), .M1(COL_c_1), .M0(COL_c_0), 
    .CE(key_out_15__N_58), .CLK(apa), .F0(n4081), .Q0(key_out_4), .F1(n4102), 
    .Q1(key_out_5));
  SLICE_77 SLICE_77( .D1(BTN_cache_1), .C1(BTN_cache_0), .B1(BTN_cache_3), 
    .A1(BTN_cache_2), .D0(n4), .C0(n4082), .B0(num_cnt_0), .A0(n1546), 
    .M1(button_four_c_1), .M0(button_four_c_0), .CE(apa_enable_5), .CLK(apa), 
    .F0(apa_enable_10), .Q0(BTN_cache_0), .F1(n1546), .Q1(BTN_cache_1));
  SLICE_78 SLICE_78( .C1(key_out_6), .B1(key_out_7), .A1(key_out_8), 
    .D0(n3832), .C0(n3794), .B0(n2328), .A0(a_to_g2_c_1), .F0(n199), 
    .F1(n3794));
  SLICE_79 SLICE_79( .D1(clk_cnt_6), .C1(clk_cnt_9), .B1(clk_cnt_4), 
    .A1(clk_cnt_10), .D0(n6_adj_9), .C0(n2264), .B0(n3879), .A0(clk_cnt_5), 
    .F0(clk_c_enable_1), .F1(n2264));
  SLICE_80 SLICE_80( .D1(clk_cnt_7), .C1(clk_cnt_3), .B1(clk_cnt_0), 
    .A1(clk_cnt_11), .D0(clk_cnt_13), .C0(clk_cnt_2), .B0(n3875), 
    .A0(clk_cnt_1), .F0(n3879), .F1(n3875));
  SLICE_81 SLICE_81( .D1(n1136), .C1(n1546), .B1(n4087), .A1(apa_enable_5), 
    .C0(num_cnt_2), .B0(num_cnt_1), .A0(num_cnt_0), .F0(n4087), 
    .F1(apa_enable_13));
  SLICE_82 SLICE_82( .D1(n8), .C1(n12_adj_6), .B1(n3873), .A1(clk_cnt_7), 
    .D0(num_cnt_2), .C0(apa_N_10), .B0(num_cnt_1), .A0(num_cnt_0), 
    .M1(COL_c_1), .M0(COL_c_0), .CE(key_out_15__N_53), .CLK(apa), .F0(n606), 
    .Q0(key_out_8), .F1(apa_N_10), .Q1(key_out_9));
  SLICE_83 SLICE_83( .C1(key_out_14), .B1(n3822), .A1(key_out_15), .D0(n2200), 
    .C0(n4090), .B0(n4083), .A0(key_out_9), .F0(n3822), .F1(n1265));
  SLICE_84 SLICE_84( .C1(n3791), .B1(n2184), .A1(n2170), .D0(n3849), 
    .C0(key_out_1), .B0(n1262), .A0(n33), .F0(n3791), .F1(n3732));
  SLICE_85 SLICE_85( .D1(key_out_9), .C1(n4085), .B1(n4084), .A1(n4101), 
    .D0(key_out_3), .C0(key_out_1), .B0(key_out_0), .A0(key_out_2), .F0(n4084), 
    .F1(n6));
  SLICE_86 SLICE_86( .D1(key_out_4), .C1(n4073), .B1(key_out_5), .A1(n1265), 
    .D0(n2200), .C0(n4084), .B0(n4085), .A0(key_out_9), .F0(n4073), .F1(n2170));
  SLICE_87 SLICE_87( .C1(key_out_12), .B1(n3736), .A1(key_out_7), 
    .D0(key_out_0), .C0(n2350), .B0(key_out_2), .A0(n1202), .F0(n3785), 
    .F1(n1202));
  SLICE_88 SLICE_88( .D1(n4085), .C1(n4106), .B1(n4084), .A1(n4101), 
    .C0(key_out_8), .B0(key_out_6), .A0(key_out_7), .M1(button_four_c_3), 
    .M0(button_four_c_2), .CE(apa_enable_5), .CLK(apa), .F0(n4106), 
    .Q0(BTN_cache_2), .F1(n3835), .Q1(BTN_cache_3));
  SLICE_89 SLICE_89( .D1(key_out_4), .C1(key_out_3), .B1(key_out_9), 
    .A1(key_out_5), .D0(key_out_3), .C0(key_out_5), .B0(key_out_4), 
    .A0(key_out_9), .F0(n3805), .F1(n4054));
  SLICE_90 SLICE_90( .C1(num_cnt_1), .B1(num_cnt_0), .A1(num_cnt_2), 
    .C0(num_cnt_2), .B0(num_cnt_0), .A0(num_cnt_1), .F0(key_out_15__N_58), 
    .F1(key_out_15__N_53));
  SLICE_91 SLICE_91( .C1(num_cnt_1), .B1(num_cnt_0), .A1(num_cnt_2), 
    .C0(num_cnt_2), .B0(num_cnt_1), .A0(num_cnt_0), .F0(key_out_15__N_48), 
    .F1(key_out_15__N_63));
  SLICE_92 SLICE_92( .C1(key_out_10), .B1(n3477), .A1(key_out_11), 
    .D0(key_out_11), .C0(key_out_10), .B0(key_out_13), .A0(key_out_12), 
    .F0(n204), .F1(n1262));
  SLICE_93 SLICE_93( .D1(key_out_3), .C1(key_out_2), .B1(key_out_4), 
    .A1(key_out_5), .B0(key_out_2), .A0(key_out_3), .F0(n4095), .F1(n3808));
  SLICE_94 SLICE_94( .D1(clk_cnt_8), .C1(clk_cnt_12), .B1(clk_cnt_5), 
    .A1(n2264), .B0(clk_cnt_8), .A0(clk_cnt_12), .F0(n6_adj_9), .F1(n3873));
  SLICE_95 SLICE_95( .C1(n262), .B1(n249), .A1(a_to_g2_c_6), .D0(n262), 
    .C0(n249), .B0(n4069), .A0(a_to_g2_c_4), .F0(n4_adj_10), .F1(n243_adj_5));
  SLICE_96 SLICE_96( .D1(n6), .C1(key_out_8), .B1(key_out_6), .A1(key_out_7), 
    .B0(key_out_6), .A0(key_out_9), .F0(n4094), .F1(n2328));
  SLICE_97 SLICE_97( .D1(key_out_9), .C1(n4101), .B1(n4104), .A1(n4090), 
    .D0(key_out_7), .C0(n3777), .B0(key_out_9), .A0(n4122), .F0(n177), 
    .F1(n4078));
  SLICE_98 SLICE_98( .D1(n2200), .C1(key_out_1), .B1(n4081), .A1(n4101), 
    .C0(n262), .B0(n249), .A0(a_to_g2_c_5), .F0(n243), .F1(n4074));
  SLICE_99 SLICE_99( .B1(BTN_cache_3), .A1(button_four_c_3), .D0(BTN_cache_1), 
    .C0(BTN_cache_2), .B0(button_four_c_1), .A0(button_four_c_2), 
    .F0(n6_adj_1), .F1(n4_adj_7));
  SLICE_100 SLICE_100( .B1(key_out_5), .A1(key_out_4), .C0(key_out_3), 
    .B0(key_out_0), .A0(key_out_2), .F0(n4089), .F1(n4099));
  ROW_2_ \ROW[2]_I ( .PADDO(ROW_c_2), .ROW2(ROW[2]));
  ROW_3_ \ROW[3]_I ( .PADDO(ROW_c_3), .ROW3(ROW[3]));
  ROW_1_ \ROW[1]_I ( .PADDO(ROW_c_1), .ROW1(ROW[1]));
  ROW_0_ \ROW[0]_I ( .PADDO(ROW_c_0), .ROW0(ROW[0]));
  a_to_g_6_ \a_to_g[6]_I ( .PADDO(a_to_g_c_6), .atog6(a_to_g[6]));
  a_to_g_5_ \a_to_g[5]_I ( .PADDO(a_to_g_c_5), .atog5(a_to_g[5]));
  a_to_g_4_ \a_to_g[4]_I ( .PADDO(a_to_g_c_5), .atog4(a_to_g[4]));
  a_to_g_3_ \a_to_g[3]_I ( .PADDO(a_to_g_c_6), .atog3(a_to_g[3]));
  a_to_g_2_ \a_to_g[2]_I ( .PADDO(a_to_g_c_6), .atog2(a_to_g[2]));
  a_to_g_1_ \a_to_g[1]_I ( .PADDO(a_to_g_c_6), .atog1(a_to_g[1]));
  a_to_g_0_ \a_to_g[0]_I ( .PADDO(GND_net), .atog0(a_to_g[0]));
  a_to_g2_6_ \a_to_g2[6]_I ( .PADDO(a_to_g2_c_6), .atog26(a_to_g2[6]));
  a_to_g2_5_ \a_to_g2[5]_I ( .PADDO(a_to_g2_c_5), .atog25(a_to_g2[5]));
  a_to_g2_4_ \a_to_g2[4]_I ( .PADDO(a_to_g2_c_4), .atog24(a_to_g2[4]));
  a_to_g2_3_ \a_to_g2[3]_I ( .PADDO(a_to_g2_c_3), .atog23(a_to_g2[3]));
  a_to_g2_2_ \a_to_g2[2]_I ( .PADDO(a_to_g2_c_2), .atog22(a_to_g2[2]));
  a_to_g2_1_ \a_to_g2[1]_I ( .PADDO(a_to_g2_c_1), .atog21(a_to_g2[1]));
  a_to_g2_0_ \a_to_g2[0]_I ( .PADDO(a_to_g2_c_0), .atog20(a_to_g2[0]));
  seg seg_I( .PADDO(GND_net), .seg(seg));
  seg2 seg2_I( .PADDO(GND_net), .seg2(seg2));
  COL_3_ \COL[3]_I ( .PADDI(COL_c_3), .COL3(COL[3]));
  COL_2_ \COL[2]_I ( .PADDI(COL_c_2), .COL2(COL[2]));
  COL_1_ \COL[1]_I ( .PADDI(COL_c_1), .COL1(COL[1]));
  COL_0_ \COL[0]_I ( .PADDI(COL_c_0), .COL0(COL[0]));
  button_four_3_ \button_four[3]_I ( .PADDI(button_four_c_3), 
    .buttonfour3(button_four[3]));
  button_four_2_ \button_four[2]_I ( .PADDI(button_four_c_2), 
    .buttonfour2(button_four[2]));
  button_four_1_ \button_four[1]_I ( .PADDI(button_four_c_1), 
    .buttonfour1(button_four[1]));
  button_four_0_ \button_four[0]_I ( .PADDI(button_four_c_0), 
    .buttonfour0(button_four[0]));
  clk clk_I( .PADDI(clk_c), .clk(clk));
  VHI VHI_INST( .Z(VCCI));
  PUR PUR_INST( .PUR(VCCI));
  GSR GSR_INST( .GSR(VCCI));
endmodule

module SLICE_0 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre clk_cnt_299__i8( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre clk_cnt_299__i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 clk_cnt_299_add_4_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_1 ( input A0, DI0, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre clk_cnt_299__i13( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20001 clk_cnt_299_add_4_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_2 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre clk_cnt_299__i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre clk_cnt_299__i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 clk_cnt_299_add_4_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_3 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre clk_cnt_299__i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre clk_cnt_299__i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 clk_cnt_299_add_4_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_4 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre clk_cnt_299__i12( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre clk_cnt_299__i11( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 clk_cnt_299_add_4_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_5 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre clk_cnt_299__i6( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre clk_cnt_299__i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 clk_cnt_299_add_4_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_6 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre clk_cnt_299__i10( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre clk_cnt_299__i9( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 clk_cnt_299_add_4_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_7 ( input A1, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre clk_cnt_299__i0( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20002 clk_cnt_299_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_10 ( input B1, A1, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 i3127_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 i3125_1_lut( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0004 LED_get_300__i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0004 LED_get_300__i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0004 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module SLICE_11 ( input D1, C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40005 i3141_2_lut_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40006 i3134_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0004 LED_get_300__i3( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0004 LED_get_300__i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h78F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7878) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_12 ( input B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40007 i3130_2_lut_rep_58( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 i3148_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0004 LED_get_300__i4( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7F80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_13 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40009 i1_2_lut_adj_26( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 i3598_2_lut_rep_48( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0004 ROW_i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0004 ROW_i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7777) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module SLICE_14 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40011 i1_2_lut_rep_44( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 i1_2_lut_adj_28( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0004 ROW_i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0004 ROW_i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_15 ( input C1, B1, A1, C0, B0, A0, DI0, M0, CE, CLK, output OFX0, 
    Q0 );
  wire   GNDI, \SLICE_15/SLICE_15_K1_H1 , \SLICE_15/i3637/GATE_H0 , VCCI, 
         DI0_dly, CLK_dly, CE_dly;

  lut40013 SLICE_15_K1( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\SLICE_15/SLICE_15_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 \i3637/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\SLICE_15/i3637/GATE_H0 ));
  vmuxregsre a_to_g2_i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_15_K0K1MUX( .D0(\SLICE_15/i3637/GATE_H0 ), 
    .D1(\SLICE_15/SLICE_15_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7F7F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module SLICE_16 ( input B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40007 i1_2_lut_rep_20( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40015 mux_74_i2_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre a_to_g2_i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h353F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_17 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40016 mux_74_i4_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40017 i1283_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre a_to_g2_i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre a_to_g2_i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40016 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC5CF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40017 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h535F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_18 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40018 i1_3_lut_rep_43( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 mux_74_i5_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre a_to_g2_i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40018 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_19 ( input B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40010 i3608_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40019 i3610_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre a_to_g2_i6( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFBF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_20 ( input C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40020 i1148_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40016 mux_74_i7_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre a_to_g2_i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40020 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7070) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_21 ( input D1, C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40021 i2_2_lut_3_lut_3_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(F1));
  lut40022 i1937_2_lut_rep_19_2_lut_3_lut_3_lut( .A(A0), .B(B0), .C(C0), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre a_to_g_i7( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre a_to_g_i6( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0302) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40022 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3232) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_22 ( input DI0, CE, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40023 m1_lut( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0004 apa_89( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_29 ( input B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40024 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40007 i3553_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre key_out_i13( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre key_out_i12( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_30 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40011 i1_2_lut_adj_42( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40025 i1_2_lut_adj_30( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre key_out_i15( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre key_out_i14( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40025 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_31 ( input D1, C1, B1, A1, B0, A0, DI0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40026 i5_4_lut_adj_39( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4 i3593_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0004 num_cnt__i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_32 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40006 i15_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 i238_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0004 num_cnt__i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0004 num_cnt__i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module i3633_SLICE_33 ( input B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i3633/SLICE_33/i3633/SLICE_33_K1_H1 , 
         \i3633/SLICE_33/i3633/GATE_H0 ;

  lut40027 \i3633/SLICE_33_K1 ( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(\i3633/SLICE_33/i3633/SLICE_33_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40028 \i3633/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i3633/SLICE_33/i3633/GATE_H0 ));
  selmux2 \i3633/SLICE_33_K0K1MUX ( .D0(\i3633/SLICE_33/i3633/GATE_H0 ), 
    .D1(\i3633/SLICE_33/i3633/SLICE_33_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40028 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i3714_SLICE_34 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i3714/SLICE_34/i3714/SLICE_34_K1_H1 , \i3714/SLICE_34/i3714/GATE_H0 ;

  lut40028 \i3714/SLICE_34_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i3714/SLICE_34/i3714/SLICE_34_K1_H1 ));
  lut40029 \i3714/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i3714/SLICE_34/i3714/GATE_H0 ));
  selmux2 \i3714/SLICE_34_K0K1MUX ( .D0(\i3714/SLICE_34/i3714/GATE_H0 ), 
    .D1(\i3714/SLICE_34/i3714/SLICE_34_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40029 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i3712_SLICE_35 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i3712/SLICE_35/i3712/SLICE_35_K1_H1 , \i3712/SLICE_35/i3712/GATE_H0 ;

  lut40030 \i3712/SLICE_35_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i3712/SLICE_35/i3712/SLICE_35_K1_H1 ));
  lut40029 \i3712/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i3712/SLICE_35/i3712/GATE_H0 ));
  selmux2 \i3712/SLICE_35_K0K1MUX ( .D0(\i3712/SLICE_35/i3712/GATE_H0 ), 
    .D1(\i3712/SLICE_35/i3712/SLICE_35_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i3710_SLICE_36 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i3710/SLICE_36/i3710/SLICE_36_K1_H1 , \i3710/SLICE_36/i3710/GATE_H0 ;

  lut40030 \i3710/SLICE_36_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i3710/SLICE_36/i3710/SLICE_36_K1_H1 ));
  lut40029 \i3710/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i3710/SLICE_36/i3710/GATE_H0 ));
  selmux2 \i3710/SLICE_36_K0K1MUX ( .D0(\i3710/SLICE_36/i3710/GATE_H0 ), 
    .D1(\i3710/SLICE_36/i3710/SLICE_36_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i3708_SLICE_37 ( input C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   GNDI, \i3708/SLICE_37/i3708/SLICE_37_K1_H1 , 
         \i3708/SLICE_37/i3708/GATE_H0 ;

  lut40031 \i3708/SLICE_37_K1 ( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(\i3708/SLICE_37/i3708/SLICE_37_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 \i3708/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i3708/SLICE_37/i3708/GATE_H0 ));
  selmux2 \i3708/SLICE_37_K0K1MUX ( .D0(\i3708/SLICE_37/i3708/GATE_H0 ), 
    .D1(\i3708/SLICE_37/i3708/SLICE_37_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFE04) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module i3706_SLICE_38 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i3706/SLICE_38/i3706/SLICE_38_K1_H1 , \i3706/SLICE_38/i3706/GATE_H0 ;

  lut40030 \i3706/SLICE_38_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i3706/SLICE_38/i3706/SLICE_38_K1_H1 ));
  lut40029 \i3706/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i3706/SLICE_38/i3706/GATE_H0 ));
  selmux2 \i3706/SLICE_38_K0K1MUX ( .D0(\i3706/SLICE_38/i3706/GATE_H0 ), 
    .D1(\i3706/SLICE_38/i3706/SLICE_38_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module i3704_SLICE_39 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i3704/SLICE_39/i3704/SLICE_39_K1_H1 , \i3704/SLICE_39/i3704/GATE_H0 ;

  lut40030 \i3704/SLICE_39_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i3704/SLICE_39/i3704/SLICE_39_K1_H1 ));
  lut40029 \i3704/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i3704/SLICE_39/i3704/GATE_H0 ));
  selmux2 \i3704/SLICE_39_K0K1MUX ( .D0(\i3704/SLICE_39/i3704/GATE_H0 ), 
    .D1(\i3704/SLICE_39/i3704/SLICE_39_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_40 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40033 i3_4_lut_adj_27( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40034 i295_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDDF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40034 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8303) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_41 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40035 i1_4_lut_adj_29( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40036 n3764_bdd_4_lut_3653( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre key_out_i3( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre key_out_i2( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40036 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h373F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_42 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40037 i1_4_lut_adj_50( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40038 i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF151) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40038 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_43 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 i1_2_lut_rep_41_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40040 i2_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40039 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_44 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40041 i1_4_lut_adj_3( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 i1_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECA0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_45 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40007 i1_2_lut_rep_55( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40043 i1_4_lut_adj_1( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_46 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 i1_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 i1_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_47 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 i2_4_lut_adj_19( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 i1_4_lut_4_lut_adj_2( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_48 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 i1_2_lut_rep_39_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40045 i1_4_lut_4_lut_adj_4( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE680) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_49 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 i1908_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40039 i2058_2_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_50 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40007 i1_2_lut_rep_52( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40039 i1_2_lut_rep_30_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_51 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 i1_2_lut_rep_36_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 i1_2_lut_rep_31_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_52 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40046 i2_4_lut_adj_18( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 i1_2_lut_rep_42_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_53 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40007 i1876_2_lut_rep_56( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40039 i3557_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_54 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40047 i1884_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40048 i1_4_lut_adj_9( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAA2A) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_55 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40049 i1_3_lut_adj_14( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40050 i2056_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2828) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_56 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 i1_2_lut_3_lut_4_lut_adj_34( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40035 i1_4_lut_adj_10( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_57 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40039 i2_4_lut_adj_16( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40042 i1_3_lut_adj_11( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_58 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40051 i1892_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 n365_bdd_2_lut_3636_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre key_out_i11( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre key_out_i10( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8AAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_59 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40007 i1_2_lut_rep_54( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40039 i1_2_lut_rep_22_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_60 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40035 i1_4_lut_adj_23( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 i1_2_lut_rep_28_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_61 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40053 i2_4_lut_adj_48( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 i1_2_lut_rep_21_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_62 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40054 i3605_2_lut_rep_33_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40055 i3_4_lut_rep_37( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_63 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 i2_3_lut_adj_44( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40039 i2_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_64 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40056 i4_4_lut_adj_46( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40012 i1_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre key_out_i7( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre key_out_i6( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_65 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40007 i1_2_lut_rep_47( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40046 i2_4_lut_adj_20( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_66 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40042 n364_bdd_2_lut_3667_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40057 n2202_bdd_4_lut_3664( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre key_out_i1( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre key_out_i0( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_67 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40058 i5_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40059 i1_4_lut_adj_22( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_68 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40007 i1_2_lut_adj_58( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40060 i2_4_lut_adj_24( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_69 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 i1_2_lut_rep_26_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40060 i3_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_70 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40007 i1906_2_lut_rep_51( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40039 i1_2_lut_rep_34_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_71 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40018 i2_3_lut_adj_53( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40039 i7_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_72 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 i3585_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40061 i4_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h80A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_73 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 i1_2_lut_rep_23_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 i1_4_lut_adj_25( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_74 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40062 i2_4_lut_adj_52( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 i3573_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8C00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_75 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40039 i2_3_lut_4_lut_adj_33( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 i2_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_76 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40007 i1_2_lut_rep_53( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40039 i1998_2_lut_rep_32_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(F0));
  vmuxregsre key_out_i5( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre key_out_i4( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_77 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40044 BTN_cache_2__bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 i12_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre BTN_cache_i0_i1( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre BTN_cache_i0_i0( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA3A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_78 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 i1_2_lut_3_lut_adj_55( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 i1_4_lut_adj_31( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_79 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 i3_4_lut_adj_57( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 i3624_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_80 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 i3583_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 i3587_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_81 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40065 i1_2_lut_3_lut_4_lut_3_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), 
    .D(D1), .Z(F1));
  lut40066 i1_2_lut_rep_38_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40065 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCCD8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_82 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40067 i3621_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40068 i1_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre key_out_i9( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre key_out_i8( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0004) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_83 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 i2_3_lut_adj_51( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40039 i2_3_lut_4_lut_adj_38( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_84 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40042 i1_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40069 i1_4_lut_adj_40( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_85 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 i2_2_lut_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 i1_2_lut_rep_35_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_86 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40047 i1878_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 i1_2_lut_rep_24_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_87 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40052 i2_3_lut_adj_49( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 i1_4_lut_adj_47( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_88 ( input D1, C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40039 i3543_2_lut_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40070 i1952_2_lut_3_lut_rep_57( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre BTN_cache_i0_i3( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre BTN_cache_i0_i2( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF8F8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_89 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40044 key_out_5__bdd_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 i1_4_lut_adj_6( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_90 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40071 i3618_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40072 i3615_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_91 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40073 i3613_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40074 i3629_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_92 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40018 i2_3_lut_adj_41( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40044 i1_4_lut_4_lut_adj_5( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_93 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40039 i1_2_lut_3_lut_4_lut_adj_43( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40007 i1_2_lut_rep_46( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_94 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40039 i3581_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40011 i1_2_lut_adj_32( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_95 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40075 i1_3_lut_adj_56( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40076 i1_4_lut_adj_36( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDCDC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC4C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_96 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40077 i3_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40007 i1_2_lut_rep_45( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hE800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_97 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40039 i1_2_lut_rep_29_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40050 i1_4_lut_adj_12( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_98 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40039 i2_3_lut_rep_25_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40075 i1_3_lut_adj_45( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_99 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut4 button_four_3__I_0_i4_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40078 i2_4_lut_adj_54( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7BDE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_100 ( input B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut4 i333_2_lut_rep_50( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40042 i1_2_lut_rep_40_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ROW_2_ ( input PADDO, output ROW2 );
  wire   GNDI;

  xo2iobuf ROW_pad_2( .I(PADDO), .T(GNDI), .PAD(ROW2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ROW2) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module ROW_3_ ( input PADDO, output ROW3 );
  wire   GNDI;

  xo2iobuf ROW_pad_3( .I(PADDO), .T(GNDI), .PAD(ROW3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ROW3) = (0:0:0,0:0:0);
  endspecify

endmodule

module ROW_1_ ( input PADDO, output ROW1 );
  wire   GNDI;

  xo2iobuf ROW_pad_1( .I(PADDO), .T(GNDI), .PAD(ROW1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ROW1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ROW_0_ ( input PADDO, output ROW0 );
  wire   GNDI;

  xo2iobuf ROW_pad_0( .I(PADDO), .T(GNDI), .PAD(ROW0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ROW0) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_6_ ( input PADDO, output atog6 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_6( .I(PADDO), .T(GNDI), .PAD(atog6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog6) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_5_ ( input PADDO, output atog5 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_5( .I(PADDO), .T(GNDI), .PAD(atog5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog5) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_4_ ( input PADDO, output atog4 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_4( .I(PADDO), .T(GNDI), .PAD(atog4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog4) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_3_ ( input PADDO, output atog3 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_3( .I(PADDO), .T(GNDI), .PAD(atog3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog3) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_2_ ( input PADDO, output atog2 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_2( .I(PADDO), .T(GNDI), .PAD(atog2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog2) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_1_ ( input PADDO, output atog1 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_1( .I(PADDO), .T(GNDI), .PAD(atog1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog1) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_0_ ( input PADDO, output atog0 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_0( .I(PADDO), .T(GNDI), .PAD(atog0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog0) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g2_6_ ( input PADDO, output atog26 );
  wire   GNDI;

  xo2iobuf a_to_g2_pad_6( .I(PADDO), .T(GNDI), .PAD(atog26));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog26) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g2_5_ ( input PADDO, output atog25 );
  wire   GNDI;

  xo2iobuf a_to_g2_pad_5( .I(PADDO), .T(GNDI), .PAD(atog25));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog25) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g2_4_ ( input PADDO, output atog24 );
  wire   GNDI;

  xo2iobuf a_to_g2_pad_4( .I(PADDO), .T(GNDI), .PAD(atog24));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog24) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g2_3_ ( input PADDO, output atog23 );
  wire   GNDI;

  xo2iobuf a_to_g2_pad_3( .I(PADDO), .T(GNDI), .PAD(atog23));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog23) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g2_2_ ( input PADDO, output atog22 );
  wire   GNDI;

  xo2iobuf a_to_g2_pad_2( .I(PADDO), .T(GNDI), .PAD(atog22));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog22) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g2_1_ ( input PADDO, output atog21 );
  wire   GNDI;

  xo2iobuf a_to_g2_pad_1( .I(PADDO), .T(GNDI), .PAD(atog21));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog21) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g2_0_ ( input PADDO, output atog20 );
  wire   GNDI;

  xo2iobuf a_to_g2_pad_0( .I(PADDO), .T(GNDI), .PAD(atog20));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog20) = (0:0:0,0:0:0);
  endspecify

endmodule

module seg ( input PADDO, output seg );
  wire   GNDI;

  xo2iobuf seg_pad( .I(PADDO), .T(GNDI), .PAD(seg));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => seg) = (0:0:0,0:0:0);
  endspecify

endmodule

module seg2 ( input PADDO, output seg2 );
  wire   GNDI;

  xo2iobuf seg2_pad( .I(PADDO), .T(GNDI), .PAD(seg2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => seg2) = (0:0:0,0:0:0);
  endspecify

endmodule

module COL_3_ ( output PADDI, input COL3 );

  xo2iobuf0079 COL_pad_3( .Z(PADDI), .PAD(COL3));

  specify
    (COL3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge COL3, 0:0:0);
    $width (negedge COL3, 0:0:0);
  endspecify

endmodule

module xo2iobuf0079 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module COL_2_ ( output PADDI, input COL2 );

  xo2iobuf0079 COL_pad_2( .Z(PADDI), .PAD(COL2));

  specify
    (COL2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge COL2, 0:0:0);
    $width (negedge COL2, 0:0:0);
  endspecify

endmodule

module COL_1_ ( output PADDI, input COL1 );

  xo2iobuf0079 COL_pad_1( .Z(PADDI), .PAD(COL1));

  specify
    (COL1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge COL1, 0:0:0);
    $width (negedge COL1, 0:0:0);
  endspecify

endmodule

module COL_0_ ( output PADDI, input COL0 );

  xo2iobuf0079 COL_pad_0( .Z(PADDI), .PAD(COL0));

  specify
    (COL0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge COL0, 0:0:0);
    $width (negedge COL0, 0:0:0);
  endspecify

endmodule

module button_four_3_ ( output PADDI, input buttonfour3 );

  xo2iobuf0079 button_four_pad_3( .Z(PADDI), .PAD(buttonfour3));

  specify
    (buttonfour3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge buttonfour3, 0:0:0);
    $width (negedge buttonfour3, 0:0:0);
  endspecify

endmodule

module button_four_2_ ( output PADDI, input buttonfour2 );

  xo2iobuf0079 button_four_pad_2( .Z(PADDI), .PAD(buttonfour2));

  specify
    (buttonfour2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge buttonfour2, 0:0:0);
    $width (negedge buttonfour2, 0:0:0);
  endspecify

endmodule

module button_four_1_ ( output PADDI, input buttonfour1 );

  xo2iobuf0079 button_four_pad_1( .Z(PADDI), .PAD(buttonfour1));

  specify
    (buttonfour1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge buttonfour1, 0:0:0);
    $width (negedge buttonfour1, 0:0:0);
  endspecify

endmodule

module button_four_0_ ( output PADDI, input buttonfour0 );

  xo2iobuf0079 button_four_pad_0( .Z(PADDI), .PAD(buttonfour0));

  specify
    (buttonfour0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge buttonfour0, 0:0:0);
    $width (negedge buttonfour0, 0:0:0);
  endspecify

endmodule

module clk ( output PADDI, input clk );

  xo2iobuf0079 clk_pad( .Z(PADDI), .PAD(clk));

  specify
    (clk => PADDI) = (0:0:0,0:0:0);
    $width (posedge clk, 0:0:0);
    $width (negedge clk, 0:0:0);
  endspecify

endmodule
