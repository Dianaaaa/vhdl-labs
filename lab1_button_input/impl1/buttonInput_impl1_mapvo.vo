
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.11.0.396.4

// ldbanno -n Verilog -o buttonInput_impl1_mapvo.vo -w -neg -gui -msgset C:/Users/10352/vhdl-labs/lab1_button_input/promote.xml buttonInput_impl1_map.ncd 
// Netlist created on Tue Nov 17 20:59:36 2020
// Netlist written on Tue Nov 17 20:59:38 2020
// Design is for device LCMXO2-4000HC
// Design is for package CSBGA132
// Design is for performance grade 4

`timescale 1 ns / 1 ps

module Key_Table ( ROW, COL, button_four, a_to_g, led_four, seg, clk );
  input  [3:0] COL;
  input  [3:0] button_four;
  input  clk;
  output [3:0] ROW;
  output [6:0] a_to_g;
  output [3:0] led_four;
  output seg;
  wire   clk_cnt_2, clk_cnt_1, n73, n74, clk_c, n1759, n1760, clk_cnt_12, 
         clk_cnt_11, n63, n64, n1764, n1765, clk_cnt_10, clk_cnt_9, n65, n66, 
         n1763, clk_cnt_0, n75, clk_cnt_8, clk_cnt_7, n67, n68_adj_12, n1762, 
         clk_cnt_13, n62, clk_cnt_6, clk_cnt_5, n69, n70, n1761, clk_cnt_4, 
         clk_cnt_3, n71_adj_13, n72, LED_get_0, LED_get_1, n29, n30, n319, apa, 
         LED_get_2, LED_get_3, n27, n28, LED_get_4, n2277, n26_adj_8, 
         num_cnt_0, num_cnt_1, n2275, n2278, num_cnt_2, ROW_c_0, ROW_c_1, 
         n2273, n2276, ROW_c_2, ROW_c_3, n1959, n10, n2257, n718, n1198, n2061, 
         n2123, a_to_g_6_N_71_1, a_to_g_6_N_71_0, a_to_g_6__N_78, a_to_g_c_0, 
         a_to_g_c_1, n34, key_out_1, n2269, n1188, n1160, n2255, 
         a_to_g_6_N_71_3, a_to_g_6_N_71_2, a_to_g_c_2, a_to_g_c_3, n4_adj_1, 
         n2056, n1947, n2057, a_to_g_6_N_71_5, a_to_g_6_N_71_4, a_to_g_c_4, 
         a_to_g_c_5, n2042, key_out_13, key_out_14, n10_adj_10, n2258, n2120, 
         a_to_g_6_N_71_6, a_to_g_c_6, n2438, clk_c_enable_1, apa_N_10, 
         key_out_2, BTN_cache_1, BTN_cache_0, apa_enable_8, n12_adj_4, 
         led_four_c_0, GND_net, led_four_c_1, key_out_9, key_out_7, 
         BTN_cache_3, BTN_cache_2, n12_adj_9, led_four_c_2, n2064, 
         led_four_c_3, n2089, n359, key_out_15__N_55, n1941, n1945, key_out_5, 
         key_out_6, n2262, n2280, n2279, n2270, key_out_10, n40, key_out_11, 
         key_out_8, n2006, n2285, n2263, n6, key_out_12, COL_c_1, COL_c_0, 
         key_out_15__N_50, n2266, n68, n1998, key_out_15, n4_adj_2, n2040, 
         n2261, n2147, n2, n6_adj_7, button_four_c_0, apa_enable_5, n689, 
         key_out_4, n2271, n2274, key_out_3, n2050, n4_adj_3, n2014, n727, 
         n2023, n1990, n2053, n2016, key_out_0, n2272, n2162, n2256, n2259, 
         n2041, key_out_15__N_45, n4_adj_5, n2054, n2268, n1994, n1984, n706, 
         n2204, n2203, COL_c_3, COL_c_2, n2264, n2265, key_out_15__N_60, n1791, 
         n1844, n12, n18, n2084, button_four_c_3, button_four_c_2, n4, n2026, 
         n1771, n1162, n1999, n1306, n2072, n2022, n2070, n26, n23, n8, 
         n6_adj_6, n2260, n14, n9, n2076, n2037, n2140, n2161, n71, n4_adj_11, 
         button_four_c_1, VCCI;

  SLICE_0 SLICE_0( .A1(clk_cnt_2), .A0(clk_cnt_1), .DI1(n73), .DI0(n74), 
    .CLK(clk_c), .FCI(n1759), .F0(n74), .Q0(clk_cnt_1), .F1(n73), 
    .Q1(clk_cnt_2), .FCO(n1760));
  SLICE_1 SLICE_1( .A1(clk_cnt_12), .A0(clk_cnt_11), .DI1(n63), .DI0(n64), 
    .CLK(clk_c), .FCI(n1764), .F0(n64), .Q0(clk_cnt_11), .F1(n63), 
    .Q1(clk_cnt_12), .FCO(n1765));
  SLICE_2 SLICE_2( .A1(clk_cnt_10), .A0(clk_cnt_9), .DI1(n65), .DI0(n66), 
    .CLK(clk_c), .FCI(n1763), .F0(n66), .Q0(clk_cnt_9), .F1(n65), 
    .Q1(clk_cnt_10), .FCO(n1764));
  SLICE_3 SLICE_3( .A1(clk_cnt_0), .DI1(n75), .CLK(clk_c), .F1(n75), 
    .Q1(clk_cnt_0), .FCO(n1759));
  SLICE_4 SLICE_4( .A1(clk_cnt_8), .A0(clk_cnt_7), .DI1(n67), .DI0(n68_adj_12), 
    .CLK(clk_c), .FCI(n1762), .F0(n68_adj_12), .Q0(clk_cnt_7), .F1(n67), 
    .Q1(clk_cnt_8), .FCO(n1763));
  SLICE_5 SLICE_5( .A0(clk_cnt_13), .DI0(n62), .CLK(clk_c), .FCI(n1765), 
    .F0(n62), .Q0(clk_cnt_13));
  SLICE_6 SLICE_6( .A1(clk_cnt_6), .A0(clk_cnt_5), .DI1(n69), .DI0(n70), 
    .CLK(clk_c), .FCI(n1761), .F0(n70), .Q0(clk_cnt_5), .F1(n69), 
    .Q1(clk_cnt_6), .FCO(n1762));
  SLICE_7 SLICE_7( .A1(clk_cnt_4), .A0(clk_cnt_3), .DI1(n71_adj_13), .DI0(n72), 
    .CLK(clk_c), .FCI(n1760), .F0(n72), .Q0(clk_cnt_3), .F1(n71_adj_13), 
    .Q1(clk_cnt_4), .FCO(n1761));
  SLICE_10 SLICE_10( .B1(LED_get_0), .A1(LED_get_1), .A0(LED_get_0), .DI1(n29), 
    .DI0(n30), .LSR(n319), .CLK(apa), .F0(n30), .Q0(LED_get_0), .F1(n29), 
    .Q1(LED_get_1));
  SLICE_11 SLICE_11( .D1(LED_get_2), .C1(LED_get_3), .B1(LED_get_0), 
    .A1(LED_get_1), .C0(LED_get_2), .B0(LED_get_0), .A0(LED_get_1), .DI1(n27), 
    .DI0(n28), .LSR(n319), .CLK(apa), .F0(n28), .Q0(LED_get_2), .F1(n27), 
    .Q1(LED_get_3));
  SLICE_12 SLICE_12( .B1(LED_get_0), .A1(LED_get_1), .D0(LED_get_4), 
    .C0(LED_get_3), .B0(n2277), .A0(LED_get_2), .DI0(n26_adj_8), .LSR(n319), 
    .CLK(apa), .F0(n26_adj_8), .Q0(LED_get_4), .F1(n2277));
  SLICE_13 SLICE_13( .B1(num_cnt_0), .A1(num_cnt_1), .B0(num_cnt_0), 
    .A0(num_cnt_1), .DI1(n2275), .DI0(n2278), .LSR(num_cnt_2), .CLK(apa), 
    .F0(n2278), .Q0(ROW_c_0), .F1(n2275), .Q1(ROW_c_1));
  SLICE_14 SLICE_14( .B1(num_cnt_0), .A1(num_cnt_1), .B0(num_cnt_0), 
    .A0(num_cnt_1), .DI1(n2273), .DI0(n2276), .LSR(num_cnt_2), .CLK(apa), 
    .F0(n2276), .Q0(ROW_c_2), .F1(n2273), .Q1(ROW_c_3));
  SLICE_15 SLICE_15( .C1(n1959), .B1(n10), .A1(n2257), .D0(n718), .C0(n1198), 
    .B0(n2061), .A0(n2123), .DI1(a_to_g_6_N_71_1), .DI0(a_to_g_6_N_71_0), 
    .CE(a_to_g_6__N_78), .CLK(apa), .F0(a_to_g_6_N_71_0), .Q0(a_to_g_c_0), 
    .F1(a_to_g_6_N_71_1), .Q1(a_to_g_c_1));
  SLICE_16 SLICE_16( .D1(n34), .C1(key_out_1), .B1(n2269), .A1(n1188), 
    .D0(n2257), .C0(n10), .B0(n1160), .A0(n2255), .DI1(a_to_g_6_N_71_3), 
    .DI0(a_to_g_6_N_71_2), .CE(a_to_g_6__N_78), .CLK(apa), 
    .F0(a_to_g_6_N_71_2), .Q0(a_to_g_c_2), .F1(a_to_g_6_N_71_3), 
    .Q1(a_to_g_c_3));
  SLICE_17 SLICE_17( .D1(n4_adj_1), .C1(n2255), .B1(n2056), .A1(n1947), 
    .C0(n1947), .B0(n2057), .A0(n1198), .DI1(a_to_g_6_N_71_5), 
    .DI0(a_to_g_6_N_71_4), .CE(a_to_g_6__N_78), .CLK(apa), 
    .F0(a_to_g_6_N_71_4), .Q0(a_to_g_c_4), .F1(a_to_g_6_N_71_5), 
    .Q1(a_to_g_c_5));
  SLICE_18 SLICE_18( .C1(n2042), .B1(key_out_13), .A1(key_out_14), 
    .C0(n10_adj_10), .B0(n2258), .A0(n2120), .DI0(a_to_g_6_N_71_6), 
    .CE(a_to_g_6__N_78), .CLK(apa), .F0(a_to_g_6_N_71_6), .Q0(a_to_g_c_6), 
    .F1(n2258));
  SLICE_19 SLICE_19( .DI0(n2438), .CE(clk_c_enable_1), .LSR(apa_N_10), 
    .CLK(clk_c), .F0(n2438), .Q0(apa));
  SLICE_28 SLICE_28( .B0(key_out_2), .A0(key_out_1), .M1(BTN_cache_1), 
    .M0(BTN_cache_0), .CE(apa_enable_8), .CLK(apa), .F0(n12_adj_4), 
    .Q0(led_four_c_0), .F1(GND_net), .Q1(led_four_c_1));
  SLICE_29 SLICE_29( .B1(LED_get_4), .A1(LED_get_1), .B0(key_out_9), 
    .A0(key_out_7), .M1(BTN_cache_3), .M0(BTN_cache_2), .CE(apa_enable_8), 
    .CLK(apa), .F0(n12_adj_9), .Q0(led_four_c_2), .F1(n2064), 
    .Q1(led_four_c_3));
  SLICE_30 SLICE_30( .C1(num_cnt_2), .B1(num_cnt_0), .A1(num_cnt_1), 
    .B0(apa_N_10), .A0(num_cnt_0), .DI0(n2089), .LSR(n359), .CLK(clk_c), 
    .F0(n2089), .Q0(num_cnt_0), .F1(key_out_15__N_55));
  SLICE_31 SLICE_31( .C1(num_cnt_2), .B1(num_cnt_0), .A1(num_cnt_1), 
    .B0(num_cnt_1), .A0(num_cnt_0), .DI1(n1941), .DI0(n1945), .CE(apa_N_10), 
    .LSR(n359), .CLK(clk_c), .F0(n1945), .Q0(num_cnt_1), .F1(n1941), 
    .Q1(num_cnt_2));
  i69_SLICE_32 \i69/SLICE_32 ( .D1(key_out_5), .C1(key_out_6), .B1(key_out_7), 
    .A1(n2262), .D0(key_out_9), .C0(n2280), .B0(n2279), .A0(n2270), 
    .M0(key_out_10), .OFX0(n40));
  i1974_SLICE_33 \i1974/SLICE_33 ( .D1(key_out_11), .C1(key_out_9), 
    .B1(key_out_8), .A1(n2006), .D0(key_out_11), .C0(key_out_9), 
    .B0(key_out_8), .A0(n2006), .M0(key_out_10), .OFX0(n2285));
  SLICE_34 SLICE_34( .D1(n2263), .C1(n6), .B1(key_out_11), .A1(n1188), 
    .D0(key_out_12), .C0(key_out_11), .B0(n10), .A0(n2056), .M1(COL_c_1), 
    .M0(COL_c_0), .CE(key_out_15__N_50), .CLK(apa), .F0(n2120), .Q0(key_out_8), 
    .F1(n10), .Q1(key_out_9));
  SLICE_35 SLICE_35( .D1(n2266), .C1(n68), .B1(n2006), .A1(n1998), 
    .D0(key_out_12), .C0(key_out_14), .B0(key_out_13), .A0(key_out_15), 
    .F0(n2006), .F1(n4_adj_2));
  SLICE_36 SLICE_36( .D1(n2270), .C1(key_out_5), .B1(key_out_12), 
    .A1(key_out_15), .D0(n2040), .C0(key_out_1), .B0(n2261), .A0(n2147), 
    .F0(n2042), .F1(n2261));
  SLICE_37 SLICE_37( .D1(BTN_cache_0), .C1(n2), .B1(n6_adj_7), 
    .A1(button_four_c_0), .B0(apa_enable_5), .A0(n689), .F0(n319), 
    .F1(apa_enable_5));
  SLICE_38 SLICE_38( .D1(key_out_4), .C1(n2271), .B1(n2274), .A1(key_out_8), 
    .B0(key_out_3), .A0(key_out_10), .F0(n2271), .F1(n2050));
  SLICE_39 SLICE_39( .D1(n4_adj_3), .C1(n2014), .B1(n2257), .A1(n727), 
    .C0(key_out_3), .B0(n2023), .A0(key_out_4), .F0(n727), .F1(n1198));
  SLICE_40 SLICE_40( .D1(n1990), .C1(key_out_1), .B1(n2053), .A1(key_out_2), 
    .C0(key_out_6), .B0(key_out_3), .A0(key_out_10), .F0(n2053), .F1(n2016));
  SLICE_41 SLICE_41( .D1(key_out_0), .C1(key_out_1), .B1(n2272), .A1(n2162), 
    .B0(key_out_2), .A0(key_out_3), .F0(n2272), .F1(n1998));
  SLICE_42 SLICE_42( .D1(n12_adj_9), .C1(n2256), .B1(n2259), .A1(key_out_6), 
    .B0(key_out_5), .A0(n2041), .M1(COL_c_1), .M0(COL_c_0), 
    .CE(key_out_15__N_45), .CLK(apa), .F0(n2256), .Q0(key_out_12), 
    .F1(n10_adj_10), .Q1(key_out_13));
  SLICE_43 SLICE_43( .D1(n4_adj_5), .C1(n2054), .B1(n2268), .A1(n40), 
    .C0(key_out_11), .B0(key_out_2), .A0(key_out_3), .F0(n4_adj_5), .F1(n1994));
  SLICE_44 SLICE_44( .D1(n2040), .C1(n1984), .B1(n2269), .A1(key_out_7), 
    .D0(n706), .C0(key_out_6), .B0(key_out_5), .A0(n2041), .F0(n1160), 
    .F1(n2041));
  SLICE_45 SLICE_45( .D1(n2053), .C1(key_out_5), .B1(n2204), .A1(key_out_2), 
    .B0(key_out_4), .A0(n2203), .M1(COL_c_3), .M0(COL_c_2), 
    .CE(key_out_15__N_50), .CLK(apa), .F0(n2204), .Q0(key_out_10), .F1(n2054), 
    .Q1(key_out_11));
  SLICE_46 SLICE_46( .C1(key_out_9), .B1(key_out_0), .A1(key_out_8), 
    .D0(n2264), .C0(key_out_7), .B0(key_out_11), .A0(n2265), .M1(COL_c_1), 
    .M0(COL_c_0), .CE(key_out_15__N_60), .CLK(apa), .F0(n2203), .Q0(key_out_0), 
    .F1(n2265), .Q1(key_out_1));
  SLICE_47 SLICE_47( .D1(clk_cnt_5), .C1(clk_cnt_8), .B1(n1791), .A1(n1844), 
    .D0(num_cnt_2), .C0(apa_N_10), .B0(num_cnt_0), .A0(num_cnt_1), .F0(n359), 
    .F1(apa_N_10));
  SLICE_48 SLICE_48( .B1(clk_cnt_13), .A1(clk_cnt_12), .D0(n12), .C0(n18), 
    .B0(clk_cnt_11), .A0(n2084), .M1(COL_c_1), .M0(COL_c_0), 
    .CE(key_out_15__N_55), .CLK(apa), .F0(clk_c_enable_1), .Q0(key_out_4), 
    .F1(n12), .Q1(key_out_5));
  SLICE_49 SLICE_49( .D1(clk_cnt_6), .C1(clk_cnt_9), .B1(clk_cnt_4), 
    .A1(clk_cnt_10), .D0(clk_cnt_3), .C0(clk_cnt_8), .B0(clk_cnt_5), 
    .A0(n1791), .F0(n18), .F1(n1791));
  SLICE_50 SLICE_50( .D1(key_out_4), .C1(n2272), .B1(n2274), .A1(key_out_8), 
    .B0(key_out_0), .A0(key_out_9), .M1(button_four_c_3), .M0(button_four_c_2), 
    .CE(apa_enable_5), .CLK(apa), .F0(n2274), .Q0(BTN_cache_2), .F1(n2040), 
    .Q1(BTN_cache_3));
  SLICE_51 SLICE_51( .D1(n4), .C1(n2026), .B1(n2266), .A1(n718), .D0(n1771), 
    .C0(n1162), .B0(n10_adj_10), .A0(n1188), .F0(n1947), .F1(n1188));
  SLICE_52 SLICE_52( .D1(n1999), .C1(key_out_7), .B1(key_out_9), 
    .A1(key_out_8), .C0(key_out_0), .B0(n1306), .A0(key_out_15), .F0(n1771), 
    .F1(n1306));
  SLICE_53 SLICE_53( .D1(key_out_15), .C1(n2016), .B1(key_out_7), .A1(n2262), 
    .D0(key_out_8), .C0(key_out_4), .B0(key_out_0), .A0(key_out_9), .F0(n2262), 
    .F1(n2056));
  SLICE_54 SLICE_54( .D1(n2072), .C1(n2272), .B1(key_out_1), .A1(n2264), 
    .C0(key_out_8), .B0(key_out_0), .A0(key_out_9), .F0(n2264), .F1(n2022));
  SLICE_55 SLICE_55( .D1(n706), .C1(n2042), .B1(key_out_13), .A1(key_out_14), 
    .C0(key_out_0), .B0(n1306), .A0(key_out_15), .F0(n706), .F1(n1162));
  SLICE_56 SLICE_56( .D1(n2070), .C1(key_out_7), .B1(n1160), .A1(n2057), 
    .C0(key_out_12), .B0(n2056), .A0(key_out_11), .F0(n2057), .F1(n1959));
  SLICE_57 SLICE_57( .D1(key_out_10), .C1(n26), .B1(n2270), .A1(n23), 
    .D0(key_out_5), .C0(n8), .B0(key_out_11), .A0(n1994), .F0(n34), .F1(n8));
  SLICE_58 SLICE_58( .D1(n6_adj_6), .C1(n2263), .B1(n2260), .A1(n2272), 
    .D0(key_out_9), .C0(key_out_0), .B0(key_out_4), .A0(key_out_5), 
    .F0(n6_adj_6), .F1(n2014));
  SLICE_59 SLICE_59( .D1(key_out_9), .C1(n1999), .B1(key_out_15), .A1(n2280), 
    .B0(key_out_0), .A0(key_out_8), .F0(n2280), .F1(n2070));
  SLICE_60 SLICE_60( .D1(n2016), .C1(key_out_12), .B1(key_out_4), 
    .A1(key_out_11), .D0(key_out_15), .C0(n1999), .B0(key_out_0), 
    .A0(key_out_8), .F0(n2259), .F1(n1999));
  SLICE_61 SLICE_61( .D1(clk_cnt_12), .C1(clk_cnt_11), .B1(n14), .A1(n9), 
    .B0(clk_cnt_13), .A0(clk_cnt_2), .F0(n9), .F1(n1844));
  SLICE_62 SLICE_62( .B1(key_out_13), .A1(key_out_2), .D0(key_out_14), 
    .C0(n2076), .B0(n2262), .A0(key_out_3), .F0(n23), .F1(n2076));
  SLICE_63 SLICE_63( .D1(key_out_3), .C1(key_out_4), .B1(key_out_2), 
    .A1(n2265), .D0(key_out_14), .C0(n2037), .B0(n2040), .A0(key_out_13), 
    .F0(n26), .F1(n2037));
  SLICE_64 SLICE_64( .D1(n2140), .C1(n2147), .B1(n2285), .A1(n2161), 
    .D0(key_out_13), .C0(key_out_12), .B0(key_out_15), .A0(key_out_14), 
    .F0(n2161), .F1(n71));
  SLICE_65 SLICE_65( .D1(key_out_5), .C1(n2263), .B1(n2268), .A1(key_out_11), 
    .D0(key_out_2), .C0(key_out_1), .B0(n4_adj_11), .A0(n2050), .F0(n2061), 
    .F1(n4_adj_11));
  SLICE_66 SLICE_66( .D1(key_out_1), .C1(key_out_10), .B1(n2268), 
    .A1(key_out_11), .D0(n2264), .C0(n1984), .B0(n2261), .A0(key_out_2), 
    .F0(n2023), .F1(n1984));
  SLICE_67 SLICE_67( .B1(n689), .A1(apa_enable_5), .D0(LED_get_3), .C0(n2064), 
    .B0(LED_get_2), .A0(LED_get_0), .F0(n689), .F1(apa_enable_8));
  SLICE_68 SLICE_68( .C1(key_out_5), .B1(key_out_13), .A1(key_out_14), 
    .D0(n2050), .C0(n2022), .B0(n1990), .A0(n12_adj_4), .F0(n6), .F1(n1990));
  SLICE_69 SLICE_69( .B1(key_out_9), .A1(key_out_8), .D0(key_out_11), 
    .C0(n2140), .B0(n4_adj_2), .A0(key_out_10), .F0(n2026), .F1(n2140));
  SLICE_70 SLICE_70( .D1(key_out_5), .C1(key_out_6), .B1(key_out_4), 
    .A1(key_out_7), .D0(key_out_7), .C0(key_out_6), .B0(key_out_4), 
    .A0(key_out_5), .F0(n2266), .F1(n2162));
  SLICE_71 SLICE_71( .D1(clk_cnt_7), .C1(clk_cnt_0), .B1(clk_cnt_1), 
    .A1(clk_cnt_3), .D0(clk_cnt_7), .C0(clk_cnt_2), .B0(clk_cnt_1), 
    .A0(clk_cnt_0), .M1(COL_c_3), .M0(COL_c_2), .CE(key_out_15__N_45), 
    .CLK(apa), .F0(n2084), .Q0(key_out_14), .F1(n14), .Q1(key_out_15));
  SLICE_72 SLICE_72( .C1(num_cnt_2), .B1(num_cnt_0), .A1(num_cnt_1), 
    .C0(num_cnt_2), .B0(num_cnt_0), .A0(num_cnt_1), .F0(a_to_g_6__N_78), 
    .F1(key_out_15__N_60));
  SLICE_73 SLICE_73( .C1(num_cnt_2), .B1(num_cnt_0), .A1(num_cnt_1), 
    .C0(num_cnt_2), .B0(num_cnt_0), .A0(num_cnt_1), .M1(COL_c_3), .M0(COL_c_2), 
    .CE(key_out_15__N_55), .CLK(apa), .F0(key_out_15__N_45), .Q0(key_out_6), 
    .F1(key_out_15__N_50), .Q1(key_out_7));
  SLICE_74 SLICE_74( .D1(n1959), .C1(key_out_13), .B1(key_out_14), .A1(n2042), 
    .D0(n727), .C0(n2042), .B0(key_out_13), .A0(key_out_14), .F0(n2255), 
    .F1(n2123));
  SLICE_75 SLICE_75( .B1(key_out_6), .A1(key_out_7), .D0(key_out_15), 
    .C0(key_out_12), .B0(key_out_6), .A0(key_out_7), .F0(n2263), .F1(n2270));
  SLICE_76 SLICE_76( .D1(key_out_0), .C1(key_out_1), .B1(n2272), .A1(n71), 
    .D0(key_out_0), .C0(key_out_3), .B0(key_out_1), .A0(key_out_2), .F0(n68), 
    .F1(n4));
  SLICE_77 SLICE_77( .C1(key_out_8), .B1(key_out_10), .A1(n2014), 
    .B0(key_out_8), .A0(key_out_10), .F0(n4_adj_3), .F1(n718));
  SLICE_78 SLICE_78( .D1(key_out_11), .C1(key_out_1), .B1(key_out_13), 
    .A1(key_out_14), .B0(key_out_13), .A0(key_out_14), .F0(n2268), .F1(n2260));
  SLICE_79 SLICE_79( .B1(key_out_12), .A1(key_out_15), .B0(key_out_11), 
    .A0(key_out_12), .F0(n4_adj_1), .F1(n2269));
  SLICE_80 SLICE_80( .B1(key_out_4), .A1(key_out_5), .C0(key_out_5), 
    .B0(n2041), .A0(key_out_6), .F0(n2257), .F1(n2279));
  SLICE_81 SLICE_81( .B1(key_out_11), .A1(key_out_10), .B0(key_out_10), 
    .A0(key_out_4), .M1(COL_c_3), .M0(COL_c_2), .CE(key_out_15__N_60), 
    .CLK(apa), .F0(n2072), .Q0(key_out_2), .F1(n2147), .Q1(key_out_3));
  SLICE_82 SLICE_82( .D1(BTN_cache_3), .C1(BTN_cache_2), .B1(button_four_c_3), 
    .A1(button_four_c_2), .B0(BTN_cache_1), .A0(button_four_c_1), 
    .M1(button_four_c_1), .M0(button_four_c_0), .CE(apa_enable_5), .CLK(apa), 
    .F0(n2), .Q0(BTN_cache_0), .F1(n6_adj_7), .Q1(BTN_cache_1));
  ROW_2_ \ROW[2]_I ( .PADDO(ROW_c_2), .ROW2(ROW[2]));
  ROW_3_ \ROW[3]_I ( .PADDO(ROW_c_3), .ROW3(ROW[3]));
  ROW_1_ \ROW[1]_I ( .PADDO(ROW_c_1), .ROW1(ROW[1]));
  ROW_0_ \ROW[0]_I ( .PADDO(ROW_c_0), .ROW0(ROW[0]));
  a_to_g_6_ \a_to_g[6]_I ( .PADDO(a_to_g_c_6), .atog6(a_to_g[6]));
  a_to_g_5_ \a_to_g[5]_I ( .PADDO(a_to_g_c_5), .atog5(a_to_g[5]));
  a_to_g_4_ \a_to_g[4]_I ( .PADDO(a_to_g_c_4), .atog4(a_to_g[4]));
  a_to_g_3_ \a_to_g[3]_I ( .PADDO(a_to_g_c_3), .atog3(a_to_g[3]));
  a_to_g_2_ \a_to_g[2]_I ( .PADDO(a_to_g_c_2), .atog2(a_to_g[2]));
  a_to_g_1_ \a_to_g[1]_I ( .PADDO(a_to_g_c_1), .atog1(a_to_g[1]));
  a_to_g_0_ \a_to_g[0]_I ( .PADDO(a_to_g_c_0), .atog0(a_to_g[0]));
  led_four_3_ \led_four[3]_I ( .PADDO(led_four_c_3), .ledfour3(led_four[3]));
  led_four_2_ \led_four[2]_I ( .PADDO(led_four_c_2), .ledfour2(led_four[2]));
  led_four_1_ \led_four[1]_I ( .PADDO(led_four_c_1), .ledfour1(led_four[1]));
  led_four_0_ \led_four[0]_I ( .PADDO(led_four_c_0), .ledfour0(led_four[0]));
  seg seg_I( .PADDO(GND_net), .seg(seg));
  COL_3_ \COL[3]_I ( .PADDI(COL_c_3), .COL3(COL[3]));
  COL_2_ \COL[2]_I ( .PADDI(COL_c_2), .COL2(COL[2]));
  COL_1_ \COL[1]_I ( .PADDI(COL_c_1), .COL1(COL[1]));
  COL_0_ \COL[0]_I ( .PADDI(COL_c_0), .COL0(COL[0]));
  button_four_3_ \button_four[3]_I ( .PADDI(button_four_c_3), 
    .buttonfour3(button_four[3]));
  button_four_2_ \button_four[2]_I ( .PADDI(button_four_c_2), 
    .buttonfour2(button_four[2]));
  button_four_1_ \button_four[1]_I ( .PADDI(button_four_c_1), 
    .buttonfour1(button_four[1]));
  button_four_0_ \button_four[0]_I ( .PADDI(button_four_c_0), 
    .buttonfour0(button_four[0]));
  clk clk_I( .PADDI(clk_c), .clk(clk));
  VHI VHI_INST( .Z(VCCI));
  PUR PUR_INST( .PUR(VCCI));
  GSR GSR_INST( .GSR(VCCI));
endmodule

module SLICE_0 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre clk_cnt_148__i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre clk_cnt_148__i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 clk_cnt_148_add_4_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_1 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre clk_cnt_148__i12( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre clk_cnt_148__i11( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 clk_cnt_148_add_4_13( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_2 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre clk_cnt_148__i10( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre clk_cnt_148__i9( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 clk_cnt_148_add_4_11( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_3 ( input A1, DI1, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly;

  vmuxregsre clk_cnt_148__i0( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20001 clk_cnt_148_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_4 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre clk_cnt_148__i8( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre clk_cnt_148__i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 clk_cnt_148_add_4_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_5 ( input A0, DI0, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly;

  vmuxregsre clk_cnt_148__i13( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20002 clk_cnt_148_add_4_15( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_6 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre clk_cnt_148__i6( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre clk_cnt_148__i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 clk_cnt_148_add_4_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_7 ( input A1, A0, DI1, DI0, CLK, FCI, output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly;

  vmuxregsre clk_cnt_148__i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre clk_cnt_148__i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  ccu2 clk_cnt_148_add_4_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_10 ( input B1, A1, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut4 i1530_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40003 i1528_1_lut( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0004 LED_get_149__i1( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0004 LED_get_149__i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40003 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0004 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module SLICE_11 ( input D1, C1, B1, A1, C0, B0, A0, DI1, DI0, LSR, CLK, 
    output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40005 i1544_2_lut_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40006 i1537_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0004 LED_get_149__i3( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0004 LED_get_149__i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40005 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h78F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40006 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7878) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_12 ( input B1, A1, D0, C0, B0, A0, DI0, LSR, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40007 i1533_2_lut_rep_49( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40008 i1551_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0004 LED_get_149__i4( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40007 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40008 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7F80) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_13 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40009 i1901_2_lut_rep_47( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40010 i1892_2_lut_rep_50( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0004 ROW_i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0004 ROW_i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40009 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDDDD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40010 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7777) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module SLICE_14 ( input B1, A1, B0, A0, DI1, DI0, LSR, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  lut40011 i1_2_lut_rep_45( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 i1898_2_lut_rep_48( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0004 ROW_i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));
  vmuxregsre0004 ROW_i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(LSR_dly), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (negedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
  endspecify

endmodule

module lut40011 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40012 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBBBB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_15 ( input C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40013 i1907_2_lut_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 i1914_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre a_to_g_i0_i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre a_to_g_i0_i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40013 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDFDF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40014 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_16 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40015 i1_4_lut_adj_12( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40016 i1904_3_lut_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre a_to_g_i0_i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre a_to_g_i0_i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40015 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40016 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_17 ( input D1, C1, B1, A1, C0, B0, A0, DI1, DI0, CE, CLK, output 
    F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40017 i1_4_lut_adj_2( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40018 i2_3_lut_adj_11( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre a_to_g_i0_i6( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre a_to_g_i0_i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40017 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40018 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDFD) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_18 ( input C1, B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40019 i1014_3_lut_rep_30_4_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40020 i1911_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre a_to_g_i0_i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40019 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9F9F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40020 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFBFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_19 ( input DI0, CE, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40021 m1_lut( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0004 apa_77( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40021 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_28 ( input B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40022 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 i41_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre led_four_i0_i2( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre led_four_i0_i1( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40022 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_29 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40007 i1854_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 i28_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre led_four_i0_i4( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre led_four_i0_i3( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_30 ( input C1, B1, A1, B0, A0, DI0, LSR, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, LSR_dly;

  lut40023 i1_2_lut_3_lut_adj_9( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 i1878_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0004 num_cnt__i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40023 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0202) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_31 ( input C1, B1, A1, B0, A0, DI1, DI0, CE, LSR, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  lut40006 i15_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 i15_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0004 num_cnt__i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0004 num_cnt__i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module i69_SLICE_32 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i69/SLICE_32/i69/SLICE_32_K1_H1 , \i69/SLICE_32/i69/GATE_H0 ;

  lut40024 \i69/SLICE_32_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i69/SLICE_32/i69/SLICE_32_K1_H1 ));
  lut40025 \i69/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i69/SLICE_32/i69/GATE_H0 ));
  selmux2 \i69/SLICE_32_K0K1MUX ( .D0(\i69/SLICE_32/i69/GATE_H0 ), 
    .D1(\i69/SLICE_32/i69/SLICE_32_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40024 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40025 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module i1974_SLICE_33 ( input D1, C1, B1, A1, D0, C0, B0, A0, M0, output OFX0 );
  wire   \i1974/SLICE_33/i1974/SLICE_33_K1_H1 , \i1974/SLICE_33/i1974/GATE_H0 ;

  lut40026 \i1974/SLICE_33_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\i1974/SLICE_33/i1974/SLICE_33_K1_H1 ));
  lut40025 \i1974/GATE ( .A(A0), .B(B0), .C(C0), .D(D0), 
    .Z(\i1974/SLICE_33/i1974/GATE_H0 ));
  selmux2 \i1974/SLICE_33_K0K1MUX ( .D0(\i1974/SLICE_33/i1974/GATE_H0 ), 
    .D1(\i1974/SLICE_33/i1974/SLICE_33_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (D0 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40026 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_34 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40015 i1_4_lut_adj_36( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40027 i1909_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre key_out_i9( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre key_out_i8( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40027 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCECC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_35 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40028 i1_4_lut_adj_45( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 i1_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40028 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40029 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_36 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40029 i1_2_lut_rep_33_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 i3_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_37 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40030 i3_4_lut_rep_39( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40009 i1_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40030 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_38 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40029 i1_2_lut_3_lut_4_lut_adj_50( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40007 i1_2_lut_rep_43( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_39 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40031 i2_4_lut_adj_47( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 i2_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40031 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40032 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF7F7) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_40 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40029 i1_4_lut_adj_34( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40033 i1_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40033 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_41 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40029 i1_4_lut_adj_48( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40007 i1_2_lut_rep_44( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_42 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40034 i1_4_lut_adj_40( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40007 i1852_2_lut_rep_28( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre key_out_i13( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre key_out_i12( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40034 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDC50) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_43 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40035 i1_4_lut_adj_16( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40033 i1_2_lut_3_lut_adj_1( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40035 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC8C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_44 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40029 i3_4_lut_adj_31( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40036 i956_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40036 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF700) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_45 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40029 i3_4_lut_adj_18( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40007 seg_c_bdd_2_lut_1946( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre key_out_i11( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre key_out_i10( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_46 ( input C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, 
    Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40033 i1_2_lut_rep_37_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40037 n2036_bdd_4_lut_1945( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre key_out_i1( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre key_out_i0( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40037 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_47 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40038 i1884_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40039 i2_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40038 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40039 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_48 ( input B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40012 i1_2_lut_adj_4( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40040 i1881_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre key_out_i5( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre key_out_i4( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40040 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0008) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_49 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40029 i3_4_lut_adj_26( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40041 i7_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40041 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFDFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_50 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40029 i1_2_lut_3_lut_4_lut_adj_46( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40007 i1000_2_lut_rep_46( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre BTN_cache_i0_i3( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre BTN_cache_i0_i2( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_51 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40042 i984_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40043 i1_4_lut_adj_6( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40042 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA8A0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40043 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFDF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_52 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40029 i2_3_lut_4_lut_adj_13( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40044 i2_3_lut_adj_7( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40044 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4040) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_53 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40029 i2_3_lut_4_lut_adj_24( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 i1_2_lut_rep_34_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_54 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40029 i2_4_lut_adj_39( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40033 i1_2_lut_rep_36_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_55 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40045 i958_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40032 i2_3_lut_adj_8( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40045 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hDF00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_56 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40046 i2_4_lut_adj_23( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 i1_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4044) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4848) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_57 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40048 i3_4_lut_adj_17( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 i1_4_lut_adj_15( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC800) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEAAA) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_58 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40029 i4_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 i1_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_59 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40029 i1860_2_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40007 i1_2_lut_rep_52( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_60 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40029 i3_4_lut_adj_30( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 i2_3_lut_rep_31_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_61 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40050 i7_4_lut_adj_51( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40011 i1_2_lut_adj_19( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFEFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_62 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut4 i1875_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 i2_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_63 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40051 i2_4_lut_adj_21( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 i1_4_lut_adj_20( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hA088) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_64 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40053 i1_4_lut_adj_49( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40054 key_out_14__bdd_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hECCC) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6880) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_65 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40029 i1_2_lut_3_lut_4_lut_adj_38( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40055 i1_4_lut_adj_22( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF77F) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_66 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40029 i1_2_lut_3_lut_4_lut_adj_35( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 i3_4_lut_adj_27( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_67 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40056 i1887_2_lut_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40014 i1_4_lut_adj_29( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1111) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_68 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40033 i1_2_lut_3_lut_adj_42( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40035 i2_4_lut_adj_37( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_69 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40007 i1_rep_15_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 i2_4_lut_adj_43( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_70 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40054 key_out_7__bdd_4_lut_1917( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 i1_2_lut_rep_38_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_71 ( input D1, C1, B1, A1, D0, C0, B0, A0, M1, M0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40057 i6_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40029 i1872_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre key_out_i15( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre key_out_i14( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_72 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40058 i1_2_lut_3_lut_adj_14( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40059 i1_2_lut_3_lut_adj_5( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0808) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_73 ( input C1, B1, A1, C0, B0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40060 i1_2_lut_3_lut_adj_10( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40061 i1895_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre key_out_i7( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre key_out_i6( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0404) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0101) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_74 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40062 i1912_2_lut_4_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 i970_3_lut_rep_27_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h28FF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hBF00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_75 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40007 i1_2_lut_rep_42( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40029 i1_2_lut_rep_35_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_76 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40029 i1_4_lut_adj_44( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40054 i1_4_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_77 ( input C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40032 i2_3_lut_adj_33( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 i1_2_lut_adj_32( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_78 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40029 i1_2_lut_rep_32_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40007 i1_2_lut_rep_40( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_79 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40007 i1_2_lut_rep_41( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40012 i1_2_lut_adj_3( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_80 ( input B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40007 i1_2_lut_rep_51( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40032 i2_3_lut_rep_29( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_81 ( input B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40007 i1_rep_22_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 i1874_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre key_out_i3( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre key_out_i2( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_82 ( input D1, C1, B1, A1, B0, A0, M1, M0, CE, CLK, output F0, Q0, 
    F1, Q1 );
  wire   GNDI, VCCI, M1_dly, CLK_dly, M0_dly, CE_dly;

  lut40064 i2_4_lut_adj_28( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut4 button_four_3__I_0_i2_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre BTN_cache_i0_i1( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre BTN_cache_i0_i0( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7BDE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module ROW_2_ ( input PADDO, output ROW2 );
  wire   GNDI;

  xo2iobuf ROW_pad_2( .I(PADDO), .T(GNDI), .PAD(ROW2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ROW2) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module ROW_3_ ( input PADDO, output ROW3 );
  wire   GNDI;

  xo2iobuf ROW_pad_3( .I(PADDO), .T(GNDI), .PAD(ROW3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ROW3) = (0:0:0,0:0:0);
  endspecify

endmodule

module ROW_1_ ( input PADDO, output ROW1 );
  wire   GNDI;

  xo2iobuf ROW_pad_1( .I(PADDO), .T(GNDI), .PAD(ROW1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ROW1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ROW_0_ ( input PADDO, output ROW0 );
  wire   GNDI;

  xo2iobuf ROW_pad_0( .I(PADDO), .T(GNDI), .PAD(ROW0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ROW0) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_6_ ( input PADDO, output atog6 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_6( .I(PADDO), .T(GNDI), .PAD(atog6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog6) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_5_ ( input PADDO, output atog5 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_5( .I(PADDO), .T(GNDI), .PAD(atog5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog5) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_4_ ( input PADDO, output atog4 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_4( .I(PADDO), .T(GNDI), .PAD(atog4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog4) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_3_ ( input PADDO, output atog3 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_3( .I(PADDO), .T(GNDI), .PAD(atog3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog3) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_2_ ( input PADDO, output atog2 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_2( .I(PADDO), .T(GNDI), .PAD(atog2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog2) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_1_ ( input PADDO, output atog1 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_1( .I(PADDO), .T(GNDI), .PAD(atog1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog1) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_0_ ( input PADDO, output atog0 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_0( .I(PADDO), .T(GNDI), .PAD(atog0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog0) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_four_3_ ( input PADDO, output ledfour3 );
  wire   GNDI;

  xo2iobuf led_four_pad_3( .I(PADDO), .T(GNDI), .PAD(ledfour3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ledfour3) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_four_2_ ( input PADDO, output ledfour2 );
  wire   GNDI;

  xo2iobuf led_four_pad_2( .I(PADDO), .T(GNDI), .PAD(ledfour2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ledfour2) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_four_1_ ( input PADDO, output ledfour1 );
  wire   GNDI;

  xo2iobuf led_four_pad_1( .I(PADDO), .T(GNDI), .PAD(ledfour1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ledfour1) = (0:0:0,0:0:0);
  endspecify

endmodule

module led_four_0_ ( input PADDO, output ledfour0 );
  wire   GNDI;

  xo2iobuf led_four_pad_0( .I(PADDO), .T(GNDI), .PAD(ledfour0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => ledfour0) = (0:0:0,0:0:0);
  endspecify

endmodule

module seg ( input PADDO, output seg );
  wire   GNDI;

  xo2iobuf seg_pad( .I(PADDO), .T(GNDI), .PAD(seg));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => seg) = (0:0:0,0:0:0);
  endspecify

endmodule

module COL_3_ ( output PADDI, input COL3 );

  xo2iobuf0065 COL_pad_3( .Z(PADDI), .PAD(COL3));

  specify
    (COL3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge COL3, 0:0:0);
    $width (negedge COL3, 0:0:0);
  endspecify

endmodule

module xo2iobuf0065 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module COL_2_ ( output PADDI, input COL2 );

  xo2iobuf0065 COL_pad_2( .Z(PADDI), .PAD(COL2));

  specify
    (COL2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge COL2, 0:0:0);
    $width (negedge COL2, 0:0:0);
  endspecify

endmodule

module COL_1_ ( output PADDI, input COL1 );

  xo2iobuf0065 COL_pad_1( .Z(PADDI), .PAD(COL1));

  specify
    (COL1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge COL1, 0:0:0);
    $width (negedge COL1, 0:0:0);
  endspecify

endmodule

module COL_0_ ( output PADDI, input COL0 );

  xo2iobuf0065 COL_pad_0( .Z(PADDI), .PAD(COL0));

  specify
    (COL0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge COL0, 0:0:0);
    $width (negedge COL0, 0:0:0);
  endspecify

endmodule

module button_four_3_ ( output PADDI, input buttonfour3 );

  xo2iobuf0065 button_four_pad_3( .Z(PADDI), .PAD(buttonfour3));

  specify
    (buttonfour3 => PADDI) = (0:0:0,0:0:0);
    $width (posedge buttonfour3, 0:0:0);
    $width (negedge buttonfour3, 0:0:0);
  endspecify

endmodule

module button_four_2_ ( output PADDI, input buttonfour2 );

  xo2iobuf0065 button_four_pad_2( .Z(PADDI), .PAD(buttonfour2));

  specify
    (buttonfour2 => PADDI) = (0:0:0,0:0:0);
    $width (posedge buttonfour2, 0:0:0);
    $width (negedge buttonfour2, 0:0:0);
  endspecify

endmodule

module button_four_1_ ( output PADDI, input buttonfour1 );

  xo2iobuf0065 button_four_pad_1( .Z(PADDI), .PAD(buttonfour1));

  specify
    (buttonfour1 => PADDI) = (0:0:0,0:0:0);
    $width (posedge buttonfour1, 0:0:0);
    $width (negedge buttonfour1, 0:0:0);
  endspecify

endmodule

module button_four_0_ ( output PADDI, input buttonfour0 );

  xo2iobuf0065 button_four_pad_0( .Z(PADDI), .PAD(buttonfour0));

  specify
    (buttonfour0 => PADDI) = (0:0:0,0:0:0);
    $width (posedge buttonfour0, 0:0:0);
    $width (negedge buttonfour0, 0:0:0);
  endspecify

endmodule

module clk ( output PADDI, input clk );

  xo2iobuf0065 clk_pad( .Z(PADDI), .PAD(clk));

  specify
    (clk => PADDI) = (0:0:0,0:0:0);
    $width (posedge clk, 0:0:0);
    $width (negedge clk, 0:0:0);
  endspecify

endmodule
