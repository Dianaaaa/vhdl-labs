
// Verilog netlist produced by program ldbanno, Version Diamond (64-bit) 3.11.0.396.4

// ldbanno -n Verilog -o led_shining_impl1_mapvo.vo -w -neg -gui -msgset C:/Users/10352/vhdl-labs/lab2_led_shining/promote.xml led_shining_impl1_map.ncd 
// Netlist created on Wed Nov 18 23:32:28 2020
// Netlist written on Wed Nov 18 23:32:31 2020
// Design is for device LCMXO2-4000HC
// Design is for package CSBGA132
// Design is for performance grade 4

`timescale 1 ns / 1 ps

module PWM ( rst_n, clk, key_menu, key_up, key_down, menu_state, a_to_g, seg, 
             pulse_out, display );
  input  rst_n, clk, key_menu, key_up, key_down;
  output menu_state;
  output [6:0] a_to_g;
  output seg, pulse_out, display;
  wire   cnt1_14, cycle_12, cycle_pulse_0, cnt1_13, n2157, n937, n936, n2158, 
         cnt1_8, cnt1_7, n2154, n943, n942, n2155, cnt1_16_N_84_18, 
         cnt1_16_N_84_17, n2256, n2257, n2290, cnt2_16_N_154_17, 
         cnt2_16__N_173, n2289, cnt2_16_N_154_15, cnt2_16_N_154_16, cnt1_12, 
         cnt1_11, n2156, n939, n938, cnt1_16_N_84_16, cnt1_16, cnt1_16_N_84_15, 
         cnt1_15, n2255, n2148, cnt1_16_N_84_11, cnt1_16_N_84_12, n2149, n2165, 
         n550, n549, n2166, n2288, cnt2_16_N_154_13, cnt2_16_N_154_14, cnt1_6, 
         cnt1_5, n2153, n945, n944, cnt1_10, cnt1_9, n941, n940, n2287, 
         cnt2_16_N_154_11, cnt2_16_N_154_12, n2286, cnt2_16_N_154_9, 
         cnt2_16_N_154_10, \P3/keystore_1 , \P3/keysamplerpulse , n2164, n552, 
         \P3/keystore_2 , n551, dt_6, duty_pulse_0, n2147, cnt1_16_N_84_9, 
         cnt1_16_N_84_10, n2144, cnt1_16_N_84_3, cnt1_16_N_84_4, n2145, n2146, 
         cnt1_16_N_84_7, cnt1_16_N_84_8, n2188, cnt2_16__N_153, cnt2_16, n2187, 
         n2163, n554, n553, cnt2_15, cnt2_14, n2186, cnt2_13, cnt2_12, n2185, 
         n2162, n556, n555, cnt1_16_N_84_5, cnt1_16_N_84_6, cnt2_11, cnt2_10, 
         n2184, cnt2_9, cnt2_16_N_154_8, cnt2_8, n2183, cnt1_4, n946, 
         cnt2_16_N_154_7, cnt2_7, cnt2_16_N_154_6, cnt2_6, n2182, 
         cnt1_16_N_84_2, n2285, n2284, cnt2_16_N_154_5, count0_7, n38, n1619, 
         clk_c, n2271, count0_6, count0_5, n39, n40, n2270, cnt2_16_N_154_4, 
         count0_4, count0_3, n41, n42, n2269, count0_2, count0_1, n43, n44, 
         n2268, count0_0, n45, direction, n2266, n75, n74, n2265, n77, n76, 
         cnt1_16_N_84_14, cnt1_16_N_84_13, n2254, n2264, n79, n78, n2253, 
         n2263, n81, n80, n2252, n2262, n83, n82, n2251, cnt2_5, n2261, n85, 
         n84, n2250, cnt2_4, cnt2_3, n87, clk_c_enable_36, n2009, n2260, n86, 
         cnt1_3, n2249, n2181, cnt2_2, n2180, cnt2_1, n88, n89, n2259, cnt1_2, 
         cnt2_0, n90, n2258, cnt1_16__N_83, n2161, n558, n557, n2151, n2150, 
         n559, n2007, n2159, n951, n935, n934, n2167, n546, 
         \P1/keysamplerpulsecnt_31 , \P1/n134 , \P1/keysamplerpulse , 
         \P1/n2204 , \P1/keysamplerpulsecnt_30 , \P1/keysamplerpulsecnt_29 , 
         \P1/n135 , \P1/n136 , \P1/n2203 , \P1/keysamplerpulsecnt_28 , 
         \P1/keysamplerpulsecnt_27 , \P1/n137 , \P1/n138 , \P1/n2202 , 
         \P1/keysamplerpulsecnt_26 , \P1/keysamplerpulsecnt_25 , \P1/n139 , 
         \P1/n140 , \P1/n2201 , \P1/keysamplerpulsecnt_24 , 
         \P1/keysamplerpulsecnt_23 , \P1/n141 , \P1/n142 , \P1/n2200 , 
         \P1/keysamplerpulsecnt_22 , \P1/keysamplerpulsecnt_21 , \P1/n143 , 
         \P1/n144 , \P1/n2199 , \P1/keysamplerpulsecnt_20 , 
         \P1/keysamplerpulsecnt_19 , \P1/n145 , \P1/n146 , \P1/n2198 , 
         \P1/keysamplerpulsecnt_18 , \P1/keysamplerpulsecnt_17 , \P1/n147 , 
         \P1/n148 , \P1/n2197 , \P1/keysamplerpulsecnt_16 , 
         \P1/keysamplerpulsecnt_15 , \P1/n149 , \P1/n150 , \P1/n2196 , 
         \P1/keysamplerpulsecnt_14 , \P1/keysamplerpulsecnt_13 , \P1/n151 , 
         \P1/n152 , \P1/n2195 , \P1/keysamplerpulsecnt_12 , 
         \P1/keysamplerpulsecnt_11 , \P1/n153 , \P1/n154 , \P1/n2194 , 
         \P1/keysamplerpulsecnt_10 , \P1/keysamplerpulsecnt_9 , \P1/n155 , 
         \P1/n156 , \P1/n2193 , \P1/keysamplerpulsecnt_8 , 
         \P1/keysamplerpulsecnt_7 , \P1/n157 , \P1/n158 , \P1/n2192 , \P1/n26 , 
         \P1/n27 , \P1/n159 , \P1/n160 , \P1/n2191 , \P1/n28 , \P1/n29 , 
         \P1/n161 , \P1/n162 , \P1/n2190 , \P1/n30 , \P1/n31 , \P1/n163 , 
         \P1/n164 , \P1/n2189 , \P1/n32 , \P1/n165 , \P1/n2241 , \P1/n2242 , 
         \P1/n2240 , \P1/n2239 , \P1/n2238 , \P1/n2237 , \P1/n2248 , 
         \P1/n2247 , \P1/n2246 , \P1/n2245 , \P1/n2244 , \P1/n2243 , 
         \P2/keysamplerpulsecnt_21 , \P2/keysamplerpulsecnt_20 , \P2/n2277 , 
         \P2/n2278 , \P2/keysamplerpulsecnt_19 , \P2/keysamplerpulsecnt_18 , 
         \P2/n2276 , \P2/keysamplerpulsecnt_17 , \P2/keysamplerpulsecnt_16 , 
         \P1/keystore_1 , \P2/n2275 , \P1/keystore_2 , \P2/n32 , \P2/n165 , 
         \P2/keysamplerpulse , \P2/n2205 , \P2/n26 , \P2/n27 , \P2/n159 , 
         \P2/n160 , \P2/n2207 , \P2/n2208 , \P2/keysamplerpulsecnt_15 , 
         \P2/keysamplerpulsecnt_14 , \P2/n2274 , \P2/keysamplerpulsecnt_13 , 
         \P2/keysamplerpulsecnt_12 , \P2/n2273 , \P2/keysamplerpulsecnt_11 , 
         \P2/keysamplerpulsecnt_10 , \P2/n2272 , \P2/n28 , \P2/n29 , \P2/n161 , 
         \P2/n162 , \P2/n2206 , \P2/keysamplerpulsecnt_9 , 
         \P2/keysamplerpulsecnt_7 , \P2/keysamplerpulsecnt_8 , \P2/n30 , 
         \P2/n31 , \P2/n163 , \P2/n164 , \P2/n2283 , 
         \P2/keysamplerpulsecnt_31 , \P2/keysamplerpulsecnt_30 , \P2/n2282 , 
         \P2/keysamplerpulsecnt_29 , \P2/keysamplerpulsecnt_28 , \P2/n2281 , 
         \P2/keysamplerpulsecnt_27 , \P2/keysamplerpulsecnt_26 , \P2/n2280 , 
         \P2/keysamplerpulsecnt_25 , \P2/keysamplerpulsecnt_24 , \P2/n2279 , 
         \P2/n134 , \P2/n2220 , \P2/n135 , \P2/n136 , \P2/n2219 , \P2/n137 , 
         \P2/n138 , \P2/n2218 , \P2/n139 , \P2/n140 , \P2/n2217 , 
         \P2/keysamplerpulsecnt_23 , \P2/n141 , \P2/n142 , \P2/n2216 , 
         \P2/keysamplerpulsecnt_22 , \P2/n143 , \P2/n144 , \P2/n2215 , 
         \P2/n145 , \P2/n146 , \P2/n2214 , \P2/n147 , \P2/n148 , \P2/n2213 , 
         \P2/n149 , \P2/n150 , \P2/n2212 , \P2/n151 , \P2/n152 , \P2/n2211 , 
         \P2/n153 , \P2/n154 , \P2/n2210 , \P2/n155 , \P2/n156 , \P2/n2209 , 
         \P2/n157 , \P2/n158 , n548, n547, \P3/keysamplerpulsecnt_8 , 
         \P3/keysamplerpulsecnt_7 , \P3/n157 , \P3/n158 , \P3/n2224 , 
         \P3/n2225 , \P3/keysamplerpulsecnt_31 , \P3/n134 , \P3/n2236 , 
         \P3/n26 , \P3/n27 , \P3/n159 , \P3/n160 , \P3/n2223 , 
         \P3/keysamplerpulsecnt_30 , \P3/keysamplerpulsecnt_29 , \P3/n135 , 
         \P3/n136 , \P3/n2235 , \P3/n28 , \P3/n29 , \P3/n161 , \P3/n162 , 
         \P3/n2222 , \P3/keysamplerpulsecnt_28 , \P3/keysamplerpulsecnt_27 , 
         \P3/n137 , \P3/n138 , \P3/n2234 , \P3/n30 , \P3/n31 , \P3/n163 , 
         \P3/n164 , \P3/n2221 , \P3/keysamplerpulsecnt_26 , 
         \P3/keysamplerpulsecnt_25 , \P3/n139 , \P3/n140 , \P3/n2233 , 
         \P3/n32 , \P3/n165 , \P3/n2179 , \P3/keysamplerpulsecnt_24 , 
         \P3/keysamplerpulsecnt_23 , \P3/n141 , \P3/n142 , \P3/n2232 , 
         \P3/n2178 , \P3/n2177 , \P3/keysamplerpulsecnt_22 , 
         \P3/keysamplerpulsecnt_21 , \P3/n143 , \P3/n144 , \P3/n2231 , 
         \P3/keysamplerpulsecnt_20 , \P3/keysamplerpulsecnt_19 , \P3/n145 , 
         \P3/n146 , \P3/n2230 , \P3/n2176 , \P3/n2175 , 
         \P3/keysamplerpulsecnt_18 , \P3/keysamplerpulsecnt_17 , \P3/n147 , 
         \P3/n148 , \P3/n2229 , \P3/n2174 , \P3/n2173 , 
         \P3/keysamplerpulsecnt_16 , \P3/keysamplerpulsecnt_15 , \P3/n149 , 
         \P3/n150 , \P3/n2228 , \P3/keysamplerpulsecnt_14 , 
         \P3/keysamplerpulsecnt_13 , \P3/n151 , \P3/n152 , \P3/n2227 , 
         \P3/keysamplerpulsecnt_12 , \P3/keysamplerpulsecnt_11 , \P3/n153 , 
         \P3/n154 , \P3/n2226 , \P3/keysamplerpulsecnt_10 , 
         \P3/keysamplerpulsecnt_9 , \P3/n155 , \P3/n156 , \P3/n2172 , 
         \P2/keystore_1 , \P3/n2171 , \P2/keystore_2 , \P3/n2170 , \P3/n2169 , 
         \P3/n2168 , key_menu_c, \P1/btnstate_N_199 , \P1/keystore_0 , 
         key_up_c, \P2/btnstate_N_199 , \P2/keystore_0 , key_down_c, 
         \P3/btnstate_N_199 , \P3/keystore_0 , a_to_g_c, a_to_g_6_N_1_5, 
         key_menu1, clk0, clk0_N_193, n560, n952, n2556, cycle_14, n2576, 
         cnt1_16_N_10_5, cnt1_16_N_10_4, cycle_16, cycle_15, cnt1_16_N_10_7, 
         cnt1_16_N_10_6, cnt1_16_N_10_9, cnt1_16_N_10_8, cnt1_16_N_10_11, 
         cnt1_16_N_10_10, cnt1_16_N_10_14, cnt1_16_N_10_12, cnt1_16_N_10_13, 
         cnt1_16_N_10_16, cnt1_16_N_10_15, n1713, n1558, n105, n1554, n1556, 
         n1550, n1552, n1546, n1548, n1542, n1544, n1538, n1540, n1536, 
         key_down1_ls, n2561, n2304, clk_c_enable_9, n2575, n2428, n2437, n5, 
         n2557, direction_N_196, rst_n_c, n1280, pulse_out_c, VCC_net, 
         display_c, GND_net, n2563, n2305, clk_c_enable_6, n2560, n15, n1918, 
         n2559, n2562, key_up1_ls, n10, n1470, n25, pulse_out_N_190, 
         pulse_out_N_189, n24, n2491, n2566, n12, n2496, n28, n8, n18, n2500, 
         n2564, n14, n2504, n2508, n32, n2467, n2567, n2568, n2569, n2480, n22, 
         n21, n27, n4, n2426, n10_adj_237, n14_adj_236, n2456, n15_adj_235, 
         n2570, n2571, n2518, n2477, n2565, n2514, n2572, n2573, n2449, n2520, 
         n24_adj_238, n436, n22_adj_234, n2445;

  SLICE_0 SLICE_0( .C1(cnt1_14), .B1(cycle_12), .A1(cycle_pulse_0), 
    .C0(cnt1_13), .B0(cycle_12), .A0(cycle_pulse_0), .FCI(n2157), .F0(n937), 
    .F1(n936), .FCO(n2158));
  SLICE_1 SLICE_1( .C1(cnt1_8), .B1(cycle_12), .A1(cycle_pulse_0), .C0(cnt1_7), 
    .B0(cycle_12), .A0(cycle_pulse_0), .FCI(n2154), .F0(n943), .F1(n942), 
    .FCO(n2155));
  SLICE_2 SLICE_2( .A1(cnt1_16_N_84_18), .A0(cnt1_16_N_84_17), .FCI(n2256), 
    .FCO(n2257));
  SLICE_3 SLICE_3( .FCI(n2290), .F0(cnt2_16_N_154_17), .F1(cnt2_16__N_173));
  SLICE_4 SLICE_4( .B1(cycle_12), .A1(cycle_pulse_0), .B0(cycle_pulse_0), 
    .A0(cycle_12), .FCI(n2289), .F0(cnt2_16_N_154_15), .F1(cnt2_16_N_154_16), 
    .FCO(n2290));
  SLICE_5 SLICE_5( .B1(cycle_12), .A1(cnt1_12), .C0(cnt1_11), .B0(cycle_12), 
    .A0(cycle_pulse_0), .FCI(n2156), .F0(n939), .F1(n938), .FCO(n2157));
  SLICE_6 SLICE_6( .B1(cnt1_16_N_84_16), .A1(cnt1_16), .B0(cnt1_16_N_84_15), 
    .A0(cnt1_15), .FCI(n2255), .FCO(n2256));
  SLICE_7 SLICE_7( .A1(cycle_12), .B0(cycle_12), .A0(cycle_pulse_0), 
    .FCI(n2148), .F0(cnt1_16_N_84_11), .F1(cnt1_16_N_84_12), .FCO(n2149));
  SLICE_8 SLICE_8( .A1(cnt1_13), .A0(cnt1_12), .FCI(n2165), .F0(n550), 
    .F1(n549), .FCO(n2166));
  SLICE_9 SLICE_9( .B1(cycle_12), .A1(cycle_pulse_0), .B0(cycle_12), 
    .A0(cycle_pulse_0), .FCI(n2288), .F0(cnt2_16_N_154_13), 
    .F1(cnt2_16_N_154_14), .FCO(n2289));
  SLICE_10 SLICE_10( .C1(cnt1_6), .B1(cycle_pulse_0), .A1(cycle_12), 
    .C0(cnt1_5), .B0(cycle_12), .A0(cycle_pulse_0), .FCI(n2153), .F0(n945), 
    .F1(n944), .FCO(n2154));
  SLICE_11 SLICE_11( .C1(cnt1_10), .B1(cycle_12), .A1(cycle_pulse_0), 
    .B0(cycle_12), .A0(cnt1_9), .FCI(n2155), .F0(n941), .F1(n940), .FCO(n2156));
  SLICE_12 SLICE_12( .A1(cycle_12), .B0(cycle_12), .A0(cycle_pulse_0), 
    .FCI(n2287), .F0(cnt2_16_N_154_11), .F1(cnt2_16_N_154_12), .FCO(n2288));
  SLICE_13 SLICE_13( .B1(cycle_12), .A1(cycle_pulse_0), .A0(cycle_12), 
    .FCI(n2286), .F0(cnt2_16_N_154_9), .F1(cnt2_16_N_154_10), .FCO(n2287));
  SLICE_14 SLICE_14( .A1(cnt1_11), .A0(cnt1_10), .M0(\P3/keystore_1 ), 
    .CLK(\P3/keysamplerpulse ), .FCI(n2164), .F0(n552), .Q0(\P3/keystore_2 ), 
    .F1(n551), .FCO(n2165));
  SLICE_15 SLICE_15( .B1(cycle_12), .A1(cycle_pulse_0), .C0(cycle_12), 
    .B0(dt_6), .A0(duty_pulse_0), .FCI(n2147), .F0(cnt1_16_N_84_9), 
    .F1(cnt1_16_N_84_10), .FCO(n2148));
  SLICE_16 SLICE_16( .D1(dt_6), .C1(duty_pulse_0), .B1(cycle_12), 
    .A1(cycle_pulse_0), .B0(duty_pulse_0), .A0(dt_6), .FCI(n2144), 
    .F0(cnt1_16_N_84_3), .F1(cnt1_16_N_84_4), .FCO(n2145));
  SLICE_17 SLICE_17( .D1(duty_pulse_0), .C1(dt_6), .B1(cycle_12), 
    .A1(cycle_pulse_0), .D0(dt_6), .C0(duty_pulse_0), .B0(cycle_12), 
    .A0(cycle_pulse_0), .FCI(n2146), .F0(cnt1_16_N_84_7), .F1(cnt1_16_N_84_8), 
    .FCO(n2147));
  SLICE_18 SLICE_18( .A0(cnt2_16__N_173), .FCI(n2188), .F1(cnt2_16__N_153));
  SLICE_19 SLICE_19( .A1(cnt2_16_N_154_17), .B0(cnt2_16_N_154_16), 
    .A0(cnt2_16), .FCI(n2187), .FCO(n2188));
  SLICE_20 SLICE_20( .C1(cnt1_9), .B1(dt_6), .A1(duty_pulse_0), .C0(cnt1_8), 
    .B0(duty_pulse_0), .A0(dt_6), .FCI(n2163), .F0(n554), .F1(n553), 
    .FCO(n2164));
  SLICE_21 SLICE_21( .B1(cnt2_16_N_154_15), .A1(cnt2_15), 
    .B0(cnt2_16_N_154_14), .A0(cnt2_14), .FCI(n2186), .FCO(n2187));
  SLICE_22 SLICE_22( .B1(cnt2_16_N_154_13), .A1(cnt2_13), 
    .B0(cnt2_16_N_154_12), .A0(cnt2_12), .FCI(n2185), .FCO(n2186));
  SLICE_23 SLICE_23( .C1(cnt1_7), .B1(dt_6), .A1(duty_pulse_0), .B0(dt_6), 
    .A0(cnt1_6), .FCI(n2162), .F0(n556), .F1(n555), .FCO(n2163));
  SLICE_24 SLICE_24( .C1(dt_6), .B1(cycle_pulse_0), .A1(cycle_12), 
    .B0(cycle_12), .A0(cycle_pulse_0), .FCI(n2145), .F0(cnt1_16_N_84_5), 
    .F1(cnt1_16_N_84_6), .FCO(n2146));
  SLICE_25 SLICE_25( .B1(cnt2_16_N_154_11), .A1(cnt2_11), 
    .B0(cnt2_16_N_154_10), .A0(cnt2_10), .FCI(n2184), .FCO(n2185));
  SLICE_26 SLICE_26( .B1(cnt2_16_N_154_9), .A1(cnt2_9), .B0(cnt2_16_N_154_8), 
    .A0(cnt2_8), .FCI(n2183), .FCO(n2184));
  SLICE_27 SLICE_27( .C1(cnt1_4), .B1(cycle_12), .A1(cycle_pulse_0), .F1(n946), 
    .FCO(n2153));
  SLICE_28 SLICE_28( .B1(cnt2_16_N_154_7), .A1(cnt2_7), .B0(cnt2_16_N_154_6), 
    .A0(cnt2_6), .FCI(n2182), .FCO(n2183));
  SLICE_29 SLICE_29( .A1(duty_pulse_0), .F1(cnt1_16_N_84_2), .FCO(n2144));
  SLICE_30 SLICE_30( .B1(cycle_12), .A1(cycle_pulse_0), .B0(cycle_12), 
    .A0(cycle_pulse_0), .FCI(n2285), .F0(cnt2_16_N_154_7), 
    .F1(cnt2_16_N_154_8), .FCO(n2286));
  SLICE_31 SLICE_31( .B1(cycle_pulse_0), .A1(cycle_12), .B0(cycle_12), 
    .A0(cycle_pulse_0), .FCI(n2284), .F0(cnt2_16_N_154_5), 
    .F1(cnt2_16_N_154_6), .FCO(n2285));
  SLICE_32 SLICE_32( .A0(count0_7), .DI0(n38), .LSR(n1619), .CLK(clk_c), 
    .FCI(n2271), .F0(n38), .Q0(count0_7));
  SLICE_33 SLICE_33( .A1(count0_6), .A0(count0_5), .DI1(n39), .DI0(n40), 
    .LSR(n1619), .CLK(clk_c), .FCI(n2270), .F0(n40), .Q0(count0_5), .F1(n39), 
    .Q1(count0_6), .FCO(n2271));
  SLICE_34 SLICE_34( .B1(cycle_12), .A1(cycle_pulse_0), .F1(cnt2_16_N_154_4), 
    .FCO(n2284));
  SLICE_35 SLICE_35( .A1(count0_4), .A0(count0_3), .DI1(n41), .DI0(n42), 
    .LSR(n1619), .CLK(clk_c), .FCI(n2269), .F0(n42), .Q0(count0_3), .F1(n41), 
    .Q1(count0_4), .FCO(n2270));
  SLICE_36 SLICE_36( .A1(count0_2), .A0(count0_1), .DI1(n43), .DI0(n44), 
    .LSR(n1619), .CLK(clk_c), .FCI(n2268), .F0(n44), .Q0(count0_1), .F1(n43), 
    .Q1(count0_2), .FCO(n2269));
  SLICE_37 SLICE_37( .A1(count0_0), .DI1(n45), .LSR(n1619), .CLK(clk_c), 
    .F1(n45), .Q1(count0_0), .FCO(n2268));
  SLICE_38 SLICE_38( .C1(cnt2_16), .B1(cnt2_16__N_153), .A1(direction), 
    .C0(cnt2_15), .B0(cnt2_16__N_153), .A0(direction), .FCI(n2266), .F0(n75), 
    .F1(n74));
  SLICE_39 SLICE_39( .C1(cnt2_14), .B1(cnt2_16__N_153), .A1(direction), 
    .C0(cnt2_13), .B0(cnt2_16__N_153), .A0(direction), .FCI(n2265), .F0(n77), 
    .F1(n76), .FCO(n2266));
  SLICE_40 SLICE_40( .B1(cnt1_16_N_84_14), .A1(cnt1_14), .B0(cnt1_16_N_84_13), 
    .A0(cnt1_13), .FCI(n2254), .FCO(n2255));
  SLICE_41 SLICE_41( .C1(cnt2_12), .B1(cnt2_16__N_153), .A1(direction), 
    .C0(cnt2_11), .B0(cnt2_16__N_153), .A0(direction), .FCI(n2264), .F0(n79), 
    .F1(n78), .FCO(n2265));
  SLICE_42 SLICE_42( .B1(cnt1_16_N_84_12), .A1(cnt1_12), .B0(cnt1_16_N_84_11), 
    .A0(cnt1_11), .FCI(n2253), .FCO(n2254));
  SLICE_43 SLICE_43( .C1(cnt2_10), .B1(cnt2_16__N_153), .A1(direction), 
    .C0(cnt2_9), .B0(cnt2_16__N_153), .A0(direction), .FCI(n2263), .F0(n81), 
    .F1(n80), .FCO(n2264));
  SLICE_44 SLICE_44( .B1(cnt1_16_N_84_10), .A1(cnt1_10), .B0(cnt1_16_N_84_9), 
    .A0(cnt1_9), .FCI(n2252), .FCO(n2253));
  SLICE_45 SLICE_45( .C1(cnt2_8), .B1(cnt2_16__N_153), .A1(direction), 
    .C0(cnt2_7), .B0(cnt2_16__N_153), .A0(direction), .FCI(n2262), .F0(n83), 
    .F1(n82), .FCO(n2263));
  SLICE_46 SLICE_46( .B1(cnt1_16_N_84_8), .A1(cnt1_8), .B0(cnt1_16_N_84_7), 
    .A0(cnt1_7), .FCI(n2251), .FCO(n2252));
  SLICE_47 SLICE_47( .C1(cnt2_6), .B1(cnt2_16__N_153), .A1(direction), 
    .C0(cnt2_5), .B0(cnt2_16__N_153), .A0(direction), .FCI(n2261), .F0(n85), 
    .F1(n84), .FCO(n2262));
  SLICE_48 SLICE_48( .B1(cnt1_16_N_84_6), .A1(cnt1_6), .B0(cnt1_16_N_84_5), 
    .A0(cnt1_5), .FCI(n2250), .FCO(n2251));
  SLICE_49 SLICE_49( .C1(cnt2_4), .B1(cnt2_16__N_153), .A1(direction), 
    .C0(cnt2_3), .B0(cnt2_16__N_153), .A0(direction), .DI0(n87), 
    .CE(clk_c_enable_36), .LSR(n2009), .CLK(clk_c), .FCI(n2260), .F0(n87), 
    .Q0(cnt2_3), .F1(n86), .FCO(n2261));
  SLICE_50 SLICE_50( .B1(cnt1_16_N_84_4), .A1(cnt1_4), .B0(cnt1_16_N_84_3), 
    .A0(cnt1_3), .FCI(n2249), .FCO(n2250));
  SLICE_51 SLICE_51( .B1(cnt2_16_N_154_5), .A1(cnt2_5), .B0(cnt2_16_N_154_4), 
    .A0(cnt2_4), .FCI(n2181), .FCO(n2182));
  SLICE_52 SLICE_52( .A1(cnt2_3), .A0(cnt2_2), .FCI(n2180), .FCO(n2181));
  SLICE_53 SLICE_53( .C1(cnt2_2), .B1(cnt2_16__N_153), .A1(direction), 
    .C0(cnt2_1), .B0(cnt2_16__N_153), .A0(direction), .DI1(n88), .DI0(n89), 
    .CE(clk_c_enable_36), .LSR(n2009), .CLK(clk_c), .FCI(n2259), .F0(n89), 
    .Q0(cnt2_1), .F1(n88), .Q1(cnt2_2), .FCO(n2260));
  SLICE_54 SLICE_54( .B1(cnt1_16_N_84_2), .A1(cnt1_2), .FCO(n2249));
  SLICE_55 SLICE_55( .A1(cnt2_1), .A0(cnt2_0), .FCO(n2180));
  SLICE_56 SLICE_56( .A1(cnt2_0), .DI1(n90), .CE(clk_c_enable_36), .LSR(n2009), 
    .CLK(clk_c), .F1(n90), .Q1(cnt2_0), .FCO(n2259));
  SLICE_57 SLICE_57( .FCI(n2258), .F0(cnt1_16__N_83));
  SLICE_58 SLICE_58( .A1(cnt1_5), .C0(cnt1_4), .B0(dt_6), .A0(duty_pulse_0), 
    .FCI(n2161), .F0(n558), .F1(n557), .FCO(n2162));
  SLICE_59 SLICE_59( .A1(cnt1_16_N_84_18), .A0(cnt1_16_N_84_18), .FCI(n2257), 
    .FCO(n2258));
  SLICE_60 SLICE_60( .FCI(n2151), .F0(cnt1_16_N_84_17), .F1(cnt1_16_N_84_18));
  SLICE_61 SLICE_61( .B1(cycle_12), .A1(cycle_pulse_0), .B0(cycle_pulse_0), 
    .A0(cycle_12), .FCI(n2150), .F0(cnt1_16_N_84_15), .F1(cnt1_16_N_84_16), 
    .FCO(n2151));
  SLICE_62 SLICE_62( .C1(cnt1_3), .B1(duty_pulse_0), .A1(dt_6), 
    .B0(duty_pulse_0), .A0(cnt1_2), .DI1(n559), .CE(clk_c_enable_36), 
    .LSR(n2007), .CLK(clk_c), .F1(n559), .Q1(cnt1_3), .FCO(n2161));
  SLICE_63 SLICE_63( .B1(cycle_12), .A1(cycle_pulse_0), .B0(cycle_12), 
    .A0(cycle_pulse_0), .FCI(n2149), .F0(cnt1_16_N_84_13), 
    .F1(cnt1_16_N_84_14), .FCO(n2150));
  SLICE_64 SLICE_64( .FCI(n2159), .F0(n951));
  SLICE_65 SLICE_65( .C1(cnt1_16), .B1(cycle_12), .A1(cycle_pulse_0), 
    .C0(cnt1_15), .B0(cycle_pulse_0), .A0(cycle_12), .FCI(n2158), .F0(n935), 
    .F1(n934), .FCO(n2159));
  SLICE_66 SLICE_66( .A0(cnt1_16), .FCI(n2167), .F0(n546));
  P1_SLICE_67 \P1/SLICE_67 ( .A0(\P1/keysamplerpulsecnt_31 ), .DI0(\P1/n134 ), 
    .LSR(\P1/keysamplerpulse ), .CLK(clk_c), .FCI(\P1/n2204 ), .F0(\P1/n134 ), 
    .Q0(\P1/keysamplerpulsecnt_31 ));
  P1_SLICE_68 \P1/SLICE_68 ( .A1(\P1/keysamplerpulsecnt_30 ), 
    .A0(\P1/keysamplerpulsecnt_29 ), .DI1(\P1/n135 ), .DI0(\P1/n136 ), 
    .LSR(\P1/keysamplerpulse ), .CLK(clk_c), .FCI(\P1/n2203 ), .F0(\P1/n136 ), 
    .Q0(\P1/keysamplerpulsecnt_29 ), .F1(\P1/n135 ), 
    .Q1(\P1/keysamplerpulsecnt_30 ), .FCO(\P1/n2204 ));
  P1_SLICE_69 \P1/SLICE_69 ( .A1(\P1/keysamplerpulsecnt_28 ), 
    .A0(\P1/keysamplerpulsecnt_27 ), .DI1(\P1/n137 ), .DI0(\P1/n138 ), 
    .LSR(\P1/keysamplerpulse ), .CLK(clk_c), .FCI(\P1/n2202 ), .F0(\P1/n138 ), 
    .Q0(\P1/keysamplerpulsecnt_27 ), .F1(\P1/n137 ), 
    .Q1(\P1/keysamplerpulsecnt_28 ), .FCO(\P1/n2203 ));
  P1_SLICE_70 \P1/SLICE_70 ( .A1(\P1/keysamplerpulsecnt_26 ), 
    .A0(\P1/keysamplerpulsecnt_25 ), .DI1(\P1/n139 ), .DI0(\P1/n140 ), 
    .LSR(\P1/keysamplerpulse ), .CLK(clk_c), .FCI(\P1/n2201 ), .F0(\P1/n140 ), 
    .Q0(\P1/keysamplerpulsecnt_25 ), .F1(\P1/n139 ), 
    .Q1(\P1/keysamplerpulsecnt_26 ), .FCO(\P1/n2202 ));
  P1_SLICE_71 \P1/SLICE_71 ( .A1(\P1/keysamplerpulsecnt_24 ), 
    .A0(\P1/keysamplerpulsecnt_23 ), .DI1(\P1/n141 ), .DI0(\P1/n142 ), 
    .LSR(\P1/keysamplerpulse ), .CLK(clk_c), .FCI(\P1/n2200 ), .F0(\P1/n142 ), 
    .Q0(\P1/keysamplerpulsecnt_23 ), .F1(\P1/n141 ), 
    .Q1(\P1/keysamplerpulsecnt_24 ), .FCO(\P1/n2201 ));
  P1_SLICE_72 \P1/SLICE_72 ( .A1(\P1/keysamplerpulsecnt_22 ), 
    .A0(\P1/keysamplerpulsecnt_21 ), .DI1(\P1/n143 ), .DI0(\P1/n144 ), 
    .LSR(\P1/keysamplerpulse ), .CLK(clk_c), .FCI(\P1/n2199 ), .F0(\P1/n144 ), 
    .Q0(\P1/keysamplerpulsecnt_21 ), .F1(\P1/n143 ), 
    .Q1(\P1/keysamplerpulsecnt_22 ), .FCO(\P1/n2200 ));
  P1_SLICE_73 \P1/SLICE_73 ( .A1(\P1/keysamplerpulsecnt_20 ), 
    .A0(\P1/keysamplerpulsecnt_19 ), .DI1(\P1/n145 ), .DI0(\P1/n146 ), 
    .LSR(\P1/keysamplerpulse ), .CLK(clk_c), .FCI(\P1/n2198 ), .F0(\P1/n146 ), 
    .Q0(\P1/keysamplerpulsecnt_19 ), .F1(\P1/n145 ), 
    .Q1(\P1/keysamplerpulsecnt_20 ), .FCO(\P1/n2199 ));
  P1_SLICE_74 \P1/SLICE_74 ( .A1(\P1/keysamplerpulsecnt_18 ), 
    .A0(\P1/keysamplerpulsecnt_17 ), .DI1(\P1/n147 ), .DI0(\P1/n148 ), 
    .LSR(\P1/keysamplerpulse ), .CLK(clk_c), .FCI(\P1/n2197 ), .F0(\P1/n148 ), 
    .Q0(\P1/keysamplerpulsecnt_17 ), .F1(\P1/n147 ), 
    .Q1(\P1/keysamplerpulsecnt_18 ), .FCO(\P1/n2198 ));
  P1_SLICE_75 \P1/SLICE_75 ( .A1(\P1/keysamplerpulsecnt_16 ), 
    .A0(\P1/keysamplerpulsecnt_15 ), .DI1(\P1/n149 ), .DI0(\P1/n150 ), 
    .LSR(\P1/keysamplerpulse ), .CLK(clk_c), .FCI(\P1/n2196 ), .F0(\P1/n150 ), 
    .Q0(\P1/keysamplerpulsecnt_15 ), .F1(\P1/n149 ), 
    .Q1(\P1/keysamplerpulsecnt_16 ), .FCO(\P1/n2197 ));
  P1_SLICE_76 \P1/SLICE_76 ( .A1(\P1/keysamplerpulsecnt_14 ), 
    .A0(\P1/keysamplerpulsecnt_13 ), .DI1(\P1/n151 ), .DI0(\P1/n152 ), 
    .LSR(\P1/keysamplerpulse ), .CLK(clk_c), .FCI(\P1/n2195 ), .F0(\P1/n152 ), 
    .Q0(\P1/keysamplerpulsecnt_13 ), .F1(\P1/n151 ), 
    .Q1(\P1/keysamplerpulsecnt_14 ), .FCO(\P1/n2196 ));
  P1_SLICE_77 \P1/SLICE_77 ( .A1(\P1/keysamplerpulsecnt_12 ), 
    .A0(\P1/keysamplerpulsecnt_11 ), .DI1(\P1/n153 ), .DI0(\P1/n154 ), 
    .LSR(\P1/keysamplerpulse ), .CLK(clk_c), .FCI(\P1/n2194 ), .F0(\P1/n154 ), 
    .Q0(\P1/keysamplerpulsecnt_11 ), .F1(\P1/n153 ), 
    .Q1(\P1/keysamplerpulsecnt_12 ), .FCO(\P1/n2195 ));
  P1_SLICE_78 \P1/SLICE_78 ( .A1(\P1/keysamplerpulsecnt_10 ), 
    .A0(\P1/keysamplerpulsecnt_9 ), .DI1(\P1/n155 ), .DI0(\P1/n156 ), 
    .LSR(\P1/keysamplerpulse ), .CLK(clk_c), .FCI(\P1/n2193 ), .F0(\P1/n156 ), 
    .Q0(\P1/keysamplerpulsecnt_9 ), .F1(\P1/n155 ), 
    .Q1(\P1/keysamplerpulsecnt_10 ), .FCO(\P1/n2194 ));
  P1_SLICE_79 \P1/SLICE_79 ( .A1(\P1/keysamplerpulsecnt_8 ), 
    .A0(\P1/keysamplerpulsecnt_7 ), .DI1(\P1/n157 ), .DI0(\P1/n158 ), 
    .LSR(\P1/keysamplerpulse ), .CLK(clk_c), .FCI(\P1/n2192 ), .F0(\P1/n158 ), 
    .Q0(\P1/keysamplerpulsecnt_7 ), .F1(\P1/n157 ), 
    .Q1(\P1/keysamplerpulsecnt_8 ), .FCO(\P1/n2193 ));
  P1_SLICE_80 \P1/SLICE_80 ( .A1(\P1/n26 ), .A0(\P1/n27 ), .DI1(\P1/n159 ), 
    .DI0(\P1/n160 ), .LSR(\P1/keysamplerpulse ), .CLK(clk_c), .FCI(\P1/n2191 ), 
    .F0(\P1/n160 ), .Q0(\P1/n27 ), .F1(\P1/n159 ), .Q1(\P1/n26 ), 
    .FCO(\P1/n2192 ));
  P1_SLICE_81 \P1/SLICE_81 ( .A1(\P1/n28 ), .A0(\P1/n29 ), .DI1(\P1/n161 ), 
    .DI0(\P1/n162 ), .LSR(\P1/keysamplerpulse ), .CLK(clk_c), .FCI(\P1/n2190 ), 
    .F0(\P1/n162 ), .Q0(\P1/n29 ), .F1(\P1/n161 ), .Q1(\P1/n28 ), 
    .FCO(\P1/n2191 ));
  P1_SLICE_82 \P1/SLICE_82 ( .A1(\P1/n30 ), .A0(\P1/n31 ), .DI1(\P1/n163 ), 
    .DI0(\P1/n164 ), .LSR(\P1/keysamplerpulse ), .CLK(clk_c), .FCI(\P1/n2189 ), 
    .F0(\P1/n164 ), .Q0(\P1/n31 ), .F1(\P1/n163 ), .Q1(\P1/n30 ), 
    .FCO(\P1/n2190 ));
  P1_SLICE_83 \P1/SLICE_83 ( .A1(\P1/n32 ), .DI1(\P1/n165 ), 
    .LSR(\P1/keysamplerpulse ), .CLK(clk_c), .F1(\P1/n165 ), .Q1(\P1/n32 ), 
    .FCO(\P1/n2189 ));
  P1_SLICE_84 \P1/SLICE_84 ( .A1(\P1/keysamplerpulsecnt_19 ), 
    .A0(\P1/keysamplerpulsecnt_18 ), .FCI(\P1/n2241 ), .FCO(\P1/n2242 ));
  P1_SLICE_85 \P1/SLICE_85 ( .A1(\P1/keysamplerpulsecnt_17 ), 
    .A0(\P1/keysamplerpulsecnt_16 ), .FCI(\P1/n2240 ), .FCO(\P1/n2241 ));
  P1_SLICE_86 \P1/SLICE_86 ( .A1(\P1/keysamplerpulsecnt_15 ), 
    .A0(\P1/keysamplerpulsecnt_14 ), .FCI(\P1/n2239 ), .FCO(\P1/n2240 ));
  P1_SLICE_87 \P1/SLICE_87 ( .A1(\P1/keysamplerpulsecnt_13 ), 
    .A0(\P1/keysamplerpulsecnt_12 ), .FCI(\P1/n2238 ), .FCO(\P1/n2239 ));
  P1_SLICE_88 \P1/SLICE_88 ( .A1(\P1/keysamplerpulsecnt_11 ), 
    .A0(\P1/keysamplerpulsecnt_10 ), .FCI(\P1/n2237 ), .FCO(\P1/n2238 ));
  P1_SLICE_89 \P1/SLICE_89 ( .A1(\P1/keysamplerpulsecnt_9 ), 
    .B0(\P1/keysamplerpulsecnt_7 ), .A0(\P1/keysamplerpulsecnt_8 ), 
    .FCO(\P1/n2237 ));
  P1_SLICE_90 \P1/SLICE_90 ( .FCI(\P1/n2248 ), .F0(\P1/keysamplerpulse ));
  P1_SLICE_91 \P1/SLICE_91 ( .A1(\P1/keysamplerpulsecnt_31 ), 
    .A0(\P1/keysamplerpulsecnt_30 ), .FCI(\P1/n2247 ), .FCO(\P1/n2248 ));
  P1_SLICE_92 \P1/SLICE_92 ( .A1(\P1/keysamplerpulsecnt_29 ), 
    .A0(\P1/keysamplerpulsecnt_28 ), .FCI(\P1/n2246 ), .FCO(\P1/n2247 ));
  P1_SLICE_93 \P1/SLICE_93 ( .A1(\P1/keysamplerpulsecnt_27 ), 
    .A0(\P1/keysamplerpulsecnt_26 ), .FCI(\P1/n2245 ), .FCO(\P1/n2246 ));
  P1_SLICE_94 \P1/SLICE_94 ( .A1(\P1/keysamplerpulsecnt_25 ), 
    .A0(\P1/keysamplerpulsecnt_24 ), .FCI(\P1/n2244 ), .FCO(\P1/n2245 ));
  P1_SLICE_95 \P1/SLICE_95 ( .A1(\P1/keysamplerpulsecnt_23 ), 
    .A0(\P1/keysamplerpulsecnt_22 ), .FCI(\P1/n2243 ), .FCO(\P1/n2244 ));
  P1_SLICE_96 \P1/SLICE_96 ( .A1(\P1/keysamplerpulsecnt_21 ), 
    .A0(\P1/keysamplerpulsecnt_20 ), .FCI(\P1/n2242 ), .FCO(\P1/n2243 ));
  P2_SLICE_97 \P2/SLICE_97 ( .A1(\P2/keysamplerpulsecnt_21 ), 
    .A0(\P2/keysamplerpulsecnt_20 ), .FCI(\P2/n2277 ), .FCO(\P2/n2278 ));
  P2_SLICE_98 \P2/SLICE_98 ( .A1(\P2/keysamplerpulsecnt_19 ), 
    .A0(\P2/keysamplerpulsecnt_18 ), .FCI(\P2/n2276 ), .FCO(\P2/n2277 ));
  SLICE_99 SLICE_99( .A1(\P2/keysamplerpulsecnt_17 ), 
    .A0(\P2/keysamplerpulsecnt_16 ), .M0(\P1/keystore_1 ), 
    .CLK(\P1/keysamplerpulse ), .FCI(\P2/n2275 ), .Q0(\P1/keystore_2 ), 
    .FCO(\P2/n2276 ));
  P2_SLICE_100 \P2/SLICE_100 ( .A1(\P2/n32 ), .DI1(\P2/n165 ), 
    .LSR(\P2/keysamplerpulse ), .CLK(clk_c), .F1(\P2/n165 ), .Q1(\P2/n32 ), 
    .FCO(\P2/n2205 ));
  P2_SLICE_101 \P2/SLICE_101 ( .A1(\P2/n26 ), .A0(\P2/n27 ), .DI1(\P2/n159 ), 
    .DI0(\P2/n160 ), .LSR(\P2/keysamplerpulse ), .CLK(clk_c), .FCI(\P2/n2207 ), 
    .F0(\P2/n160 ), .Q0(\P2/n27 ), .F1(\P2/n159 ), .Q1(\P2/n26 ), 
    .FCO(\P2/n2208 ));
  P2_SLICE_102 \P2/SLICE_102 ( .A1(\P2/keysamplerpulsecnt_15 ), 
    .A0(\P2/keysamplerpulsecnt_14 ), .FCI(\P2/n2274 ), .FCO(\P2/n2275 ));
  P2_SLICE_103 \P2/SLICE_103 ( .A1(\P2/keysamplerpulsecnt_13 ), 
    .A0(\P2/keysamplerpulsecnt_12 ), .FCI(\P2/n2273 ), .FCO(\P2/n2274 ));
  P2_SLICE_104 \P2/SLICE_104 ( .A1(\P2/keysamplerpulsecnt_11 ), 
    .A0(\P2/keysamplerpulsecnt_10 ), .FCI(\P2/n2272 ), .FCO(\P2/n2273 ));
  P2_SLICE_105 \P2/SLICE_105 ( .A1(\P2/n28 ), .A0(\P2/n29 ), .DI1(\P2/n161 ), 
    .DI0(\P2/n162 ), .LSR(\P2/keysamplerpulse ), .CLK(clk_c), .FCI(\P2/n2206 ), 
    .F0(\P2/n162 ), .Q0(\P2/n29 ), .F1(\P2/n161 ), .Q1(\P2/n28 ), 
    .FCO(\P2/n2207 ));
  P2_SLICE_106 \P2/SLICE_106 ( .A1(\P2/keysamplerpulsecnt_9 ), 
    .B0(\P2/keysamplerpulsecnt_7 ), .A0(\P2/keysamplerpulsecnt_8 ), 
    .FCO(\P2/n2272 ));
  P2_SLICE_107 \P2/SLICE_107 ( .A1(\P2/n30 ), .A0(\P2/n31 ), .DI1(\P2/n163 ), 
    .DI0(\P2/n164 ), .LSR(\P2/keysamplerpulse ), .CLK(clk_c), .FCI(\P2/n2205 ), 
    .F0(\P2/n164 ), .Q0(\P2/n31 ), .F1(\P2/n163 ), .Q1(\P2/n30 ), 
    .FCO(\P2/n2206 ));
  P2_SLICE_108 \P2/SLICE_108 ( .FCI(\P2/n2283 ), .F0(\P2/keysamplerpulse ));
  P2_SLICE_109 \P2/SLICE_109 ( .A1(\P2/keysamplerpulsecnt_31 ), 
    .A0(\P2/keysamplerpulsecnt_30 ), .FCI(\P2/n2282 ), .FCO(\P2/n2283 ));
  P2_SLICE_110 \P2/SLICE_110 ( .A1(\P2/keysamplerpulsecnt_29 ), 
    .A0(\P2/keysamplerpulsecnt_28 ), .FCI(\P2/n2281 ), .FCO(\P2/n2282 ));
  P2_SLICE_111 \P2/SLICE_111 ( .A1(\P2/keysamplerpulsecnt_27 ), 
    .A0(\P2/keysamplerpulsecnt_26 ), .FCI(\P2/n2280 ), .FCO(\P2/n2281 ));
  P2_SLICE_112 \P2/SLICE_112 ( .A1(\P2/keysamplerpulsecnt_25 ), 
    .A0(\P2/keysamplerpulsecnt_24 ), .FCI(\P2/n2279 ), .FCO(\P2/n2280 ));
  P2_SLICE_113 \P2/SLICE_113 ( .A0(\P2/keysamplerpulsecnt_31 ), 
    .DI0(\P2/n134 ), .LSR(\P2/keysamplerpulse ), .CLK(clk_c), .FCI(\P2/n2220 ), 
    .F0(\P2/n134 ), .Q0(\P2/keysamplerpulsecnt_31 ));
  P2_SLICE_114 \P2/SLICE_114 ( .A1(\P2/keysamplerpulsecnt_30 ), 
    .A0(\P2/keysamplerpulsecnt_29 ), .DI1(\P2/n135 ), .DI0(\P2/n136 ), 
    .LSR(\P2/keysamplerpulse ), .CLK(clk_c), .FCI(\P2/n2219 ), .F0(\P2/n136 ), 
    .Q0(\P2/keysamplerpulsecnt_29 ), .F1(\P2/n135 ), 
    .Q1(\P2/keysamplerpulsecnt_30 ), .FCO(\P2/n2220 ));
  P2_SLICE_115 \P2/SLICE_115 ( .A1(\P2/keysamplerpulsecnt_28 ), 
    .A0(\P2/keysamplerpulsecnt_27 ), .DI1(\P2/n137 ), .DI0(\P2/n138 ), 
    .LSR(\P2/keysamplerpulse ), .CLK(clk_c), .FCI(\P2/n2218 ), .F0(\P2/n138 ), 
    .Q0(\P2/keysamplerpulsecnt_27 ), .F1(\P2/n137 ), 
    .Q1(\P2/keysamplerpulsecnt_28 ), .FCO(\P2/n2219 ));
  P2_SLICE_116 \P2/SLICE_116 ( .A1(\P2/keysamplerpulsecnt_26 ), 
    .A0(\P2/keysamplerpulsecnt_25 ), .DI1(\P2/n139 ), .DI0(\P2/n140 ), 
    .LSR(\P2/keysamplerpulse ), .CLK(clk_c), .FCI(\P2/n2217 ), .F0(\P2/n140 ), 
    .Q0(\P2/keysamplerpulsecnt_25 ), .F1(\P2/n139 ), 
    .Q1(\P2/keysamplerpulsecnt_26 ), .FCO(\P2/n2218 ));
  P2_SLICE_117 \P2/SLICE_117 ( .A1(\P2/keysamplerpulsecnt_24 ), 
    .A0(\P2/keysamplerpulsecnt_23 ), .DI1(\P2/n141 ), .DI0(\P2/n142 ), 
    .LSR(\P2/keysamplerpulse ), .CLK(clk_c), .FCI(\P2/n2216 ), .F0(\P2/n142 ), 
    .Q0(\P2/keysamplerpulsecnt_23 ), .F1(\P2/n141 ), 
    .Q1(\P2/keysamplerpulsecnt_24 ), .FCO(\P2/n2217 ));
  P2_SLICE_118 \P2/SLICE_118 ( .A1(\P2/keysamplerpulsecnt_22 ), 
    .A0(\P2/keysamplerpulsecnt_21 ), .DI1(\P2/n143 ), .DI0(\P2/n144 ), 
    .LSR(\P2/keysamplerpulse ), .CLK(clk_c), .FCI(\P2/n2215 ), .F0(\P2/n144 ), 
    .Q0(\P2/keysamplerpulsecnt_21 ), .F1(\P2/n143 ), 
    .Q1(\P2/keysamplerpulsecnt_22 ), .FCO(\P2/n2216 ));
  P2_SLICE_119 \P2/SLICE_119 ( .A1(\P2/keysamplerpulsecnt_23 ), 
    .A0(\P2/keysamplerpulsecnt_22 ), .FCI(\P2/n2278 ), .FCO(\P2/n2279 ));
  P2_SLICE_120 \P2/SLICE_120 ( .A1(\P2/keysamplerpulsecnt_20 ), 
    .A0(\P2/keysamplerpulsecnt_19 ), .DI1(\P2/n145 ), .DI0(\P2/n146 ), 
    .LSR(\P2/keysamplerpulse ), .CLK(clk_c), .FCI(\P2/n2214 ), .F0(\P2/n146 ), 
    .Q0(\P2/keysamplerpulsecnt_19 ), .F1(\P2/n145 ), 
    .Q1(\P2/keysamplerpulsecnt_20 ), .FCO(\P2/n2215 ));
  P2_SLICE_121 \P2/SLICE_121 ( .A1(\P2/keysamplerpulsecnt_18 ), 
    .A0(\P2/keysamplerpulsecnt_17 ), .DI1(\P2/n147 ), .DI0(\P2/n148 ), 
    .LSR(\P2/keysamplerpulse ), .CLK(clk_c), .FCI(\P2/n2213 ), .F0(\P2/n148 ), 
    .Q0(\P2/keysamplerpulsecnt_17 ), .F1(\P2/n147 ), 
    .Q1(\P2/keysamplerpulsecnt_18 ), .FCO(\P2/n2214 ));
  P2_SLICE_122 \P2/SLICE_122 ( .A1(\P2/keysamplerpulsecnt_16 ), 
    .A0(\P2/keysamplerpulsecnt_15 ), .DI1(\P2/n149 ), .DI0(\P2/n150 ), 
    .LSR(\P2/keysamplerpulse ), .CLK(clk_c), .FCI(\P2/n2212 ), .F0(\P2/n150 ), 
    .Q0(\P2/keysamplerpulsecnt_15 ), .F1(\P2/n149 ), 
    .Q1(\P2/keysamplerpulsecnt_16 ), .FCO(\P2/n2213 ));
  P2_SLICE_123 \P2/SLICE_123 ( .A1(\P2/keysamplerpulsecnt_14 ), 
    .A0(\P2/keysamplerpulsecnt_13 ), .DI1(\P2/n151 ), .DI0(\P2/n152 ), 
    .LSR(\P2/keysamplerpulse ), .CLK(clk_c), .FCI(\P2/n2211 ), .F0(\P2/n152 ), 
    .Q0(\P2/keysamplerpulsecnt_13 ), .F1(\P2/n151 ), 
    .Q1(\P2/keysamplerpulsecnt_14 ), .FCO(\P2/n2212 ));
  P2_SLICE_124 \P2/SLICE_124 ( .A1(\P2/keysamplerpulsecnt_12 ), 
    .A0(\P2/keysamplerpulsecnt_11 ), .DI1(\P2/n153 ), .DI0(\P2/n154 ), 
    .LSR(\P2/keysamplerpulse ), .CLK(clk_c), .FCI(\P2/n2210 ), .F0(\P2/n154 ), 
    .Q0(\P2/keysamplerpulsecnt_11 ), .F1(\P2/n153 ), 
    .Q1(\P2/keysamplerpulsecnt_12 ), .FCO(\P2/n2211 ));
  P2_SLICE_125 \P2/SLICE_125 ( .A1(\P2/keysamplerpulsecnt_10 ), 
    .A0(\P2/keysamplerpulsecnt_9 ), .DI1(\P2/n155 ), .DI0(\P2/n156 ), 
    .LSR(\P2/keysamplerpulse ), .CLK(clk_c), .FCI(\P2/n2209 ), .F0(\P2/n156 ), 
    .Q0(\P2/keysamplerpulsecnt_9 ), .F1(\P2/n155 ), 
    .Q1(\P2/keysamplerpulsecnt_10 ), .FCO(\P2/n2210 ));
  P2_SLICE_126 \P2/SLICE_126 ( .A1(\P2/keysamplerpulsecnt_8 ), 
    .A0(\P2/keysamplerpulsecnt_7 ), .DI1(\P2/n157 ), .DI0(\P2/n158 ), 
    .LSR(\P2/keysamplerpulse ), .CLK(clk_c), .FCI(\P2/n2208 ), .F0(\P2/n158 ), 
    .Q0(\P2/keysamplerpulsecnt_7 ), .F1(\P2/n157 ), 
    .Q1(\P2/keysamplerpulsecnt_8 ), .FCO(\P2/n2209 ));
  SLICE_127 SLICE_127( .A1(cnt1_15), .A0(cnt1_14), .FCI(n2166), .F0(n548), 
    .F1(n547), .FCO(n2167));
  P3_SLICE_128 \P3/SLICE_128 ( .A1(\P3/keysamplerpulsecnt_8 ), 
    .A0(\P3/keysamplerpulsecnt_7 ), .DI1(\P3/n157 ), .DI0(\P3/n158 ), 
    .LSR(\P3/keysamplerpulse ), .CLK(clk_c), .FCI(\P3/n2224 ), .F0(\P3/n158 ), 
    .Q0(\P3/keysamplerpulsecnt_7 ), .F1(\P3/n157 ), 
    .Q1(\P3/keysamplerpulsecnt_8 ), .FCO(\P3/n2225 ));
  P3_SLICE_129 \P3/SLICE_129 ( .A0(\P3/keysamplerpulsecnt_31 ), 
    .DI0(\P3/n134 ), .LSR(\P3/keysamplerpulse ), .CLK(clk_c), .FCI(\P3/n2236 ), 
    .F0(\P3/n134 ), .Q0(\P3/keysamplerpulsecnt_31 ));
  P3_SLICE_130 \P3/SLICE_130 ( .A1(\P3/n26 ), .A0(\P3/n27 ), .DI1(\P3/n159 ), 
    .DI0(\P3/n160 ), .LSR(\P3/keysamplerpulse ), .CLK(clk_c), .FCI(\P3/n2223 ), 
    .F0(\P3/n160 ), .Q0(\P3/n27 ), .F1(\P3/n159 ), .Q1(\P3/n26 ), 
    .FCO(\P3/n2224 ));
  P3_SLICE_131 \P3/SLICE_131 ( .A1(\P3/keysamplerpulsecnt_30 ), 
    .A0(\P3/keysamplerpulsecnt_29 ), .DI1(\P3/n135 ), .DI0(\P3/n136 ), 
    .LSR(\P3/keysamplerpulse ), .CLK(clk_c), .FCI(\P3/n2235 ), .F0(\P3/n136 ), 
    .Q0(\P3/keysamplerpulsecnt_29 ), .F1(\P3/n135 ), 
    .Q1(\P3/keysamplerpulsecnt_30 ), .FCO(\P3/n2236 ));
  P3_SLICE_132 \P3/SLICE_132 ( .A1(\P3/n28 ), .A0(\P3/n29 ), .DI1(\P3/n161 ), 
    .DI0(\P3/n162 ), .LSR(\P3/keysamplerpulse ), .CLK(clk_c), .FCI(\P3/n2222 ), 
    .F0(\P3/n162 ), .Q0(\P3/n29 ), .F1(\P3/n161 ), .Q1(\P3/n28 ), 
    .FCO(\P3/n2223 ));
  P3_SLICE_133 \P3/SLICE_133 ( .A1(\P3/keysamplerpulsecnt_28 ), 
    .A0(\P3/keysamplerpulsecnt_27 ), .DI1(\P3/n137 ), .DI0(\P3/n138 ), 
    .LSR(\P3/keysamplerpulse ), .CLK(clk_c), .FCI(\P3/n2234 ), .F0(\P3/n138 ), 
    .Q0(\P3/keysamplerpulsecnt_27 ), .F1(\P3/n137 ), 
    .Q1(\P3/keysamplerpulsecnt_28 ), .FCO(\P3/n2235 ));
  P3_SLICE_134 \P3/SLICE_134 ( .A1(\P3/n30 ), .A0(\P3/n31 ), .DI1(\P3/n163 ), 
    .DI0(\P3/n164 ), .LSR(\P3/keysamplerpulse ), .CLK(clk_c), .FCI(\P3/n2221 ), 
    .F0(\P3/n164 ), .Q0(\P3/n31 ), .F1(\P3/n163 ), .Q1(\P3/n30 ), 
    .FCO(\P3/n2222 ));
  P3_SLICE_135 \P3/SLICE_135 ( .A1(\P3/keysamplerpulsecnt_26 ), 
    .A0(\P3/keysamplerpulsecnt_25 ), .DI1(\P3/n139 ), .DI0(\P3/n140 ), 
    .LSR(\P3/keysamplerpulse ), .CLK(clk_c), .FCI(\P3/n2233 ), .F0(\P3/n140 ), 
    .Q0(\P3/keysamplerpulsecnt_25 ), .F1(\P3/n139 ), 
    .Q1(\P3/keysamplerpulsecnt_26 ), .FCO(\P3/n2234 ));
  P3_SLICE_136 \P3/SLICE_136 ( .A1(\P3/n32 ), .DI1(\P3/n165 ), 
    .LSR(\P3/keysamplerpulse ), .CLK(clk_c), .F1(\P3/n165 ), .Q1(\P3/n32 ), 
    .FCO(\P3/n2221 ));
  P3_SLICE_137 \P3/SLICE_137 ( .FCI(\P3/n2179 ), .F0(\P3/keysamplerpulse ));
  P3_SLICE_138 \P3/SLICE_138 ( .A1(\P3/keysamplerpulsecnt_24 ), 
    .A0(\P3/keysamplerpulsecnt_23 ), .DI1(\P3/n141 ), .DI0(\P3/n142 ), 
    .LSR(\P3/keysamplerpulse ), .CLK(clk_c), .FCI(\P3/n2232 ), .F0(\P3/n142 ), 
    .Q0(\P3/keysamplerpulsecnt_23 ), .F1(\P3/n141 ), 
    .Q1(\P3/keysamplerpulsecnt_24 ), .FCO(\P3/n2233 ));
  P3_SLICE_139 \P3/SLICE_139 ( .A1(\P3/keysamplerpulsecnt_31 ), 
    .A0(\P3/keysamplerpulsecnt_30 ), .FCI(\P3/n2178 ), .FCO(\P3/n2179 ));
  P3_SLICE_140 \P3/SLICE_140 ( .A1(\P3/keysamplerpulsecnt_29 ), 
    .A0(\P3/keysamplerpulsecnt_28 ), .FCI(\P3/n2177 ), .FCO(\P3/n2178 ));
  P3_SLICE_141 \P3/SLICE_141 ( .A1(\P3/keysamplerpulsecnt_22 ), 
    .A0(\P3/keysamplerpulsecnt_21 ), .DI1(\P3/n143 ), .DI0(\P3/n144 ), 
    .LSR(\P3/keysamplerpulse ), .CLK(clk_c), .FCI(\P3/n2231 ), .F0(\P3/n144 ), 
    .Q0(\P3/keysamplerpulsecnt_21 ), .F1(\P3/n143 ), 
    .Q1(\P3/keysamplerpulsecnt_22 ), .FCO(\P3/n2232 ));
  P3_SLICE_142 \P3/SLICE_142 ( .A1(\P3/keysamplerpulsecnt_20 ), 
    .A0(\P3/keysamplerpulsecnt_19 ), .DI1(\P3/n145 ), .DI0(\P3/n146 ), 
    .LSR(\P3/keysamplerpulse ), .CLK(clk_c), .FCI(\P3/n2230 ), .F0(\P3/n146 ), 
    .Q0(\P3/keysamplerpulsecnt_19 ), .F1(\P3/n145 ), 
    .Q1(\P3/keysamplerpulsecnt_20 ), .FCO(\P3/n2231 ));
  P3_SLICE_143 \P3/SLICE_143 ( .A1(\P3/keysamplerpulsecnt_27 ), 
    .A0(\P3/keysamplerpulsecnt_26 ), .FCI(\P3/n2176 ), .FCO(\P3/n2177 ));
  P3_SLICE_144 \P3/SLICE_144 ( .A1(\P3/keysamplerpulsecnt_25 ), 
    .A0(\P3/keysamplerpulsecnt_24 ), .FCI(\P3/n2175 ), .FCO(\P3/n2176 ));
  P3_SLICE_145 \P3/SLICE_145 ( .A1(\P3/keysamplerpulsecnt_18 ), 
    .A0(\P3/keysamplerpulsecnt_17 ), .DI1(\P3/n147 ), .DI0(\P3/n148 ), 
    .LSR(\P3/keysamplerpulse ), .CLK(clk_c), .FCI(\P3/n2229 ), .F0(\P3/n148 ), 
    .Q0(\P3/keysamplerpulsecnt_17 ), .F1(\P3/n147 ), 
    .Q1(\P3/keysamplerpulsecnt_18 ), .FCO(\P3/n2230 ));
  P3_SLICE_146 \P3/SLICE_146 ( .A1(\P3/keysamplerpulsecnt_23 ), 
    .A0(\P3/keysamplerpulsecnt_22 ), .FCI(\P3/n2174 ), .FCO(\P3/n2175 ));
  P3_SLICE_147 \P3/SLICE_147 ( .A1(\P3/keysamplerpulsecnt_21 ), 
    .A0(\P3/keysamplerpulsecnt_20 ), .FCI(\P3/n2173 ), .FCO(\P3/n2174 ));
  P3_SLICE_148 \P3/SLICE_148 ( .A1(\P3/keysamplerpulsecnt_16 ), 
    .A0(\P3/keysamplerpulsecnt_15 ), .DI1(\P3/n149 ), .DI0(\P3/n150 ), 
    .LSR(\P3/keysamplerpulse ), .CLK(clk_c), .FCI(\P3/n2228 ), .F0(\P3/n150 ), 
    .Q0(\P3/keysamplerpulsecnt_15 ), .F1(\P3/n149 ), 
    .Q1(\P3/keysamplerpulsecnt_16 ), .FCO(\P3/n2229 ));
  P3_SLICE_149 \P3/SLICE_149 ( .A1(\P3/keysamplerpulsecnt_14 ), 
    .A0(\P3/keysamplerpulsecnt_13 ), .DI1(\P3/n151 ), .DI0(\P3/n152 ), 
    .LSR(\P3/keysamplerpulse ), .CLK(clk_c), .FCI(\P3/n2227 ), .F0(\P3/n152 ), 
    .Q0(\P3/keysamplerpulsecnt_13 ), .F1(\P3/n151 ), 
    .Q1(\P3/keysamplerpulsecnt_14 ), .FCO(\P3/n2228 ));
  P3_SLICE_150 \P3/SLICE_150 ( .A1(\P3/keysamplerpulsecnt_12 ), 
    .A0(\P3/keysamplerpulsecnt_11 ), .DI1(\P3/n153 ), .DI0(\P3/n154 ), 
    .LSR(\P3/keysamplerpulse ), .CLK(clk_c), .FCI(\P3/n2226 ), .F0(\P3/n154 ), 
    .Q0(\P3/keysamplerpulsecnt_11 ), .F1(\P3/n153 ), 
    .Q1(\P3/keysamplerpulsecnt_12 ), .FCO(\P3/n2227 ));
  P3_SLICE_151 \P3/SLICE_151 ( .A1(\P3/keysamplerpulsecnt_10 ), 
    .A0(\P3/keysamplerpulsecnt_9 ), .DI1(\P3/n155 ), .DI0(\P3/n156 ), 
    .LSR(\P3/keysamplerpulse ), .CLK(clk_c), .FCI(\P3/n2225 ), .F0(\P3/n156 ), 
    .Q0(\P3/keysamplerpulsecnt_9 ), .F1(\P3/n155 ), 
    .Q1(\P3/keysamplerpulsecnt_10 ), .FCO(\P3/n2226 ));
  P3_SLICE_152 \P3/SLICE_152 ( .A1(\P3/keysamplerpulsecnt_19 ), 
    .A0(\P3/keysamplerpulsecnt_18 ), .FCI(\P3/n2172 ), .FCO(\P3/n2173 ));
  SLICE_153 SLICE_153( .A1(\P3/keysamplerpulsecnt_17 ), 
    .A0(\P3/keysamplerpulsecnt_16 ), .M0(\P2/keystore_1 ), 
    .CLK(\P2/keysamplerpulse ), .FCI(\P3/n2171 ), .Q0(\P2/keystore_2 ), 
    .FCO(\P3/n2172 ));
  P3_SLICE_154 \P3/SLICE_154 ( .A1(\P3/keysamplerpulsecnt_15 ), 
    .A0(\P3/keysamplerpulsecnt_14 ), .FCI(\P3/n2170 ), .FCO(\P3/n2171 ));
  P3_SLICE_155 \P3/SLICE_155 ( .A1(\P3/keysamplerpulsecnt_13 ), 
    .A0(\P3/keysamplerpulsecnt_12 ), .FCI(\P3/n2169 ), .FCO(\P3/n2170 ));
  P3_SLICE_156 \P3/SLICE_156 ( .A1(\P3/keysamplerpulsecnt_11 ), 
    .A0(\P3/keysamplerpulsecnt_10 ), .FCI(\P3/n2168 ), .FCO(\P3/n2169 ));
  P3_SLICE_157 \P3/SLICE_157 ( .A1(\P3/keysamplerpulsecnt_9 ), 
    .B0(\P3/keysamplerpulsecnt_7 ), .A0(\P3/keysamplerpulsecnt_8 ), 
    .FCO(\P3/n2168 ));
  P1_SLICE_158 \P1/SLICE_158 ( .A0(key_menu_c), .DI0(\P1/btnstate_N_199 ), 
    .M1(\P1/keystore_0 ), .CLK(\P1/keysamplerpulse ), .F0(\P1/btnstate_N_199 ), 
    .Q0(\P1/keystore_0 ), .Q1(\P1/keystore_1 ));
  P2_SLICE_160 \P2/SLICE_160 ( .A0(key_up_c), .DI0(\P2/btnstate_N_199 ), 
    .M1(\P2/keystore_0 ), .CLK(\P2/keysamplerpulse ), .F0(\P2/btnstate_N_199 ), 
    .Q0(\P2/keystore_0 ), .Q1(\P2/keystore_1 ));
  P3_SLICE_162 \P3/SLICE_162 ( .A0(key_down_c), .DI0(\P3/btnstate_N_199 ), 
    .M1(\P3/keystore_0 ), .CLK(\P3/keysamplerpulse ), .F0(\P3/btnstate_N_199 ), 
    .Q0(\P3/keystore_0 ), .Q1(\P3/keystore_1 ));
  SLICE_164 SLICE_164( .A0(a_to_g_c), .DI0(a_to_g_6_N_1_5), .CLK(key_menu1), 
    .F0(a_to_g_6_N_1_5), .Q0(a_to_g_c));
  SLICE_165 SLICE_165( .B1(n1619), .A1(clk0), .B0(n1619), .A0(clk0), 
    .DI0(clk0_N_193), .CLK(clk_c), .F0(clk0_N_193), .Q0(clk0), 
    .F1(clk_c_enable_36));
  SLICE_166 SLICE_166( .B0(duty_pulse_0), .A0(cnt1_2), .DI0(n560), 
    .CE(clk_c_enable_36), .LSR(n2007), .CLK(clk_c), .F0(n560), .Q0(cnt1_2));
  SLICE_167 SLICE_167( .D1(n952), .C1(n2556), .B1(cycle_14), .A1(n557), 
    .D0(n952), .C0(n2556), .B0(n2576), .A0(n558), .DI1(cnt1_16_N_10_5), 
    .DI0(cnt1_16_N_10_4), .CE(clk_c_enable_36), .CLK(clk_c), 
    .F0(cnt1_16_N_10_4), .Q0(cnt1_4), .F1(cnt1_16_N_10_5), .Q1(cnt1_5));
  SLICE_168 SLICE_168( .D1(n952), .C1(n2556), .B1(cycle_16), .A1(n555), 
    .D0(n952), .C0(n2556), .B0(cycle_15), .A0(n556), .DI1(cnt1_16_N_10_7), 
    .DI0(cnt1_16_N_10_6), .CE(clk_c_enable_36), .CLK(clk_c), 
    .F0(cnt1_16_N_10_6), .Q0(cnt1_6), .F1(cnt1_16_N_10_7), .Q1(cnt1_7));
  SLICE_169 SLICE_169( .D1(n952), .C1(n2556), .B1(cycle_12), .A1(n553), 
    .D0(n952), .C0(n2556), .B0(n2576), .A0(n554), .DI1(cnt1_16_N_10_9), 
    .DI0(cnt1_16_N_10_8), .CE(clk_c_enable_36), .CLK(clk_c), 
    .F0(cnt1_16_N_10_8), .Q0(cnt1_8), .F1(cnt1_16_N_10_9), .Q1(cnt1_9));
  SLICE_170 SLICE_170( .D1(n952), .C1(n2556), .B1(n2576), .A1(n551), .D0(n952), 
    .C0(n2556), .B0(cycle_16), .A0(n552), .DI1(cnt1_16_N_10_11), 
    .DI0(cnt1_16_N_10_10), .CE(clk_c_enable_36), .CLK(clk_c), 
    .F0(cnt1_16_N_10_10), .Q0(cnt1_10), .F1(cnt1_16_N_10_11), .Q1(cnt1_11));
  SLICE_171 SLICE_171( .D1(n952), .C1(n2556), .B1(cycle_14), .A1(n548), 
    .D0(n952), .C0(n2556), .B0(cycle_12), .A0(n550), .DI1(cnt1_16_N_10_14), 
    .DI0(cnt1_16_N_10_12), .CE(clk_c_enable_36), .CLK(clk_c), 
    .F0(cnt1_16_N_10_12), .Q0(cnt1_12), .F1(cnt1_16_N_10_14), .Q1(cnt1_14));
  SLICE_172 SLICE_172( .B1(cycle_12), .A1(cycle_pulse_0), .B0(n952), .A0(n549), 
    .DI0(cnt1_16_N_10_13), .M0(n2556), .CE(clk_c_enable_36), .CLK(clk_c), 
    .OFX0(cnt1_16_N_10_13), .Q0(cnt1_13));
  SLICE_173 SLICE_173( .D1(n952), .C1(n2556), .B1(cycle_16), .A1(n546), 
    .D0(n952), .C0(n2556), .B0(cycle_15), .A0(n547), .DI1(cnt1_16_N_10_16), 
    .DI0(cnt1_16_N_10_15), .CE(clk_c_enable_36), .CLK(clk_c), 
    .F0(cnt1_16_N_10_15), .Q0(cnt1_15), .F1(cnt1_16_N_10_16), .Q1(cnt1_16));
  SLICE_174 SLICE_174( .B1(n1713), .A1(n85), .B0(n1713), .A0(n86), .DI1(n1558), 
    .DI0(n105), .CE(clk_c_enable_36), .CLK(clk_c), .F0(n105), .Q0(cnt2_4), 
    .F1(n1558), .Q1(cnt2_5));
  SLICE_175 SLICE_175( .B1(n1713), .A1(n83), .B0(n1713), .A0(n84), .DI1(n1554), 
    .DI0(n1556), .CE(clk_c_enable_36), .CLK(clk_c), .F0(n1556), .Q0(cnt2_6), 
    .F1(n1554), .Q1(cnt2_7));
  SLICE_176 SLICE_176( .B1(n1713), .A1(n81), .B0(n1713), .A0(n82), .DI1(n1550), 
    .DI0(n1552), .CE(clk_c_enable_36), .CLK(clk_c), .F0(n1552), .Q0(cnt2_8), 
    .F1(n1550), .Q1(cnt2_9));
  SLICE_177 SLICE_177( .B1(n79), .A1(n1713), .B0(n80), .A0(n1713), .DI1(n1546), 
    .DI0(n1548), .CE(clk_c_enable_36), .CLK(clk_c), .F0(n1548), .Q0(cnt2_10), 
    .F1(n1546), .Q1(cnt2_11));
  SLICE_178 SLICE_178( .B1(n77), .A1(n1713), .B0(n78), .A0(n1713), .DI1(n1542), 
    .DI0(n1544), .CE(clk_c_enable_36), .CLK(clk_c), .F0(n1544), .Q0(cnt2_12), 
    .F1(n1542), .Q1(cnt2_13));
  SLICE_179 SLICE_179( .B1(n75), .A1(n1713), .B0(n76), .A0(n1713), .DI1(n1538), 
    .DI0(n1540), .CE(clk_c_enable_36), .CLK(clk_c), .F0(n1540), .Q0(cnt2_14), 
    .F1(n1538), .Q1(cnt2_15));
  SLICE_180 SLICE_180( .B0(n74), .A0(n1713), .DI0(n1536), .CE(clk_c_enable_36), 
    .CLK(clk_c), .F0(n1536), .Q0(cnt2_16));
  SLICE_181 SLICE_181( .D1(key_down1_ls), .C1(\P3/keystore_0 ), 
    .B1(\P3/keystore_1 ), .A1(\P3/keystore_2 ), .C0(n2561), .B0(cycle_12), 
    .A0(cycle_pulse_0), .DI0(n2304), .CE(clk_c_enable_9), .CLK(clk_c), 
    .F0(n2304), .Q0(cycle_12), .F1(n2561));
  SLICE_182 SLICE_182( .B1(cycle_12), .A1(cycle_pulse_0), .A0(cycle_pulse_0), 
    .DI0(n2575), .CE(clk_c_enable_9), .CLK(clk_c), .F0(n2575), 
    .Q0(cycle_pulse_0), .F1(cycle_15));
  SLICE_183 SLICE_183( .B1(cnt2_2), .A1(cnt2_10), .D0(n2428), .C0(n2437), 
    .B0(n5), .A0(n2557), .DI0(direction_N_196), .CE(rst_n_c), .LSR(n1280), 
    .CLK(clk0), .F0(direction_N_196), .Q0(direction), .F1(n5));
  SLICE_184 SLICE_184( .M0(pulse_out_c), .CLK(clk0), .F0(VCC_net), 
    .Q0(display_c), .F1(GND_net));
  SLICE_185 SLICE_185( .D1(duty_pulse_0), .C1(dt_6), .B1(n2563), 
    .A1(key_down1_ls), .D0(duty_pulse_0), .C0(dt_6), .B0(n2563), 
    .A0(key_down1_ls), .DI0(n2305), .CE(clk_c_enable_6), .CLK(clk_c), 
    .F0(n2305), .Q0(dt_6), .F1(n2560));
  SLICE_186 SLICE_186( .B1(duty_pulse_0), .A1(dt_6), .A0(duty_pulse_0), 
    .DI0(n15), .CE(clk_c_enable_6), .CLK(clk_c), .F0(n15), .Q0(duty_pulse_0), 
    .F1(n1918));
  SLICE_187 SLICE_187( .D1(key_down1_ls), .C1(n2563), .B1(cycle_12), 
    .A1(cycle_pulse_0), .C0(\P3/keystore_0 ), .B0(\P3/keystore_1 ), 
    .A0(\P3/keystore_2 ), .DI0(n2563), .CLK(clk_c), .F0(n2563), 
    .Q0(key_down1_ls), .F1(n2559));
  SLICE_188 SLICE_188( .C1(\P1/keystore_0 ), .B1(\P1/keystore_1 ), 
    .A1(\P1/keystore_2 ), .C0(\P2/keystore_0 ), .B0(\P2/keystore_1 ), 
    .A0(\P2/keystore_2 ), .DI0(n2562), .CLK(clk_c), .F0(n2562), 
    .Q0(key_up1_ls), .F1(key_menu1));
  SLICE_189 SLICE_189( .D1(n936), .C1(n937), .B1(n938), .A1(n945), .C0(cnt1_4), 
    .B0(cnt1_5), .A0(cnt2_5), .M0(a_to_g_c), .CLK(key_menu1), .F0(n10), 
    .Q0(n1470), .F1(n25));
  SLICE_190 SLICE_190( .B1(n951), .A1(cnt1_16__N_83), .A0(pulse_out_N_190), 
    .DI0(pulse_out_N_189), .CLK(clk0), .F0(pulse_out_N_189), .Q0(pulse_out_c), 
    .F1(n2556));
  cnt2_16__I_0_122_i28_SLICE_191 \cnt2_16__I_0_122_i28/SLICE_191 ( .D1(n10), 
    .C1(n24), .B1(n2491), .A1(n2566), .C0(n12), .B0(cnt1_11), .A0(cnt2_11), 
    .M0(n2496), .OFX0(n28));
  cnt2_16__I_0_122_i32_SLICE_192 \cnt2_16__I_0_122_i32/SLICE_192 ( .D1(n8), 
    .C1(n18), .B1(n2500), .A1(n2564), .C0(n14), .B0(cnt1_9), .A0(cnt2_9), 
    .M1(n2504), .M0(n2508), .FXB(n32), .FXA(n28), .OFX0(n32), 
    .OFX1(pulse_out_N_190));
  SLICE_193 SLICE_193( .D1(n2467), .C1(n2567), .B1(n2568), .A1(n2569), 
    .B0(cnt1_12), .A0(cnt2_12), .F0(n2569), .F1(n2480));
  SLICE_194 SLICE_194( .D1(n22), .C1(n21), .B1(n25), .A1(n27), .D0(n952), 
    .C0(clk_c_enable_36), .B0(n951), .A0(cnt1_16__N_83), .F0(n2007), .F1(n952));
  SLICE_195 SLICE_195( .D1(n4), .C1(n5), .B1(n2557), .A1(n2437), .D0(n2426), 
    .C0(cnt2_1), .B0(cnt2_0), .A0(cnt2_16), .F0(n2437), .F1(n1713));
  SLICE_196 SLICE_196( .B1(cnt2_9), .A1(cnt2_11), .D0(cnt2_15), 
    .C0(n10_adj_237), .B0(n14_adj_236), .A0(cnt2_14), .F0(n2426), 
    .F1(n10_adj_237));
  SLICE_197 SLICE_197( .D1(n2456), .C1(n15_adj_235), .B1(n2570), .A1(n2571), 
    .B0(cnt1_8), .A0(cnt2_8), .F0(n2570), .F1(n2467));
  SLICE_198 SLICE_198( .D1(n15_adj_235), .C1(n2570), .B1(n2571), .A1(n2500), 
    .B0(cnt1_9), .A0(cnt2_9), .F0(n2571), .F1(n2518));
  SLICE_199 SLICE_199( .B1(cnt1_11), .A1(cnt2_11), .D0(n2477), .C0(n2568), 
    .B0(n2569), .A0(n2565), .F0(n2514), .F1(n2568));
  SLICE_200 SLICE_200( .D1(cnt1_4), .C1(cnt2_4), .B1(n2572), .A1(n2573), 
    .B0(cnt1_5), .A0(cnt2_5), .F0(n2572), .F1(n2456));
  SLICE_201 SLICE_201( .C1(n1619), .B1(n2428), .A1(clk0), .D0(cnt2_8), 
    .C0(cnt2_4), .B0(cnt2_5), .A0(cnt2_6), .F0(n2428), .F1(n4));
  SLICE_202 SLICE_202( .D1(n2449), .C1(count0_7), .B1(count0_6), .A1(count0_3), 
    .C0(n1619), .B0(n1713), .A0(clk0), .F0(n2009), .F1(n1619));
  SLICE_203 SLICE_203( .D1(n2480), .C1(n2565), .B1(n2566), .A1(n2500), 
    .C0(n2520), .B0(cnt1_16), .A0(cnt2_16), .F0(n2504), .F1(n2520));
  SLICE_204 SLICE_204( .D1(cnt1_3), .C1(n935), .B1(n943), .A1(n940), 
    .D0(cnt1_2), .C0(n934), .B0(n24_adj_238), .A0(n939), .F0(n27), 
    .F1(n24_adj_238));
  SLICE_205 SLICE_205( .D1(key_up1_ls), .C1(\P2/keystore_0 ), 
    .B1(\P2/keystore_1 ), .A1(\P2/keystore_2 ), .D0(n436), .C0(n2560), 
    .B0(a_to_g_c), .A0(n1918), .F0(clk_c_enable_6), .F1(n436));
  SLICE_206 SLICE_206( .C1(n22_adj_234), .B1(cnt1_14), .A1(cnt2_14), 
    .C0(cnt1_12), .B0(cnt1_13), .A0(cnt2_13), .F0(n22_adj_234), .F1(n24));
  SLICE_207 SLICE_207( .D1(n436), .C1(n2559), .B1(a_to_g_c), .A1(cycle_16), 
    .B0(cycle_12), .A0(cycle_pulse_0), .F0(cycle_16), .F1(clk_c_enable_9));
  SLICE_208 SLICE_208( .D1(n2445), .C1(count0_0), .B1(count0_2), .A1(count0_4), 
    .B0(count0_1), .A0(count0_5), .F0(n2445), .F1(n2449));
  SLICE_209 SLICE_209( .C1(cnt1_6), .B1(cnt1_10), .A1(cnt2_10), .D0(cnt2_10), 
    .C0(cnt1_10), .B0(cnt1_6), .A0(cnt2_6), .F0(n2477), .F1(n12));
  SLICE_210 SLICE_210( .B1(cnt1_13), .A1(cnt2_13), .D0(cnt2_13), .C0(cnt1_13), 
    .B0(cnt1_12), .A0(cnt2_12), .F0(n2491), .F1(n2565));
  SLICE_211 SLICE_211( .B1(cycle_12), .A1(cycle_pulse_0), .B0(cycle_12), 
    .A0(cycle_pulse_0), .F0(cycle_14), .F1(n2576));
  SLICE_212 SLICE_212( .C1(n2518), .B1(cnt1_16), .A1(cnt2_16), .B0(cnt1_16), 
    .A0(cnt2_16), .F0(n2564), .F1(n2508));
  SLICE_213 SLICE_213( .C1(rst_n_c), .B1(cnt2_16__N_153), .A1(direction), 
    .B0(cnt2_16__N_153), .A0(direction), .F0(n2557), .F1(n1280));
  SLICE_214 SLICE_214( .C1(n2514), .B1(cnt1_14), .A1(cnt2_14), .B0(cnt1_14), 
    .A0(cnt2_14), .F0(n2566), .F1(n2496));
  SLICE_215 SLICE_215( .B1(cnt1_7), .A1(cnt2_7), .C0(cnt1_7), .B0(cnt1_8), 
    .A0(cnt2_8), .F0(n14), .F1(n15_adj_235));
  SLICE_216 SLICE_216( .D1(cnt2_2), .C1(cnt2_3), .B1(cnt1_3), .A1(cnt1_2), 
    .D0(cnt2_7), .C0(cnt2_13), .B0(cnt2_3), .A0(cnt2_12), .F0(n14_adj_236), 
    .F1(n8));
  SLICE_217 SLICE_217( .B1(cnt1_15), .A1(cnt2_15), .C0(cnt1_15), .B0(cnt1_16), 
    .A0(cnt2_16), .F0(n18), .F1(n2500));
  SLICE_218 SLICE_218( .B1(n942), .A1(n941), .B0(n944), .A0(n946), .F0(n22), 
    .F1(n21));
  SLICE_219 SLICE_219( .B1(cnt1_6), .A1(cnt2_6), .B0(cnt1_10), .A0(cnt2_10), 
    .F0(n2567), .F1(n2573));
  a_to_g_1_ \a_to_g[1]_I ( .PADDO(n1470), .atog1(a_to_g[1]));
  a_to_g_0_ \a_to_g[0]_I ( .PADDO(a_to_g_c), .atog0(a_to_g[0]));
  a_to_g_2_ \a_to_g[2]_I ( .PADDO(VCC_net), .atog2(a_to_g[2]));
  a_to_g_3_ \a_to_g[3]_I ( .PADDO(VCC_net), .atog3(a_to_g[3]));
  a_to_g_4_ \a_to_g[4]_I ( .PADDO(a_to_g_c), .atog4(a_to_g[4]));
  a_to_g_5_ \a_to_g[5]_I ( .PADDO(a_to_g_c), .atog5(a_to_g[5]));
  a_to_g_6_ \a_to_g[6]_I ( .PADDO(n1470), .atog6(a_to_g[6]));
  menu_state menu_state_I( .PADDO(a_to_g_c), .menu_state(menu_state));
  seg seg_I( .PADDO(GND_net), .seg(seg));
  pulse_out pulse_out_I( .PADDO(pulse_out_c), .pulse_out(pulse_out));
  display display_I( .PADDO(display_c), .display(display));
  rst_n rst_n_I( .PADDI(rst_n_c), .rst_n(rst_n));
  clk clk_I( .PADDI(clk_c), .clk(clk));
  key_menu key_menu_I( .PADDI(key_menu_c), .key_menu(key_menu));
  key_up key_up_I( .PADDI(key_up_c), .key_up(key_up));
  key_down key_down_I( .PADDI(key_down_c), .key_down(key_down));
  GSR_INST GSR_INST( .GSRNET(rst_n_c));
  PUR PUR_INST( .PUR(VCC_net));
endmodule

module SLICE_0 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu2 add_235_11( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu2 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h9696;
  defparam inst1.INIT1 = 16'h2d2d;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module gnd ( output PWR0 );

  VLO INST1( .Z(PWR0));
endmodule

module SLICE_1 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20001 add_235_5( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20001 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h8787;
  defparam inst1.INIT1 = 16'h1e1e;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_2 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20002 sub_248_add_2_17( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20002 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf555;
  defparam inst1.INIT1 = 16'hf555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_3 ( input FCI, output F0, F1 );
  wire   GNDI;

  ccu20003 add_283_15( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20003 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hffff;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_4 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 add_283_13( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20004 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hdddd;
  defparam inst1.INIT1 = 16'h7777;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_5 ( input B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20005 add_235_9( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20005 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'he1e1;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_6 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20006 sub_248_add_2_15( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20006 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_7 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 sub_128_add_2_11( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20007 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h1111;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_8 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 add_124_12( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20008 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_9 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 add_283_11( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20009 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h6666;
  defparam inst1.INIT1 = 16'hdddd;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_10 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20010 add_235_3( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20010 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h2d2d;
  defparam inst1.INIT1 = 16'h2d2d;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_11 ( input C1, B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20011 add_235_7( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20011 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'h7878;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_12 ( input A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20007 add_283_9( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_13 ( input B1, A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20012 add_283_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20012 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'haaaa;
  defparam inst1.INIT1 = 16'h8888;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_14 ( input A1, A0, M0, CLK, FCI, output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \P3/keystore_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20008 add_124_10( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module vcc ( output PWR1 );

  VHI INST1( .Z(PWR1));
endmodule

module SLICE_15 ( input B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20013 sub_128_add_2_9( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20013 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h8878;
  defparam inst1.INIT1 = 16'h8888;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_16 ( input D1, C1, B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20014 sub_128_add_2_3( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20014 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hb444;
  defparam inst1.INIT1 = 16'hee1e;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_17 ( input D1, C1, B1, A1, D0, C0, B0, A0, FCI, output F0, F1, 
    FCO );

  ccu20015 sub_128_add_2_7( .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), 
    .B1(B1), .C1(C1), .D1(D1), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (D1 => FCO) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (D0 => F1) = (0:0:0,0:0:0);
    (D0 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20015 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7787;
  defparam inst1.INIT1 = 16'hee1e;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_18 ( input A0, FCI, output F1 );
  wire   GNDI;

  ccu20016 sub_249_add_2_20( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20016 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0aaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_19 ( input A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20017 sub_249_add_2_18( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20017 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5999;
  defparam inst1.INIT1 = 16'hf555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_20 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20018 add_124_8( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20018 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hd2d2;
  defparam inst1.INIT1 = 16'h7878;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_21 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20006 sub_249_add_2_16( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_22 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20006 sub_249_add_2_14( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_23 ( input C1, B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20019 add_124_6( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20019 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5666;
  defparam inst1.INIT1 = 16'hd2d2;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_24 ( input C1, B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20020 sub_128_add_2_5( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20020 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hd222;
  defparam inst1.INIT1 = 16'hdd2d;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_25 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20006 sub_249_add_2_12( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_26 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20006 sub_249_add_2_10( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_27 ( input C1, B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20021 add_235_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20021 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h1e1e;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_28 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20006 sub_249_add_2_8( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_29 ( input A1, output F1, FCO );
  wire   GNDI;

  ccu20022 sub_128_add_2_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20022 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_30 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20023 add_283_5( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20023 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7777;
  defparam inst1.INIT1 = 16'heeee;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_31 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20024 add_283_3( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20024 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hdddd;
  defparam inst1.INIT1 = 16'hdddd;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_32 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre0025 count0_284__i7( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20026 count0_284_add_4_9( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0025 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "DISABLED";
endmodule

module ccu20026 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_33 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0025 count0_284__i6( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0025 count0_284__i5( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 count0_284_add_4_7( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20027 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hfaaa;
  defparam inst1.INIT1 = 16'hfaaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_34 ( input B1, A1, output F1, FCO );
  wire   GNDI;

  ccu20028 add_283_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20028 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'heeee;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_35 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0025 count0_284__i4( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0025 count0_284__i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 count0_284_add_4_5( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_36 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre0025 count0_284__i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0025 count0_284__i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 count0_284_add_4_3( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_37 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre0025 count0_284__i0( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20029 count0_284_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20029 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hF000;
  defparam inst1.INIT1 = 16'h0555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_38 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1 );
  wire   GNDI;

  ccu20030 cnt2_286_add_4_17( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20030 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h1e1e;
  defparam inst1.INIT1 = 16'h1e1e;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_39 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20030 cnt2_286_add_4_15( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_40 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20006 sub_248_add_2_13( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_41 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20030 cnt2_286_add_4_13( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_42 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20006 sub_248_add_2_11( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_43 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20030 cnt2_286_add_4_11( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_44 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20006 sub_248_add_2_9( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_45 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20030 cnt2_286_add_4_9( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_46 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20006 sub_248_add_2_7( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_47 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20030 cnt2_286_add_4_7( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_48 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20006 sub_248_add_2_5( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_49 ( input C1, B1, A1, C0, B0, A0, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, FCO );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0031 cnt2_286__i3( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20030 cnt2_286_add_4_5( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0031 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3IY INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module SLICE_50 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20006 sub_248_add_2_3( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_51 ( input B1, A1, B0, A0, FCI, output FCO );
  wire   GNDI;

  ccu20006 sub_249_add_2_6( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_52 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20008 sub_249_add_2_4( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_53 ( input C1, B1, A1, C0, B0, A0, DI1, DI0, CE, LSR, CLK, FCI, 
    output F0, Q0, F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly, LSR_dly;

  vmuxregsre0031 cnt2_286__i2( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0031 cnt2_286__i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20030 cnt2_286_add_4_3( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_54 ( input B1, A1, output FCO );
  wire   GNDI;

  ccu20032 sub_248_add_2_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(B1), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20032 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h5999;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_55 ( input A1, A0, output FCO );
  wire   GNDI;

  ccu20033 sub_249_add_2_2( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20033 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5000;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_56 ( input A1, DI1, CE, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0031 cnt2_286__i0( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20029 cnt2_286_add_4_1( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), 
    .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_57 ( input FCI, output F0 );
  wire   GNDI;

  ccu20034 sub_248_add_2_cout( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20034 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h0000;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_58 ( input A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20035 add_124_4( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(GNDI), 
    .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20035 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hd2d2;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_59 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20036 sub_248_add_2_19( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20036 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hf555;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_60 ( input FCI, output F0, F1 );
  wire   GNDI;

  ccu20037 sub_128_add_2_17( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20037 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'hffff;
  defparam inst1.INIT1 = 16'hffff;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_61 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20004 sub_128_add_2_15( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_62 ( input C1, B1, A1, B0, A0, DI1, CE, LSR, CLK, output F1, Q1, 
    FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, CE_dly, LSR_dly;

  vmuxregsre0031 cnt1_i0_i3( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20038 add_124_2( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(C1), .D1(GNDI), .CI(GNDI), .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module ccu20038 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7000;
  defparam inst1.INIT1 = 16'h4b4b;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_63 ( input B1, A1, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20009 sub_128_add_2_13( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(B1), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_64 ( input FCI, output F0 );
  wire   GNDI;

  ccu20034 add_235_cout( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_65 ( input C1, B1, A1, C0, B0, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20039 add_235_13( .A0(A0), .B0(B0), .C0(C0), .D0(GNDI), .A1(A1), .B1(B1), 
    .C1(C1), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (C1 => FCO) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (B1 => FCO) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (C0 => F1) = (0:0:0,0:0:0);
    (C0 => FCO) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (B0 => F1) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20039 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h2d2d;
  defparam inst1.INIT1 = 16'h8787;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module SLICE_66 ( input A0, FCI, output F0 );
  wire   GNDI;

  ccu20040 add_124_16( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(GNDI), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20040 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5aaa;
  defparam inst1.INIT1 = 16'h0000;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module P1_SLICE_67 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre \P1/keysamplerpulsecnt_290__i31 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20026 \P1/keysamplerpulsecnt_290_add_4_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P1_SLICE_68 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P1/keysamplerpulsecnt_290__i30 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P1/keysamplerpulsecnt_290__i29 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P1/keysamplerpulsecnt_290_add_4_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P1_SLICE_69 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P1/keysamplerpulsecnt_290__i28 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P1/keysamplerpulsecnt_290__i27 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P1/keysamplerpulsecnt_290_add_4_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P1_SLICE_70 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P1/keysamplerpulsecnt_290__i26 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P1/keysamplerpulsecnt_290__i25 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P1/keysamplerpulsecnt_290_add_4_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P1_SLICE_71 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P1/keysamplerpulsecnt_290__i24 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P1/keysamplerpulsecnt_290__i23 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P1/keysamplerpulsecnt_290_add_4_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P1_SLICE_72 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P1/keysamplerpulsecnt_290__i22 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P1/keysamplerpulsecnt_290__i21 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P1/keysamplerpulsecnt_290_add_4_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P1_SLICE_73 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P1/keysamplerpulsecnt_290__i20 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P1/keysamplerpulsecnt_290__i19 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P1/keysamplerpulsecnt_290_add_4_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P1_SLICE_74 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P1/keysamplerpulsecnt_290__i18 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P1/keysamplerpulsecnt_290__i17 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P1/keysamplerpulsecnt_290_add_4_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P1_SLICE_75 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P1/keysamplerpulsecnt_290__i16 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P1/keysamplerpulsecnt_290__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P1/keysamplerpulsecnt_290_add_4_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P1_SLICE_76 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P1/keysamplerpulsecnt_290__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P1/keysamplerpulsecnt_290__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P1/keysamplerpulsecnt_290_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P1_SLICE_77 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P1/keysamplerpulsecnt_290__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P1/keysamplerpulsecnt_290__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P1/keysamplerpulsecnt_290_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P1_SLICE_78 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P1/keysamplerpulsecnt_290__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P1/keysamplerpulsecnt_290__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P1/keysamplerpulsecnt_290_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P1_SLICE_79 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P1/keysamplerpulsecnt_290__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P1/keysamplerpulsecnt_290__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P1/keysamplerpulsecnt_290_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P1_SLICE_80 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P1/keysamplerpulsecnt_290__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P1/keysamplerpulsecnt_290__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P1/keysamplerpulsecnt_290_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P1_SLICE_81 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P1/keysamplerpulsecnt_290__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P1/keysamplerpulsecnt_290__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P1/keysamplerpulsecnt_290_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P1_SLICE_82 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P1/keysamplerpulsecnt_290__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P1/keysamplerpulsecnt_290__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P1/keysamplerpulsecnt_290_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P1_SLICE_83 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre \P1/keysamplerpulsecnt_290__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20029 \P1/keysamplerpulsecnt_290_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P1_SLICE_84 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P1/add_854_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20041 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module P1_SLICE_85 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20008 \P1/add_854_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P1_SLICE_86 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20042 \P1/add_854_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20042 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'h5aaa;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module P1_SLICE_87 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20042 \P1/add_854_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P1_SLICE_88 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20042 \P1/add_854_4 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P1_SLICE_89 ( input A1, B0, A0, output FCO );
  wire   GNDI;

  ccu20043 \P1/add_854_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20043 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h7000;
  defparam inst1.INIT1 = 16'h5555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module P1_SLICE_90 ( input FCI, output F0 );
  wire   GNDI;

  ccu20034 \P1/add_854_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module P1_SLICE_91 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20044 \P1/add_854_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module ccu20044 ( input A0, B0, C0, D0, A1, B1, C1, D1, CI, output S0, S1, CO1 );

  CCU2D inst1( .CIN(CI), .A0(A0), .B0(B0), .C0(C0), .D0(D0), .A1(A1), .B1(B1), 
    .C1(C1), .D1(D1), .S0(S0), .S1(S1), .COUT(CO1));
  defparam inst1.INIT0 = 16'h5555;
  defparam inst1.INIT1 = 16'hf555;
  defparam inst1.INJECT1_0 = "NO";
  defparam inst1.INJECT1_1 = "NO";
endmodule

module P1_SLICE_92 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P1/add_854_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P1_SLICE_93 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P1/add_854_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P1_SLICE_94 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P1/add_854_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P1_SLICE_95 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P1/add_854_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P1_SLICE_96 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P1/add_854_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P2_SLICE_97 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P2/add_855_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P2_SLICE_98 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P2/add_855_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_99 ( input A1, A0, M0, CLK, FCI, output Q0, FCO );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \P1/keystore_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20008 \P2/add_855_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P2_SLICE_100 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre \P2/keysamplerpulsecnt_289__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20029 \P2/keysamplerpulsecnt_289_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P2_SLICE_101 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P2/keysamplerpulsecnt_289__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P2/keysamplerpulsecnt_289__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P2/keysamplerpulsecnt_289_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P2_SLICE_102 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20042 \P2/add_855_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P2_SLICE_103 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20042 \P2/add_855_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P2_SLICE_104 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20042 \P2/add_855_4 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P2_SLICE_105 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P2/keysamplerpulsecnt_289__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P2/keysamplerpulsecnt_289__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P2/keysamplerpulsecnt_289_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P2_SLICE_106 ( input A1, B0, A0, output FCO );
  wire   GNDI;

  ccu20043 \P2/add_855_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P2_SLICE_107 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P2/keysamplerpulsecnt_289__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P2/keysamplerpulsecnt_289__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P2/keysamplerpulsecnt_289_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P2_SLICE_108 ( input FCI, output F0 );
  wire   GNDI;

  ccu20034 \P2/add_855_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module P2_SLICE_109 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20044 \P2/add_855_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P2_SLICE_110 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P2/add_855_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P2_SLICE_111 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P2/add_855_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P2_SLICE_112 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P2/add_855_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P2_SLICE_113 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre \P2/keysamplerpulsecnt_289__i31 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20026 \P2/keysamplerpulsecnt_289_add_4_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P2_SLICE_114 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P2/keysamplerpulsecnt_289__i30 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P2/keysamplerpulsecnt_289__i29 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P2/keysamplerpulsecnt_289_add_4_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P2_SLICE_115 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P2/keysamplerpulsecnt_289__i28 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P2/keysamplerpulsecnt_289__i27 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P2/keysamplerpulsecnt_289_add_4_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P2_SLICE_116 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P2/keysamplerpulsecnt_289__i26 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P2/keysamplerpulsecnt_289__i25 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P2/keysamplerpulsecnt_289_add_4_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P2_SLICE_117 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P2/keysamplerpulsecnt_289__i24 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P2/keysamplerpulsecnt_289__i23 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P2/keysamplerpulsecnt_289_add_4_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P2_SLICE_118 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P2/keysamplerpulsecnt_289__i22 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P2/keysamplerpulsecnt_289__i21 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P2/keysamplerpulsecnt_289_add_4_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P2_SLICE_119 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P2/add_855_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P2_SLICE_120 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P2/keysamplerpulsecnt_289__i20 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P2/keysamplerpulsecnt_289__i19 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P2/keysamplerpulsecnt_289_add_4_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P2_SLICE_121 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P2/keysamplerpulsecnt_289__i18 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P2/keysamplerpulsecnt_289__i17 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P2/keysamplerpulsecnt_289_add_4_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P2_SLICE_122 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P2/keysamplerpulsecnt_289__i16 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P2/keysamplerpulsecnt_289__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P2/keysamplerpulsecnt_289_add_4_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P2_SLICE_123 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P2/keysamplerpulsecnt_289__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P2/keysamplerpulsecnt_289__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P2/keysamplerpulsecnt_289_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P2_SLICE_124 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P2/keysamplerpulsecnt_289__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P2/keysamplerpulsecnt_289__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P2/keysamplerpulsecnt_289_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P2_SLICE_125 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P2/keysamplerpulsecnt_289__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P2/keysamplerpulsecnt_289__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P2/keysamplerpulsecnt_289_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P2_SLICE_126 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P2/keysamplerpulsecnt_289__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P2/keysamplerpulsecnt_289__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P2/keysamplerpulsecnt_289_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_127 ( input A1, A0, FCI, output F0, F1, FCO );
  wire   GNDI;

  ccu20008 add_124_14( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P3_SLICE_128 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P3/keysamplerpulsecnt_288__i8 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P3/keysamplerpulsecnt_288__i7 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P3/keysamplerpulsecnt_288_add_4_9 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_129 ( input A0, DI0, LSR, CLK, FCI, output F0, Q0 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, LSR_dly;

  vmuxregsre \P3/keysamplerpulsecnt_288__i31 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20026 \P3/keysamplerpulsecnt_288_add_4_33 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(), .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_130 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P3/keysamplerpulsecnt_288__i6 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P3/keysamplerpulsecnt_288__i5 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P3/keysamplerpulsecnt_288_add_4_7 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_131 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P3/keysamplerpulsecnt_288__i30 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P3/keysamplerpulsecnt_288__i29 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P3/keysamplerpulsecnt_288_add_4_31 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_132 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P3/keysamplerpulsecnt_288__i4 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P3/keysamplerpulsecnt_288__i3 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P3/keysamplerpulsecnt_288_add_4_5 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_133 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P3/keysamplerpulsecnt_288__i28 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P3/keysamplerpulsecnt_288__i27 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P3/keysamplerpulsecnt_288_add_4_29 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_134 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P3/keysamplerpulsecnt_288__i2 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P3/keysamplerpulsecnt_288__i1 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P3/keysamplerpulsecnt_288_add_4_3 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_135 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P3/keysamplerpulsecnt_288__i26 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P3/keysamplerpulsecnt_288__i25 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P3/keysamplerpulsecnt_288_add_4_27 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_136 ( input A1, DI1, LSR, CLK, output F1, Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, LSR_dly;

  vmuxregsre \P3/keysamplerpulsecnt_288__i0 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  ccu20029 \P3/keysamplerpulsecnt_288_add_4_1 ( .A0(GNDI), .B0(GNDI), 
    .C0(GNDI), .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), 
    .S0(), .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_137 ( input FCI, output F0 );
  wire   GNDI;

  ccu20034 \P3/add_853_cout ( .A0(GNDI), .B0(GNDI), .C0(GNDI), .D0(GNDI), 
    .A1(GNDI), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), .S1(), 
    .CO1());
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (FCI => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module P3_SLICE_138 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P3/keysamplerpulsecnt_288__i24 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P3/keysamplerpulsecnt_288__i23 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P3/keysamplerpulsecnt_288_add_4_25 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_139 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20044 \P3/add_853_24 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P3_SLICE_140 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P3/add_853_22 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P3_SLICE_141 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P3/keysamplerpulsecnt_288__i22 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P3/keysamplerpulsecnt_288__i21 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P3/keysamplerpulsecnt_288_add_4_23 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_142 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P3/keysamplerpulsecnt_288__i20 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P3/keysamplerpulsecnt_288__i19 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P3/keysamplerpulsecnt_288_add_4_21 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_143 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P3/add_853_20 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P3_SLICE_144 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P3/add_853_18 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P3_SLICE_145 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P3/keysamplerpulsecnt_288__i18 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P3/keysamplerpulsecnt_288__i17 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P3/keysamplerpulsecnt_288_add_4_19 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_146 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P3/add_853_16 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P3_SLICE_147 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P3/add_853_14 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P3_SLICE_148 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P3/keysamplerpulsecnt_288__i16 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P3/keysamplerpulsecnt_288__i15 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P3/keysamplerpulsecnt_288_add_4_17 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_149 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P3/keysamplerpulsecnt_288__i14 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P3/keysamplerpulsecnt_288__i13 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P3/keysamplerpulsecnt_288_add_4_15 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_150 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P3/keysamplerpulsecnt_288__i12 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P3/keysamplerpulsecnt_288__i11 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P3/keysamplerpulsecnt_288_add_4_13 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_151 ( input A1, A0, DI1, DI0, LSR, CLK, FCI, output F0, Q0, F1, 
    Q1, FCO );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, LSR_dly;

  vmuxregsre \P3/keysamplerpulsecnt_288__i10 ( .D0(VCCI), .D1(DI1_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P3/keysamplerpulsecnt_288__i9 ( .D0(VCCI), .D1(DI0_dly), 
    .SD(VCCI), .SP(VCCI), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  ccu20027 \P3/keysamplerpulsecnt_288_add_4_11 ( .A0(A0), .B0(GNDI), .C0(GNDI), 
    .D0(GNDI), .A1(A1), .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(F0), 
    .S1(F1), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => F1) = (0:0:0,0:0:0);
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (A0 => F1) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (LSR => Q0) = (0:0:0,0:0:0);
    (LSR => Q1) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    (FCI => F0) = (0:0:0,0:0:0);
    (FCI => F1) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_152 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20041 \P3/add_853_12 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_153 ( input A1, A0, M0, CLK, FCI, output Q0, FCO );
  wire   VCCI, GNDI, M0_dly, CLK_dly;

  vmuxregsre \P2/keystore_i2 ( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  ccu20008 \P3/add_853_10 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_154 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20042 \P3/add_853_8 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P3_SLICE_155 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20042 \P3/add_853_6 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P3_SLICE_156 ( input A1, A0, FCI, output FCO );
  wire   GNDI;

  ccu20042 \P3/add_853_4 ( .A0(A0), .B0(GNDI), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(FCI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
    (FCI => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P3_SLICE_157 ( input A1, B0, A0, output FCO );
  wire   GNDI;

  ccu20043 \P3/add_853_2 ( .A0(A0), .B0(B0), .C0(GNDI), .D0(GNDI), .A1(A1), 
    .B1(GNDI), .C1(GNDI), .D1(GNDI), .CI(GNDI), .S0(), .S1(), .CO1(FCO));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (A1 => FCO) = (0:0:0,0:0:0);
    (B0 => FCO) = (0:0:0,0:0:0);
    (A0 => FCO) = (0:0:0,0:0:0);
  endspecify

endmodule

module P1_SLICE_158 ( input A0, DI0, M1, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut4 \P1/btnstate_I_0_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \P1/keystore_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P1/keystore_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut4 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5555) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module P2_SLICE_160 ( input A0, DI0, M1, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut4 \P2/btnstate_I_0_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \P2/keystore_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P2/keystore_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module P3_SLICE_162 ( input A0, DI0, M1, CLK, output F0, Q0, Q1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, M1_dly;

  lut4 \P3/btnstate_I_0_1_lut ( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre \P3/keystore_i1 ( .D0(M1_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre \P3/keystore_i0 ( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, M1, 0:0:0, 0:0:0,,,, CLK_dly, M1_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_164 ( input A0, DI0, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut4 i1_1_lut( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0045 a_to_g_i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module vmuxregsre0045 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3DX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .CD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module SLICE_165 ( input B1, A1, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40046 i1_2_lut_rep_18_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 i1_3_lut_3_lut_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre clk0_96( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40046 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h4444) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40047 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h6666) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_166 ( input B0, A0, DI0, CE, LSR, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40047 i889_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0031 cnt1_i0_i2( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_167 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40048 cnt1_16__I_0_115_i6_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 cnt1_16__I_0_115_i5_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0045 cnt1_i0_i5( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0045 cnt1_i0_i4( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40048 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hCAC0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40049 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3A30) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_168 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40048 cnt1_16__I_0_115_i8_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40048 cnt1_16__I_0_115_i7_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0045 cnt1_i0_i7( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0045 cnt1_i0_i6( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_169 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40049 cnt1_16__I_0_115_i10_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 cnt1_16__I_0_115_i9_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0045 cnt1_i0_i9( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0045 cnt1_i0_i8( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_170 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40048 cnt1_16__I_0_115_i12_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40049 cnt1_16__I_0_115_i11_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0045 cnt1_i0_i11( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0045 cnt1_i0_i10( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_171 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40048 cnt1_16__I_0_115_i15_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40048 cnt1_16__I_0_115_i13_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0045 cnt1_i0_i14( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0045 cnt1_i0_i12( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_172 ( input B1, A1, B0, A0, DI0, M0, CE, CLK, output OFX0, Q0 );
  wire   GNDI, \SLICE_172/SLICE_172_K1_H1 , 
         \SLICE_172/cnt1_16__I_0_115_i14/GATE_H0 , VCCI, DI0_dly, CLK_dly, 
         CE_dly;

  lut40050 SLICE_172_K1( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_172/SLICE_172_K1_H1 ));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40051 \cnt1_16__I_0_115_i14/GATE ( .A(A0), .B(B0), .C(GNDI), .D(GNDI), 
    .Z(\SLICE_172/cnt1_16__I_0_115_i14/GATE_H0 ));
  vmuxregsre0045 cnt1_i0_i13( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  selmux2 SLICE_172_K0K1MUX( .D0(\SLICE_172/cnt1_16__I_0_115_i14/GATE_H0 ), 
    .D1(\SLICE_172/SLICE_172_K1_H1 ), .SD(M0), .Z(OFX0));

  specify
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40050 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9999) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40051 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module selmux2 ( input D0, D1, SD, output Z );

  MUX21 INST1( .D0(D0), .D1(D1), .SD(SD), .Z(Z));
endmodule

module SLICE_173 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI1, DI0, CE, CLK, 
    output F0, Q0, F1, Q1 );
  wire   VCCI, GNDI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40048 cnt1_16__I_0_115_i17_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40048 cnt1_16__I_0_115_i16_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0045 cnt1_i0_i16( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0045 cnt1_i0_i15( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_174 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40052 i759_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 i796_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0045 cnt2_286__i5( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0045 cnt2_286__i4( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40052 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8888) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_175 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40052 i761_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 i760_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0045 cnt2_286__i7( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0045 cnt2_286__i6( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_176 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40052 i763_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 i762_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0045 cnt2_286__i9( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0045 cnt2_286__i8( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(CE_dly), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_177 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40052 i1_2_lut_adj_14( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 i1_2_lut_adj_15( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0045 cnt2_286__i11( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0045 cnt2_286__i10( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_178 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40052 i1_2_lut_adj_11( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 i1_2_lut_adj_12( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0045 cnt2_286__i13( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0045 cnt2_286__i12( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_179 ( input B1, A1, B0, A0, DI1, DI0, CE, CLK, output F0, Q0, F1, 
    Q1 );
  wire   GNDI, VCCI, DI1_dly, CLK_dly, DI0_dly, CE_dly;

  lut40052 i1_2_lut_adj_8( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40052 i1_2_lut_adj_9( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0045 cnt2_286__i15( .D0(VCCI), .D1(DI1_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q1));
  vcc DRIVEVCC( .PWR1(VCCI));
  vmuxregsre0045 cnt2_286__i14( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    (CLK => Q1) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI1, 0:0:0, 0:0:0,,,, CLK_dly, DI1_dly);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_180 ( input B0, A0, DI0, CE, CLK, output F0, Q0 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40052 i1_2_lut_adj_7( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0045 cnt2_286__i16( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_181 ( input D1, C1, B1, A1, C0, B0, A0, DI0, CE, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40053 \P3/i1_2_lut_rep_21_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40054 i2_3_lut_4_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0031 cycle_pulse_287__i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40053 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h7F00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40054 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8686) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_182 ( input B1, A1, A0, DI0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40046 i751_2_lut_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 i880_1_lut_rep_35( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0031 cycle_pulse_287__i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_183 ( input B1, A1, D0, C0, B0, A0, DI0, CE, LSR, CLK, output F0, 
    Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly, LSR_dly;

  lut40055 i1_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40056 i705_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0025 direction_102( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(LSR_dly), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $setuphold (posedge CLK, LSR, 0:0:0, 0:0:0,,,, CLK_dly, LSR_dly);
    $width (posedge LSR, 0:0:0);
    $width (negedge LSR, 0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40055 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEEEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40056 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hAAA8) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_184 ( input M0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, M0_dly, CLK_dly;

  lut40057 i1( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40058 i2( .A(GNDI), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre display_104( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
  endspecify

endmodule

module lut40057 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0000) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40058 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module inverter ( input I, output Z );

  INV INST1( .A(I), .Z(Z));
endmodule

module SLICE_185 ( input D1, C1, B1, A1, D0, C0, B0, A0, DI0, CE, CLK, output 
    F0, Q0, F1 );
  wire   VCCI, GNDI, DI0_dly, CLK_dly, CE_dly;

  lut40059 i1_3_lut_rep_20_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40060 i2_3_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));
  vmuxregsre0031 duty_pulse_285__i1( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40059 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2220) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40060 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2DD0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_186 ( input B1, A1, A0, DI0, CE, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly, CE_dly;

  lut40052 i738_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 i864_1_lut( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre0031 duty_pulse_285__i0( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), 
    .SP(CE_dly), .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $setuphold (posedge CLK, CE, 0:0:0, 0:0:0,,,, CLK_dly, CE_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_187 ( input D1, C1, B1, A1, C0, B0, A0, DI0, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40061 i1_2_lut_rep_19_3_lut_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40062 \P3/i2_3_lut_rep_23 ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre key_down1_ls_99( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40061 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0E00) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40062 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h8080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_188 ( input C1, B1, A1, C0, B0, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, DI0_dly, CLK_dly;

  lut40062 \P1/i2_3_lut ( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40062 \P2/i2_3_lut_rep_22 ( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  vmuxregsre key_up1_ls_98( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module SLICE_189 ( input D1, C1, B1, A1, C0, B0, A0, M0, CLK, output F0, Q0, 
    F1 );
  wire   GNDI, VCCI, M0_dly, CLK_dly;

  lut40063 i10_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40064 cnt2_16__I_0_122_i10_3_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));
  vmuxregsre0065 a_to_g_i2( .D0(M0_dly), .D1(VCCI), .SD(GNDI), .SP(VCCI), 
    .CK(CLK_dly), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $setuphold (posedge CLK, M0, 0:0:0, 0:0:0,,,, CLK_dly, M0_dly);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
  endspecify

endmodule

module lut40063 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40064 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD4D4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module vmuxregsre0065 ( input D0, D1, SD, SP, CK, LSR, output Q );

  FL1P3BX INST01( .D0(D0), .D1(D1), .SP(SP), .CK(CK), .SD(SD), .PD(LSR), .Q(Q));
  defparam INST01.GSR = "ENABLED";
endmodule

module SLICE_190 ( input B1, A1, A0, DI0, CLK, output F0, Q0, F1 );
  wire   GNDI, VCCI, CLK_NOTIN, DI0_dly, CLK_dly;

  lut40066 cnt1_16__I_1_2_lut_rep_16( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut4 pulse_out_I_0_1_lut( .A(A0), .B(GNDI), .C(GNDI), .D(GNDI), .Z(F0));
  vmuxregsre pulse_out_103( .D0(VCCI), .D1(DI0_dly), .SD(VCCI), .SP(VCCI), 
    .CK(CLK_NOTIN), .LSR(GNDI), .Q(Q0));
  vcc DRIVEVCC( .PWR1(VCCI));
  inverter CLK_INVERTERIN( .I(CLK_dly), .Z(CLK_NOTIN));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
    (CLK => Q0) = (0:0:0,0:0:0);
    $width (posedge CLK, 0:0:0);
    $width (negedge CLK, 0:0:0);
    $setuphold (negedge CLK, DI0, 0:0:0, 0:0:0,,,, CLK_dly, DI0_dly);
  endspecify

endmodule

module lut40066 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h2222) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module cnt2_16__I_0_122_i28_SLICE_191 ( input D1, C1, B1, A1, C0, B0, A0, M0, 
    output OFX0 );
  wire   \cnt2_16__I_0_122_i28/SLICE_191/cnt2_16__I_0_122_i28/SLICE_191_K1_H1 , 
         GNDI, \cnt2_16__I_0_122_i28/SLICE_191/cnt2_16__I_0_122_i28/GATE_H0 ;

  lut40067 \cnt2_16__I_0_122_i28/SLICE_191_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\cnt2_16__I_0_122_i28/SLICE_191/cnt2_16__I_0_122_i28/SLICE_191_K1_H1 ));
  lut40068 \cnt2_16__I_0_122_i28/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\cnt2_16__I_0_122_i28/SLICE_191/cnt2_16__I_0_122_i28/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \cnt2_16__I_0_122_i28/SLICE_191_K0K1MUX ( 
    .D0(\cnt2_16__I_0_122_i28/SLICE_191/cnt2_16__I_0_122_i28/GATE_H0 ), 
    .D1(\cnt2_16__I_0_122_i28/SLICE_191/cnt2_16__I_0_122_i28/SLICE_191_K1_H1 ), 
    .SD(M0), .Z(OFX0));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40067 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF4B0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40068 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hD4D4) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module cnt2_16__I_0_122_i32_SLICE_192 ( input D1, C1, B1, A1, C0, B0, A0, M1, 
    M0, FXB, FXA, output OFX0, OFX1 );
  wire   \cnt2_16__I_0_122_i32/SLICE_192/cnt2_16__I_0_122_i32/SLICE_192_K1_H1 , 
         GNDI, \cnt2_16__I_0_122_i32/SLICE_192/cnt2_16__I_0_122_i32/GATE_H0 ;

  lut40067 \cnt2_16__I_0_122_i32/SLICE_192_K1 ( .A(A1), .B(B1), .C(C1), .D(D1), 
    .Z(\cnt2_16__I_0_122_i32/SLICE_192/cnt2_16__I_0_122_i32/SLICE_192_K1_H1 ));
  lut40068 \cnt2_16__I_0_122_i32/GATE ( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(\cnt2_16__I_0_122_i32/SLICE_192/cnt2_16__I_0_122_i32/GATE_H0 ));
  gnd DRIVEGND( .PWR0(GNDI));
  selmux2 \cnt2_16__I_0_122_i32/SLICE_192_K0K1MUX ( 
    .D0(\cnt2_16__I_0_122_i32/SLICE_192/cnt2_16__I_0_122_i32/GATE_H0 ), 
    .D1(\cnt2_16__I_0_122_i32/SLICE_192/cnt2_16__I_0_122_i32/SLICE_192_K1_H1 ), 
    .SD(M0), .Z(OFX0));
  selmux2 \cnt2_16__I_0_122_i32/SLICE_192_FXMUX ( .D0(FXA), .D1(FXB), .SD(M1), 
    .Z(OFX1));

  specify
    (D1 => OFX0) = (0:0:0,0:0:0);
    (C1 => OFX0) = (0:0:0,0:0:0);
    (B1 => OFX0) = (0:0:0,0:0:0);
    (A1 => OFX0) = (0:0:0,0:0:0);
    (C0 => OFX0) = (0:0:0,0:0:0);
    (B0 => OFX0) = (0:0:0,0:0:0);
    (A0 => OFX0) = (0:0:0,0:0:0);
    (M1 => OFX1) = (0:0:0,0:0:0);
    (M0 => OFX0) = (0:0:0,0:0:0);
    (FXB => OFX1) = (0:0:0,0:0:0);
    (FXA => OFX1) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_193 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40069 i1079_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 cnt2_16__I_0_122_i25_2_lut_rep_29( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40069 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_194 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40063 i14_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40070 i1_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40070 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h20F0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_195 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40071 i2_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40071 i3_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40071 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hFFFB) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_196 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40055 i2_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 i7_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_197 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40069 i1066_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 cnt2_16__I_0_122_i17_2_lut_rep_30( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_198 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40072 i1123_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 cnt2_16__I_0_122_i19_2_lut_rep_31( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40072 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5557) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_199 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 cnt2_16__I_0_122_i23_2_lut_rep_28( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40073 i1119_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40073 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFEE) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_200 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40074 i1055_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40047 cnt2_16__I_0_122_i11_2_lut_rep_32( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40074 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1001) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_201 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40075 i1_2_lut_3_lut_3_lut_adj_13( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40063 i3_4_lut_adj_10( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40075 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hEFEF) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_202 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40076 i3_4_lut_adj_16( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40077 i1_2_lut_3_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40076 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0080) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40077 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h1010) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_203 ( input D1, C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40078 i1125_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40079 i1126_2_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40078 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h5755) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module lut40079 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hF6F6) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_204 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40063 i9_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 i12_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_205 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40053 \P2/i1_2_lut_4_lut ( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40080 i778_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40080 ( input A, B, C, D, output Z );

  ROM16X1A #(16'hC4C0) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_206 ( input C1, B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40064 cnt2_16__I_0_122_i24_3_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 cnt2_16__I_0_122_i22_3_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_207 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40081 i1122_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40052 i784_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40081 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h3130) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_208 ( input D1, C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40063 i1048_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40055 i1044_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_209 ( input C1, B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40064 cnt2_16__I_0_122_i12_3_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 i1076_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40082 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9009) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_210 ( input B1, A1, D0, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 cnt2_16__I_0_122_i27_2_lut_rep_25( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40082 i1090_2_lut_3_lut_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_211 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40055 i792_2_lut_rep_36( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40066 i750_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_212 ( input C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40079 i1124_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 cnt2_16__I_0_122_i33_2_lut_rep_24( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_213 ( input C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40077 i303_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40055 i1_2_lut_rep_17( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_214 ( input C1, B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40079 i1120_2_lut_3_lut( .A(A1), .B(B1), .C(C1), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 cnt2_16__I_0_122_i29_2_lut_rep_26( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));

  specify
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_215 ( input B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 cnt2_16__I_0_122_i15_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 cnt2_16__I_0_122_i14_3_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_216 ( input D1, C1, B1, A1, D0, C0, B0, A0, output F0, F1 );

  lut40083 cnt2_16__I_0_122_i8_4_lut( .A(A1), .B(B1), .C(C1), .D(D1), .Z(F1));
  lut40063 i6_4_lut( .A(A0), .B(B0), .C(C0), .D(D0), .Z(F0));

  specify
    (D1 => F1) = (0:0:0,0:0:0);
    (C1 => F1) = (0:0:0,0:0:0);
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (D0 => F0) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40083 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h0C8E) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_217 ( input B1, A1, C0, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40084 cnt2_16__I_0_122_i31_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), 
    .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40064 cnt2_16__I_0_122_i18_3_lut_3_lut( .A(A0), .B(B0), .C(C0), .D(GNDI), 
    .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (C0 => F0) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module lut40084 ( input A, B, C, D, output Z );

  ROM16X1A #(16'h9999) INST10( .AD0(A), .AD1(B), .AD2(C), .AD3(D), .DO0(Z));
endmodule

module SLICE_218 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40055 i6_2_lut( .A(A1), .B(B1), .C(GNDI), .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40055 i7_2_lut( .A(A0), .B(B0), .C(GNDI), .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module SLICE_219 ( input B1, A1, B0, A0, output F0, F1 );
  wire   GNDI;

  lut40047 cnt2_16__I_0_122_i13_2_lut_rep_33( .A(A1), .B(B1), .C(GNDI), 
    .D(GNDI), .Z(F1));
  gnd DRIVEGND( .PWR0(GNDI));
  lut40047 cnt2_16__I_0_122_i21_2_lut_rep_27( .A(A0), .B(B0), .C(GNDI), 
    .D(GNDI), .Z(F0));

  specify
    (B1 => F1) = (0:0:0,0:0:0);
    (A1 => F1) = (0:0:0,0:0:0);
    (B0 => F0) = (0:0:0,0:0:0);
    (A0 => F0) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_1_ ( input PADDO, output atog1 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_1( .I(PADDO), .T(GNDI), .PAD(atog1));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog1) = (0:0:0,0:0:0);
  endspecify

endmodule

module xo2iobuf ( input I, T, output PAD );

  OBZPD INST5( .I(I), .T(T), .O(PAD));
endmodule

module a_to_g_0_ ( input PADDO, output atog0 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_0( .I(PADDO), .T(GNDI), .PAD(atog0));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog0) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_2_ ( input PADDO, output atog2 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_2( .I(PADDO), .T(GNDI), .PAD(atog2));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog2) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_3_ ( input PADDO, output atog3 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_3( .I(PADDO), .T(GNDI), .PAD(atog3));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog3) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_4_ ( input PADDO, output atog4 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_4( .I(PADDO), .T(GNDI), .PAD(atog4));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog4) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_5_ ( input PADDO, output atog5 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_5( .I(PADDO), .T(GNDI), .PAD(atog5));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog5) = (0:0:0,0:0:0);
  endspecify

endmodule

module a_to_g_6_ ( input PADDO, output atog6 );
  wire   GNDI;

  xo2iobuf a_to_g_pad_6( .I(PADDO), .T(GNDI), .PAD(atog6));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => atog6) = (0:0:0,0:0:0);
  endspecify

endmodule

module menu_state ( input PADDO, output menu_state );
  wire   GNDI;

  xo2iobuf menu_state_pad( .I(PADDO), .T(GNDI), .PAD(menu_state));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => menu_state) = (0:0:0,0:0:0);
  endspecify

endmodule

module seg ( input PADDO, output seg );
  wire   GNDI;

  xo2iobuf seg_pad( .I(PADDO), .T(GNDI), .PAD(seg));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => seg) = (0:0:0,0:0:0);
  endspecify

endmodule

module pulse_out ( input PADDO, output pulse_out );
  wire   GNDI;

  xo2iobuf pulse_out_pad( .I(PADDO), .T(GNDI), .PAD(pulse_out));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => pulse_out) = (0:0:0,0:0:0);
  endspecify

endmodule

module display ( input PADDO, output display );
  wire   GNDI;

  xo2iobuf display_pad( .I(PADDO), .T(GNDI), .PAD(display));
  gnd DRIVEGND( .PWR0(GNDI));

  specify
    (PADDO => display) = (0:0:0,0:0:0);
  endspecify

endmodule

module rst_n ( output PADDI, input rst_n );

  xo2iobuf0085 rst_n_pad( .Z(PADDI), .PAD(rst_n));

  specify
    (rst_n => PADDI) = (0:0:0,0:0:0);
    $width (posedge rst_n, 0:0:0);
    $width (negedge rst_n, 0:0:0);
  endspecify

endmodule

module xo2iobuf0085 ( output Z, input PAD );

  IBPD INST1( .I(PAD), .O(Z));
endmodule

module clk ( output PADDI, input clk );

  xo2iobuf0085 clk_pad( .Z(PADDI), .PAD(clk));

  specify
    (clk => PADDI) = (0:0:0,0:0:0);
    $width (posedge clk, 0:0:0);
    $width (negedge clk, 0:0:0);
  endspecify

endmodule

module key_menu ( output PADDI, input key_menu );

  xo2iobuf0085 key_menu_pad( .Z(PADDI), .PAD(key_menu));

  specify
    (key_menu => PADDI) = (0:0:0,0:0:0);
    $width (posedge key_menu, 0:0:0);
    $width (negedge key_menu, 0:0:0);
  endspecify

endmodule

module key_up ( output PADDI, input key_up );

  xo2iobuf0085 key_up_pad( .Z(PADDI), .PAD(key_up));

  specify
    (key_up => PADDI) = (0:0:0,0:0:0);
    $width (posedge key_up, 0:0:0);
    $width (negedge key_up, 0:0:0);
  endspecify

endmodule

module key_down ( output PADDI, input key_down );

  xo2iobuf0085 key_down_pad( .Z(PADDI), .PAD(key_down));

  specify
    (key_down => PADDI) = (0:0:0,0:0:0);
    $width (posedge key_down, 0:0:0);
    $width (negedge key_down, 0:0:0);
  endspecify

endmodule

module GSR_INST ( input GSRNET );

  GSR5MODE GSR_INST_GSRMODE( .GSR(GSRNET));

  specify
  endspecify

endmodule

module GSR5MODE ( input GSR );
  wire   GSRMODE;

  BUFBA INST10( .A(GSR), .Z(GSRMODE));
  GSR INST20( .GSR(GSRMODE));
endmodule
